{"version":3,"sources":["components/ECharts/Bar.js","components/ECharts/Butterfly.js","components/ECharts/ButterflyStack.js","components/ECharts/HelloECharts.js","components/ECharts/HorizontalBarStack.js","components/ECharts/VerticalBarStack.js","components/ECharts/ECharts.js","components/Nivo/Nivo.js","components/ReactTimeSeries/ReactTimeSeries.js","components/Victory/Bar.js","components/Recharts/BrushBar.js","components/Recharts/CustomLabel.js","components/Recharts/CustomTooltip.js","components/Recharts/HighlightAndZoom.js","components/Recharts/Line.js","components/Recharts/Recharts.js","components/Victory/Victory.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["Bar","state","visible","toggleVisibility","panel","_this","setState","Object","defineProperty","getOption","xAxisData","data1","data2","i","push","Math","sin","cos","title","text","legend","data","align","toolbox","feature","magicType","type","dataView","saveAsImage","pixelRatio","tooltip","xAxis","silent","splitLine","show","yAxis","series","name","animationDelay","idx","animationEasing","animationDelayUpdate","_this2","this","react_default","a","createElement","lib_default","option","onClick","hello","Component","Butterfly","labelRight","normal","position","subtext","sublink","trigger","axisPointer","grid","top","bottom","lineStyle","axisLine","axisLabel","axisTick","stack","label","formatter","value","ButterflyStack","left","right","containLabel","HelloECharts","HorizontalBarStack","VerticalBarStack","data3","data4","random","toFixed","itemStyle","emphasis","barBorderWidth","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","backgroundColor","brush","xAxisIndex","onZero","splitArea","inverse","visualMap","dimension","itemHeight","calculable","min","max","inRange","colorLightness","outOfRange","color","controller","handleBrushSelected","params","echarts_instance","echarts_react","getEchartsInstance","brushed","brushComponent","batch","sIdx","selected","length","rawIndices","dataIndex","join","setOption","width","textStyle","fontSize","onEvents","brushSelected","onBrushSelected","ref","e","ChartsWrapper","styled","div","_templateObject","ECharts","href","style","display","margin","marginLeft","HelloECharts_HelloECharts","Bar_Bar","HorizontalBarStack_HorizontalBarStack","Butterfly_Butterfly","ButterflyStack_ButterflyStack","VerticalBarStack_VerticalBarStack","Nivo","height","src","frameborder","ReactTimeSeries","Bar_templateObject","quarter","earnings","data2012","data2013","data2014","data2015","sampleData","x","y","Bar_ChartsWrapper","victory_chart","domainPadding","theme","VictoryTheme","material","victory_axis","tickValues","tickFormat","dependentAxis","concat","victory_bar","victory_stack","colorScale","fill","events","target","eventHandlers","mutation","props","horizontal","labels","d","labelComponent","victory_label","dy","stroke","fillOpacity","strokeWidth","cx","cy","r","standalone","padding","victory_area","y0","uv","pv","BrushBar","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","verticalAlign","wrapperStyle","lineHeight","ReferenceLine","Brush","cartesian_Bar","renderCustomizedLabel","textAnchor","dominantBaseline","split","CustomLabel","amt","activeIndex","handleClick","index","minPointSize","LabelList","content","CustomTooltip","getIntroOfPage","active","_this$props","payload","className","BarChartCustomTooltip","CustomTooltip_CustomTooltip","barSize","cost","impression","getAxisYDomain","from","to","offset","refData","slice","_ref","forEach","initialState","refAreaLeft","refAreaRight","top2","bottom2","animation","HighlightAndZoom","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$state","_getAxisYDomain","_getAxisYDomain2","slicedToArray","_getAxisYDomain3","_getAxisYDomain4","_this$state2","barIndex","zoomOut","bind","LineChart","onMouseDown","activeLabel","onMouseMove","onMouseUp","zoom","allowDataOverflow","domain","yAxisId","orientation","Line","animationDuration","ReferenceArea","x1","x2","strokeOpacity","React","age","speed","RechartsLine","activeDot","layout","syncId","AreaChart","Area","HighlightAndZoom_HighlightAndZoom","dataStackedBySign","Recharts","stackId","BrushBar_BrushBar","CustomTooltip_BarChartCustomTooltip","CustomLabel_CustomLabel","stackOffset","ComposedChart","angle","Line_RechartsLine","Victory","Victory_Bar_Bar","routes","path","AppRouter","es","Recharts_Recharts","Victory_Victory","ECharts_ECharts","ReactTimeSeries_ReactTimeSeries","Nivo_Nivo","AppWrapper","App_templateObject","NavWrapper","_templateObject2","App","AppRouter_AppRouter","map","route","getProps","isCurrent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3c4c5bd.chunk.js","sourcesContent":["import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Bar extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    let xAxisData = [];\r\n    let data1 = [];\r\n    let data2 = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      xAxisData.push('类目' + i);\r\n      data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n      data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n    }\r\n    return {\r\n      title: {\r\n        text: '柱状图动画延迟',\r\n      },\r\n      legend: {\r\n        data: ['bar', 'bar2'],\r\n        align: 'left',\r\n      },\r\n      toolbox: {\r\n        // y: 'bottom',\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n          saveAsImage: {\r\n            pixelRatio: 2,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        silent: false,\r\n        splitLine: {\r\n          show: false,\r\n        },\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          data: data1,\r\n          animationDelay: function(idx) {\r\n            return idx * 10;\r\n          },\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          data: data2,\r\n          animationDelay: function(idx) {\r\n            return idx * 10 + 100;\r\n          },\r\n        },\r\n      ],\r\n      animationEasing: 'elasticOut',\r\n      animationDelayUpdate: function(idx) {\r\n        return idx * 5;\r\n      },\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{` getOption = () => {\r\n    let xAxisData = [];\r\n    let data1 = [];\r\n    let data2 = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      xAxisData.push('类目' + i);\r\n      data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n      data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n    }\r\n    return {\r\n      title: {\r\n        text: '柱状图动画延迟',\r\n      },\r\n      legend: {\r\n        data: ['bar', 'bar2'],\r\n        align: 'left',\r\n      },\r\n      toolbox: {\r\n        // y: 'bottom',\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n          saveAsImage: {\r\n            pixelRatio: 2,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        silent: false,\r\n        splitLine: {\r\n          show: false,\r\n        },\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          data: data1,\r\n          animationDelay: function(idx) {\r\n            return idx * 10;\r\n          },\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          data: data2,\r\n          animationDelay: function(idx) {\r\n            return idx * 10 + 100;\r\n          },\r\n        },\r\n      ],\r\n      animationEasing: 'elasticOut',\r\n      animationDelayUpdate: function(idx) {\r\n        return idx * 5;\r\n      },\r\n    };\r\n  };\r\n  render() {\r\n    return <ReactEcharts option={this.getOption()} />;\r\n  }`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Butterfly extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    var labelRight = {\r\n      normal: {\r\n        position: 'right',\r\n      },\r\n    };\r\n    return {\r\n      title: {\r\n        text: '交错正负轴标签',\r\n        subtext: 'From ExcelHome',\r\n        sublink: 'http://e.weibo.com/1341556070/AjwF2AgQm',\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      grid: {\r\n        top: 80,\r\n        bottom: 30,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        position: 'top',\r\n        splitLine: { lineStyle: { type: 'dashed' } },\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        axisLine: { show: false },\r\n        axisLabel: { show: false },\r\n        axisTick: { show: false },\r\n        splitLine: { show: false },\r\n        data: [\r\n          'ten',\r\n          'nine',\r\n          'eight',\r\n          'seven',\r\n          'six',\r\n          'five',\r\n          'four',\r\n          'three',\r\n          'two',\r\n          'one',\r\n        ],\r\n      },\r\n      series: [\r\n        {\r\n          name: '生活费',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              formatter: '{b}',\r\n            },\r\n          },\r\n          data: [\r\n            { value: -0.07, label: labelRight },\r\n            { value: -0.09, label: labelRight },\r\n            0.2,\r\n            0.44,\r\n            { value: -0.23, label: labelRight },\r\n            0.08,\r\n            { value: -0.17, label: labelRight },\r\n            0.47,\r\n            { value: -0.36, label: labelRight },\r\n            0.18,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`\r\ngetOption = () => {\r\n    var labelRight = {\r\n      normal: {\r\n        position: 'right',\r\n      },\r\n    };\r\n    return {\r\n      title: {\r\n        text: '交错正负轴标签',\r\n        subtext: 'From ExcelHome',\r\n        sublink: 'http://e.weibo.com/1341556070/AjwF2AgQm',\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      grid: {\r\n        top: 80,\r\n        bottom: 30,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        position: 'top',\r\n        splitLine: { lineStyle: { type: 'dashed' } },\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        axisLine: { show: false },\r\n        axisLabel: { show: false },\r\n        axisTick: { show: false },\r\n        splitLine: { show: false },\r\n        data: [\r\n          'ten',\r\n          'nine',\r\n          'eight',\r\n          'seven',\r\n          'six',\r\n          'five',\r\n          'four',\r\n          'three',\r\n          'two',\r\n          'one',\r\n        ],\r\n      },\r\n      series: [\r\n        {\r\n          name: '生活费',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              formatter: '{b}',\r\n            },\r\n          },\r\n          data: [\r\n            { value: -0.07, label: labelRight },\r\n            { value: -0.09, label: labelRight },\r\n            0.2,\r\n            0.44,\r\n            { value: -0.23, label: labelRight },\r\n            0.08,\r\n            { value: -0.17, label: labelRight },\r\n            0.47,\r\n            { value: -0.36, label: labelRight },\r\n            0.18,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />        `}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class ButterflyStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['one', 'two', 'three'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'value',\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'category',\r\n          axisTick: { show: false },\r\n          data: ['a', 'b', 'c', 'd', 'e', 'f', 'g'],\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'one',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside',\r\n            },\r\n          },\r\n          data: [200, 170, 240, 244, 200, 220, 210],\r\n        },\r\n        {\r\n          name: 'three',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n            },\r\n          },\r\n          data: [320, 302, 341, 374, 390, 450, 420],\r\n        },\r\n        {\r\n          name: 'two',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'left',\r\n            },\r\n          },\r\n          data: [-120, -132, -101, -134, -190, -230, -210],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['one', 'two', 'three'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'value',\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'category',\r\n          axisTick: { show: false },\r\n          data: ['a', 'b', 'c', 'd', 'e', 'f', 'g'],\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'one',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside',\r\n            },\r\n          },\r\n          data: [200, 170, 240, 244, 200, 220, 210],\r\n        },\r\n        {\r\n          name: 'three',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n            },\r\n          },\r\n          data: [320, 302, 341, 374, 390, 450, 420],\r\n        },\r\n        {\r\n          name: 'two',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'left',\r\n            },\r\n          },\r\n          data: [-120, -132, -101, -134, -190, -230, -210],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class HelloECharts extends Component {\r\n  state = {\r\n    hello: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts entry example',\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['Sales'],\r\n      },\r\n      xAxis: {\r\n        data: ['shirt', 'cardign', 'chiffon shirt', 'pants', 'heels', 'socks'],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'Sales',\r\n          type: 'bar',\r\n          data: [5, 20, 36, 10, 10, 20],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('hello')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n        {this.state.hello && (\r\n          <pre>\r\n            <code>\r\n              {`getOption = () => {\r\n          return {\r\n            title: {\r\n              text: 'ECharts entry example',\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n              data: ['Sales'],\r\n            },\r\n            xAxis: {\r\n              data: ['shirt', 'cardign', 'chiffon shirt', 'pants', 'heels', 'socks'],\r\n            },\r\n            yAxis: {},\r\n            series: [\r\n              {\r\n                name: 'Sales',\r\n                type: 'bar',\r\n                data: [5, 20, 36, 10, 10, 20],\r\n              },\r\n            ],\r\n          };\r\n        };\r\n        render() {\r\n          return (\r\n              <ReactEcharts option={this.getOption()} />\r\n          `}\r\n            </code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class HorizontalBarStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n      },\r\n      series: [\r\n        {\r\n          name: '直接访问',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [320, 302, 301, 334, 390, 330, 320],\r\n        },\r\n        {\r\n          name: '邮件营销',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [120, 132, 101, 134, 90, 230, 210],\r\n        },\r\n        {\r\n          name: '联盟广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [220, 182, 191, 234, 290, 330, 310],\r\n        },\r\n        {\r\n          name: '视频广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [150, 212, 201, 154, 190, 330, 410],\r\n        },\r\n        {\r\n          name: '搜索引擎',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [820, 832, 901, 934, 1290, 1330, 1320],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n      },\r\n      series: [\r\n        {\r\n          name: '直接访问',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [320, 302, 301, 334, 390, 330, 320],\r\n        },\r\n        {\r\n          name: '邮件营销',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [120, 132, 101, 134, 90, 230, 210],\r\n        },\r\n        {\r\n          name: '联盟广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [220, 182, 191, 234, 290, 330, 310],\r\n        },\r\n        {\r\n          name: '视频广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [150, 212, 201, 154, 190, 330, 410],\r\n        },\r\n        {\r\n          name: '搜索引擎',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [820, 832, 901, 934, 1290, 1330, 1320],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return <ReactEcharts option={this.getOption()} />;\r\n  }`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class VerticalBarStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    var xAxisData = [];\r\n    var data1 = [];\r\n    var data2 = [];\r\n    var data3 = [];\r\n    var data4 = [];\r\n\r\n    for (var i = 0; i < 10; i++) {\r\n      xAxisData.push('Class' + i);\r\n      data1.push((Math.random() * 2).toFixed(2));\r\n      data2.push(-Math.random().toFixed(2));\r\n      data3.push((Math.random() * 5).toFixed(2));\r\n      data4.push((Math.random() + 0.3).toFixed(2));\r\n    }\r\n\r\n    var itemStyle = {\r\n      normal: {},\r\n      emphasis: {\r\n        barBorderWidth: 1,\r\n        shadowBlur: 10,\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowColor: 'rgba(0,0,0,0.5)',\r\n      },\r\n    };\r\n\r\n    return {\r\n      backgroundColor: '#eee',\r\n      legend: {\r\n        data: ['bar', 'bar2', 'bar3', 'bar4'],\r\n        align: 'left',\r\n        left: 10,\r\n      },\r\n      brush: {\r\n        toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n        xAxisIndex: 0,\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        name: 'X Axis',\r\n        silent: false,\r\n        axisLine: { onZero: true },\r\n        splitLine: { show: false },\r\n        splitArea: { show: false },\r\n      },\r\n      yAxis: {\r\n        inverse: true,\r\n        splitArea: { show: false },\r\n      },\r\n      grid: {\r\n        left: 100,\r\n      },\r\n      visualMap: {\r\n        type: 'continuous',\r\n        dimension: 1,\r\n        text: ['High', 'Low'],\r\n        inverse: true,\r\n        itemHeight: 200,\r\n        calculable: true,\r\n        min: -2,\r\n        max: 6,\r\n        top: 60,\r\n        left: 10,\r\n        inRange: {\r\n          colorLightness: [0.4, 0.8],\r\n        },\r\n        outOfRange: {\r\n          color: '#bbb',\r\n        },\r\n        controller: {\r\n          inRange: {\r\n            color: '#2f4554',\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data1,\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data2,\r\n        },\r\n        {\r\n          name: 'bar3',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data3,\r\n        },\r\n        {\r\n          name: 'bar4',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data4,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  handleBrushSelected = params => {\r\n    let echarts_instance = this.echarts_react.getEchartsInstance();\r\n\r\n    var brushed = [];\r\n    var brushComponent = params.batch[0];\r\n\r\n    for (var sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\r\n      var rawIndices = brushComponent.selected[sIdx].dataIndex;\r\n      brushed.push('[Series ' + sIdx + '] ' + rawIndices.join(', '));\r\n    }\r\n\r\n    echarts_instance.setOption({\r\n      title: {\r\n        backgroundColor: '#333',\r\n        text: 'SELECTED DATA INDICES: \\n' + brushed.join('\\n'),\r\n        bottom: 0,\r\n        right: 0,\r\n        width: 100,\r\n        textStyle: {\r\n          fontSize: 12,\r\n          color: '#fff',\r\n        },\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    let onEvents = {\r\n      brushSelected: this.onBrushSelected,\r\n    };\r\n    return (\r\n      <div>\r\n        <ReactEcharts\r\n          ref={e => {\r\n            this.echarts_react = e;\r\n          }}\r\n          option={this.getOption()}\r\n          onEvents={onEvents}\r\n        />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`    getOption = () => {\r\n    var xAxisData = [];\r\n    var data1 = [];\r\n    var data2 = [];\r\n    var data3 = [];\r\n    var data4 = [];\r\n\r\n    for (var i = 0; i < 10; i++) {\r\n      xAxisData.push('Class' + i);\r\n      data1.push((Math.random() * 2).toFixed(2));\r\n      data2.push(-Math.random().toFixed(2));\r\n      data3.push((Math.random() * 5).toFixed(2));\r\n      data4.push((Math.random() + 0.3).toFixed(2));\r\n    }\r\n\r\n    var itemStyle = {\r\n      normal: {},\r\n      emphasis: {\r\n        barBorderWidth: 1,\r\n        shadowBlur: 10,\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowColor: 'rgba(0,0,0,0.5)',\r\n      },\r\n    };\r\n\r\n    return {\r\n      backgroundColor: '#eee',\r\n      legend: {\r\n        data: ['bar', 'bar2', 'bar3', 'bar4'],\r\n        align: 'left',\r\n        left: 10,\r\n      },\r\n      brush: {\r\n        toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n        xAxisIndex: 0,\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        name: 'X Axis',\r\n        silent: false,\r\n        axisLine: { onZero: true },\r\n        splitLine: { show: false },\r\n        splitArea: { show: false },\r\n      },\r\n      yAxis: {\r\n        inverse: true,\r\n        splitArea: { show: false },\r\n      },\r\n      grid: {\r\n        left: 100,\r\n      },\r\n      visualMap: {\r\n        type: 'continuous',\r\n        dimension: 1,\r\n        text: ['High', 'Low'],\r\n        inverse: true,\r\n        itemHeight: 200,\r\n        calculable: true,\r\n        min: -2,\r\n        max: 6,\r\n        top: 60,\r\n        left: 10,\r\n        inRange: {\r\n          colorLightness: [0.4, 0.8],\r\n        },\r\n        outOfRange: {\r\n          color: '#bbb',\r\n        },\r\n        controller: {\r\n          inRange: {\r\n            color: '#2f4554',\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data1,\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data2,\r\n        },\r\n        {\r\n          name: 'bar3',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data3,\r\n        },\r\n        {\r\n          name: 'bar4',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data4,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  handleBrushSelected = params => {\r\n    let echarts_instance = this.echarts_react.getEchartsInstance();\r\n\r\n    var brushed = [];\r\n    var brushComponent = params.batch[0];\r\n\r\n    for (var sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\r\n      var rawIndices = brushComponent.selected[sIdx].dataIndex;\r\n      brushed.push('[Series ' + sIdx + '] ' + rawIndices.join(', '));\r\n    }\r\n\r\n    echarts_instance.setOption({\r\n      title: {\r\n        backgroundColor: '#333',\r\n        text: 'SELECTED DATA INDICES: \\n' + brushed.join('\\n'),\r\n        bottom: 0,\r\n        right: 0,\r\n        width: 100,\r\n        textStyle: {\r\n          fontSize: 12,\r\n          color: '#fff',\r\n        },\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    let onEvents = {\r\n      brushSelected: this.onBrushSelected,\r\n    };\r\n    return (\r\n      <div>\r\n        <ReactEcharts\r\n          ref={e => {\r\n            this.echarts_react = e;\r\n          }}\r\n          option={this.getOption()}\r\n          onEvents={onEvents}\r\n        />`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Bar from './Bar';\r\nimport Butterfly from './Butterfly';\r\nimport ButterflyStack from './ButterflyStack';\r\nimport HelloECharts from './HelloECharts';\r\nimport HorizontalBarStack from './HorizontalBarStack';\r\nimport VerticalBarStack from './VerticalBarStack';\r\nconst ChartsWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 50px;\r\n  margin-bottom: 125px;\r\n`;\r\n\r\nexport default class ECharts extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h1>\r\n          <a href=\"https://ecomfe.github.io/echarts-doc/public/en/index.html\">\r\n            ECharts\r\n          </a>\r\n        </h1>\r\n        <p>\r\n          Pass in a large \"options\" config object to a\r\n          <pre style={{ display: 'inline', margin: '0 6px' }}>\r\n            <code>{`<ReactEcharts option={this.getOption()} />`}</code>\r\n          </pre>\r\n          component\r\n        </p>\r\n        <h2>\r\n          <a href=\"http://git.hust.cc/echarts-for-react/#/?_k=9v3yjb\">\r\n            echarts-for-react\r\n          </a>\r\n          <span style={{ marginLeft: 15 }} />\r\n          <a href=\"https://www.npmjs.com/package/echarts-for-react\">npm</a>\r\n        </h2>\r\n\r\n        <HelloECharts />\r\n\r\n        <Bar />\r\n\r\n        <HorizontalBarStack />\r\n\r\n        <Butterfly />\r\n\r\n        <ButterflyStack />\r\n\r\n        <VerticalBarStack />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Nivo extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <a href=\"https://nivo.rocks/\">Nivo</a>\r\n        </h1>\r\n        <iframe\r\n          style={{ width: '100%', height: '100vh' }}\r\n          title=\"nivoStorybook\"\r\n          src=\"https://nivo.rocks/storybook/?selectedKind=Bar&selectedStory=stacked&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs\"\r\n          frameborder=\"0\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class ReactTimeSeries extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <a href=\"http://software.es.net/react-timeseries-charts/#/\">\r\n            React Timeseries Charts\r\n          </a>\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  VictoryArea,\r\n  VictoryAxis,\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryLabel,\r\n  VictoryStack,\r\n  VictoryTheme,\r\n} from 'victory';\r\n\r\nexport const ChartsWrapper = styled.div``;\r\n\r\nconst data = [\r\n  { quarter: 1, earnings: 13000 },\r\n  { quarter: 2, earnings: 16500 },\r\n  { quarter: 3, earnings: 14250 },\r\n  { quarter: 4, earnings: 19000 },\r\n];\r\nconst data2012 = [\r\n  { quarter: 1, earnings: 13000 },\r\n  { quarter: 2, earnings: 16500 },\r\n  { quarter: 3, earnings: 14250 },\r\n  { quarter: 4, earnings: 19000 },\r\n];\r\n\r\nconst data2013 = [\r\n  { quarter: 1, earnings: 15000 },\r\n  { quarter: 2, earnings: 12500 },\r\n  { quarter: 3, earnings: 19500 },\r\n  { quarter: 4, earnings: 13000 },\r\n];\r\n\r\nconst data2014 = [\r\n  { quarter: 1, earnings: 11500 },\r\n  { quarter: 2, earnings: 13250 },\r\n  { quarter: 3, earnings: 20000 },\r\n  { quarter: 4, earnings: 15500 },\r\n];\r\n\r\nconst data2015 = [\r\n  { quarter: 1, earnings: 18000 },\r\n  { quarter: 2, earnings: 13250 },\r\n  { quarter: 3, earnings: 15000 },\r\n  { quarter: 4, earnings: 12000 },\r\n];\r\n\r\nconst sampleData = [\r\n  { x: 1, y: 2 },\r\n  { x: 2, y: 1 },\r\n  { x: 3, y: 4 },\r\n  { x: 4, y: 3 },\r\n];\r\nexport default class Bar extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h4>\r\n          <a href=\"https://formidable.com/open-source/victory/docs/victory-bar/\">\r\n            Victory Bar Charts\r\n          </a>\r\n        </h4>\r\n        <VictoryChart\r\n          // domainPadding will add space to each side of VictoryBar to\r\n          // prevent it from overlapping the axis\r\n          domainPadding={20}\r\n          theme={VictoryTheme.material}\r\n        >\r\n          <VictoryAxis\r\n            // tickValues specifies both the number of ticks and where\r\n            // they are placed on the axis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis\r\n            dependentAxis\r\n            // tickFormat specifies how ticks should be displayed\r\n            tickFormat={x => `$${x / 1000}k`}\r\n          />\r\n          <VictoryBar\r\n            data={data}\r\n            // data accessor for x values\r\n            x=\"quarter\"\r\n            // data accessor for y values\r\n            y=\"earnings\"\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart\r\n            // domainPadding will add space to each side of VictoryBar to\r\n            // prevent it from overlapping the axis\r\n            domainPadding={20}\r\n            theme={VictoryTheme.material}\r\n          >\r\n            <VictoryAxis\r\n              // tickValues specifies both the number of ticks and where\r\n              // they are placed on the axis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis\r\n              dependentAxis\r\n              // tickFormat specifies how ticks should be displayed\r\n              tickFormat={x => \\`$\\${x / 1000}k\\`}\r\n            />\r\n            <VictoryBar\r\n              data={data}\r\n              // data accessor for x values\r\n              x=\"quarter\"\r\n              // data accessor for y values\r\n              y=\"earnings\"\r\n            />\r\n          </VictoryChart>\r\n        `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n          <VictoryAxis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis dependentAxis tickFormat={x => `$${x / 1000}k`} />\r\n          <VictoryStack>\r\n            <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n          </VictoryStack>\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n            <VictoryAxis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={x => \\`$\\${x / 1000}k\\`} />\r\n            <VictoryStack>\r\n              <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n            </VictoryStack>\r\n          </VictoryChart>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n          <VictoryAxis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis dependentAxis tickFormat={x => `$${x / 1000}k`} />\r\n          <VictoryStack colorScale={'warm'}>\r\n            <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n          </VictoryStack>\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n            <VictoryAxis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={x => \\`$\\${x / 1000}k\\`} />\r\n            <VictoryStack colorScale={'warm'}>\r\n              <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n            </VictoryStack>\r\n          </VictoryChart>\r\n       `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart theme={VictoryTheme.material} domainPadding={10}>\r\n          <VictoryBar\r\n            style={{ data: { fill: '#c43a31' } }}\r\n            data={data}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart theme={VictoryTheme.material} domainPadding={10}>\r\n            <VictoryBar\r\n              style={{ data: { fill: '#c43a31' } }}\r\n              data={data}\r\n              x=\"quarter\"\r\n              y=\"earnings\"\r\n              />\r\n              </VictoryChart>\r\n\r\n              `}\r\n          </code>\r\n        </pre>\r\n        <div>\r\n          <h3>Click Me</h3>\r\n          <VictoryBar\r\n            style={{\r\n              data: { fill: '#c43a31' },\r\n            }}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            events={[\r\n              {\r\n                target: 'data',\r\n                eventHandlers: {\r\n                  onClick: () => {\r\n                    return [\r\n                      {\r\n                        target: 'data',\r\n                        mutation: props => {\r\n                          const fill = props.style && props.style.fill;\r\n                          return fill === 'black'\r\n                            ? null\r\n                            : { style: { fill: 'black' } };\r\n                        },\r\n                      },\r\n                    ];\r\n                  },\r\n                },\r\n              },\r\n            ]}\r\n            data={data}\r\n          />\r\n        </div>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <div>\r\n          <h3>Click Me</h3>\r\n          <VictoryBar\r\n          style={{\r\n            data: { fill: '#c43a31' },\r\n          }}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          events={[\r\n            {\r\n              target: 'data',\r\n              eventHandlers: {\r\n                onClick: () => {\r\n                  return [\r\n                    {\r\n                      target: 'data',\r\n                      mutation: props => {\r\n                        const fill = props.style && props.style.fill;\r\n                        return fill === 'black'\r\n                        ? null\r\n                        : { style: { fill: 'black' } };\r\n                      },\r\n                    },\r\n                  ];\r\n                },\r\n              },\r\n            },\r\n          ]}\r\n          data={data}\r\n          />\r\n          </div>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart theme={VictoryTheme.material} domainPadding={{ y: 10 }}>\r\n          <VictoryBar\r\n            horizontal\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            style={{\r\n              data: { fill: '#c43a31' },\r\n            }}\r\n            data={data}\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart theme={VictoryTheme.material} domainPadding={{ y: 10 }}>\r\n            <VictoryBar\r\n              horizontal\r\n              x=\"quarter\"\r\n              y=\"earnings\"\r\n              style={{\r\n                data: { fill: '#c43a31' },\r\n              }}\r\n              data={data}\r\n              />\r\n              </VictoryChart>\r\n              `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={d => d.earnings}\r\n          style={{ labels: { fill: 'white' } }}\r\n          labelComponent={<VictoryLabel dy={30} />}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={(d) => d.earnings}\r\n          style={{ labels: { fill: \"white\" } }}\r\n          labelComponent={<VictoryLabel dy={30} />}\r\n          />\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={d => `y: ${d.earnings}`}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n            data={data}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            labels={d => \\`y: \\${d.earnings}\\`}\r\n            />\r\n            `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          style={{\r\n            data: {\r\n              fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              stroke: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              fillOpacity: 0.7,\r\n              strokeWidth: 3,\r\n            },\r\n            labels: {\r\n              fontSize: 15,\r\n              fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n            },\r\n          }}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          data={data}\r\n          labels={d => d.quarter}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n            style={{\r\n              data: {\r\n                fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n                stroke: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n                fillOpacity: 0.7,\r\n                strokeWidth: 3,\r\n              },\r\n              labels: {\r\n                fontSize: 15,\r\n                fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              },\r\n            }}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            data={data}\r\n            labels={d => d.quarter}\r\n            />\r\n            `}\r\n          </code>\r\n        </pre>\r\n        <h2>standalone</h2>\r\n        <p>type: boolean</p>\r\n        <p>VictoryBar uses the standard standalone prop.</p>\r\n        <p>\r\n          Read about it{' '}\r\n          <a href=\"https://formidable.com/open-source/victory/docs/common-props/#standalone\">\r\n            here\r\n          </a>\r\n        </p>\r\n        <p>\r\n          note: When VictoryBar is nested within a component like VictoryChart,\r\n          this prop will be set to false{' '}\r\n        </p>\r\n        <p>default: standalone={'{true}'}</p>\r\n        <svg width={300} height={300}>\r\n          <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n          <VictoryBar\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            standalone={false}\r\n            width={300}\r\n            height={300}\r\n            padding={{ left: 10, right: 10 }}\r\n            data={data}\r\n          />\r\n        </svg>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <svg width={300} height={300}>\r\n            <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n            <VictoryBar\r\n            x=\"quarter\"\r\n              y=\"earnings\"\r\n              standalone={false}\r\n              width={300}\r\n              height={300}\r\n              padding={{ left: 10, right: 10 }}\r\n              data={data}\r\n              />\r\n              </svg>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <svg width={300} height={300}>\r\n          <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n          <VictoryArea\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            standalone={false}\r\n            width={300}\r\n            height={300}\r\n            padding={0}\r\n            data={data}\r\n          />\r\n        </svg>\r\n        <h2>y0</h2>\r\n        <p>type: string || integer || array[string] || function</p>\r\n        <p>\r\n          VictoryBar uses the standard y0 data accessor prop to set a baseline.\r\n        </p>\r\n        <p>\r\n          Read about it{' '}\r\n          <a href=\"https://formidable.com/open-source/victory/docs/common-props#y0\">\r\n            here\r\n          </a>\r\n        </p>\r\n        <VictoryChart domainPadding={30}>\r\n          <VictoryBar\r\n            // x=\"quarter\"\r\n            // y=\"earnings\"\r\n            data={sampleData}\r\n            y0={d => d.y - 1}\r\n          />\r\n        </VictoryChart>\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  BarChart,\r\n  Bar,\r\n  Brush,\r\n  ReferenceLine,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\nimport React, { Component } from 'react';\r\nconst data = [\r\n  { name: '1', uv: 300, pv: 456 },\r\n  { name: '2', uv: -145, pv: 230 },\r\n  { name: '3', uv: -100, pv: 345 },\r\n  { name: '4', uv: -8, pv: 450 },\r\n  { name: '5', uv: 100, pv: 321 },\r\n  { name: '6', uv: 9, pv: 235 },\r\n  { name: '7', uv: 53, pv: 267 },\r\n  { name: '8', uv: 252, pv: -378 },\r\n  { name: '9', uv: 79, pv: -210 },\r\n  { name: '10', uv: 294, pv: -23 },\r\n  { name: '12', uv: 43, pv: 45 },\r\n  { name: '13', uv: -74, pv: 90 },\r\n  { name: '14', uv: -71, pv: 130 },\r\n  { name: '15', uv: -117, pv: 11 },\r\n  { name: '16', uv: -186, pv: 107 },\r\n  { name: '17', uv: -16, pv: 926 },\r\n  { name: '18', uv: -125, pv: 653 },\r\n  { name: '19', uv: 222, pv: 366 },\r\n  { name: '20', uv: 372, pv: 486 },\r\n  { name: '21', uv: 182, pv: 512 },\r\n  { name: '22', uv: 164, pv: 302 },\r\n  { name: '23', uv: 316, pv: 425 },\r\n  { name: '24', uv: 131, pv: 467 },\r\n  { name: '25', uv: 291, pv: -190 },\r\n  { name: '26', uv: -47, pv: 194 },\r\n  { name: '27', uv: -415, pv: 371 },\r\n  { name: '28', uv: -182, pv: 376 },\r\n  { name: '29', uv: -93, pv: 295 },\r\n  { name: '30', uv: -99, pv: 322 },\r\n  { name: '31', uv: -52, pv: 246 },\r\n  { name: '32', uv: 154, pv: 33 },\r\n  { name: '33', uv: 205, pv: 354 },\r\n  { name: '34', uv: 70, pv: 258 },\r\n  { name: '35', uv: -25, pv: 359 },\r\n  { name: '36', uv: -59, pv: 192 },\r\n  { name: '37', uv: -63, pv: 464 },\r\n  { name: '38', uv: -91, pv: -2 },\r\n  { name: '39', uv: -66, pv: 154 },\r\n  { name: '40', uv: -50, pv: 186 },\r\n];\r\n\r\nexport default class BrushBar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  LabelList,\r\n} from 'recharts';\r\nimport React, { Component } from 'react';\r\n\r\nconst renderCustomizedLabel = props => {\r\n  const { x, y, width, height, value } = props;\r\n  const radius = 10;\r\n\r\n  return (\r\n    <g>\r\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#8884d8\" />\r\n      <text\r\n        x={x + width / 2}\r\n        y={y - radius}\r\n        fill=\"#fff\"\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"middle\"\r\n      >\r\n        {value.split(' ')[1]}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class CustomLabel extends Component {\r\n  state = {\r\n    data: [\r\n      { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n      { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n      { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n      { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n      { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n      { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n      { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n    ],\r\n    activeIndex: 0,\r\n  };\r\n\r\n  handleClick = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={this.state.data}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"pv\" fill=\"#8884d8\" minPointSize={5}>\r\n          <LabelList dataKey=\"name\" content={renderCustomizedLabel} />\r\n        </Bar>\r\n        <Bar dataKey=\"uv\" fill=\"#82ca9d\" minPointSize={10} />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\nimport React, { Component } from 'react';\r\n\r\nconst data = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\n\r\nclass CustomTooltip extends Component {\r\n  getIntroOfPage = label => {\r\n    if (label === 'Page A') {\r\n      return \"Page A is about men's clothing\";\r\n    } else if (label === 'Page B') {\r\n      return \"Page B is about women's dress\";\r\n    } else if (label === 'Page C') {\r\n      return \"Page C is about women's bag\";\r\n    } else if (label === 'Page D') {\r\n      return 'Page D is about household goods';\r\n    } else if (label === 'Page E') {\r\n      return 'Page E is about food';\r\n    } else if (label === 'Page F') {\r\n      return 'Page F is about baby food';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { active } = this.props;\r\n\r\n    if (active) {\r\n      const { payload, label } = this.props;\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n          <p className=\"intro\">{this.getIntroOfPage(label)}</p>\r\n          <p className=\"desc\">Anything you want can be displayed here.</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default class BarChartCustomTooltip extends Component {\r\n  render() {\r\n    return (\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={data}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend />\r\n        <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  Label,\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ReferenceArea,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  { name: 1, cost: 4.11, impression: 100 },\r\n  { name: 2, cost: 2.39, impression: 120 },\r\n  { name: 3, cost: 1.37, impression: 150 },\r\n  { name: 4, cost: 1.16, impression: 180 },\r\n  { name: 5, cost: 2.29, impression: 200 },\r\n  { name: 6, cost: 3, impression: 499 },\r\n  { name: 7, cost: 0.53, impression: 50 },\r\n  { name: 8, cost: 2.52, impression: 100 },\r\n  { name: 9, cost: 1.79, impression: 200 },\r\n  { name: 10, cost: 2.94, impression: 222 },\r\n  { name: 11, cost: 4.3, impression: 210 },\r\n  { name: 12, cost: 4.41, impression: 300 },\r\n  { name: 13, cost: 2.1, impression: 50 },\r\n  { name: 14, cost: 8, impression: 190 },\r\n  { name: 15, cost: 0, impression: 300 },\r\n  { name: 16, cost: 9, impression: 400 },\r\n  { name: 17, cost: 3, impression: 200 },\r\n  { name: 18, cost: 2, impression: 50 },\r\n  { name: 19, cost: 3, impression: 100 },\r\n  { name: 20, cost: 7, impression: 100 },\r\n];\r\n\r\nconst getAxisYDomain = (from, to, ref, offset) => {\r\n  const refData = data.slice(from - 1, to);\r\n  let [bottom, top] = [refData[0][ref], refData[0][ref]];\r\n  refData.forEach(d => {\r\n    if (d[ref] > top) top = d[ref];\r\n    if (d[ref] < bottom) bottom = d[ref];\r\n  });\r\n\r\n  return [(bottom | 0) - offset, (top | 0) + offset];\r\n};\r\n\r\nconst initialState = {\r\n  data,\r\n  left: 'dataMin',\r\n  right: 'dataMax',\r\n  refAreaLeft: '',\r\n  refAreaRight: '',\r\n  top: 'dataMax+1',\r\n  bottom: 'dataMin-1',\r\n  top2: 'dataMax+20',\r\n  bottom2: 'dataMin-20',\r\n  animation: true,\r\n};\r\n\r\nexport default class HighlightAndZoom extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  zoom() {\r\n    let { refAreaLeft, refAreaRight, data } = this.state;\r\n\r\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\r\n      this.setState(() => ({\r\n        refAreaLeft: '',\r\n        refAreaRight: '',\r\n      }));\r\n      return;\r\n    }\r\n\r\n    // xAxis domain\r\n    if (refAreaLeft > refAreaRight)\r\n      [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\r\n\r\n    // yAxis domain\r\n    const [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, 'cost', 1);\r\n    const [bottom2, top2] = getAxisYDomain(\r\n      refAreaLeft,\r\n      refAreaRight,\r\n      'impression',\r\n      50,\r\n    );\r\n\r\n    this.setState(() => ({\r\n      refAreaLeft: '',\r\n      refAreaRight: '',\r\n      data: data.slice(),\r\n      left: refAreaLeft,\r\n      right: refAreaRight,\r\n      bottom,\r\n      top,\r\n      bottom2,\r\n      top2,\r\n    }));\r\n  }\r\n\r\n  zoomOut() {\r\n    const { data } = this.state;\r\n    this.setState(() => ({\r\n      data: data.slice(),\r\n      refAreaLeft: '',\r\n      refAreaRight: '',\r\n      left: 'dataMin',\r\n      right: 'dataMax',\r\n      top: 'dataMax+1',\r\n      bottom: 'dataMin',\r\n      top2: 'dataMax+50',\r\n      bottom: 'dataMin+50',\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      barIndex,\r\n      left,\r\n      right,\r\n      refAreaLeft,\r\n      refAreaRight,\r\n      top,\r\n      bottom,\r\n      top2,\r\n      bottom2,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"highlight-bar-charts\">\r\n        <button className=\"btn update\" onClick={this.zoomOut.bind(this)}>\r\n          Zoom Out\r\n        </button>\r\n\r\n        <p>Highlight / Zoom - able Line Chart</p>\r\n        <LineChart\r\n          width={800}\r\n          height={400}\r\n          data={data}\r\n          onMouseDown={e => this.setState({ refAreaLeft: e.activeLabel })}\r\n          onMouseMove={e =>\r\n            this.state.refAreaLeft &&\r\n            this.setState({ refAreaRight: e.activeLabel })\r\n          }\r\n          onMouseUp={this.zoom.bind(this)}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            allowDataOverflow={true}\r\n            dataKey=\"name\"\r\n            domain={[left, right]}\r\n            type=\"number\"\r\n          />\r\n          <YAxis\r\n            allowDataOverflow={true}\r\n            domain={[bottom, top]}\r\n            type=\"number\"\r\n            yAxisId=\"1\"\r\n          />\r\n          <YAxis\r\n            orientation=\"right\"\r\n            allowDataOverflow={true}\r\n            domain={[bottom2, top2]}\r\n            type=\"number\"\r\n            yAxisId=\"2\"\r\n          />\r\n          <Tooltip />\r\n          <Line\r\n            yAxisId=\"1\"\r\n            type=\"natural\"\r\n            dataKey=\"cost\"\r\n            stroke=\"#8884d8\"\r\n            animationDuration={300}\r\n          />\r\n          <Line\r\n            yAxisId=\"2\"\r\n            type=\"natural\"\r\n            dataKey=\"impression\"\r\n            stroke=\"#82ca9d\"\r\n            animationDuration={300}\r\n          />\r\n\r\n          {refAreaLeft && refAreaRight ? (\r\n            <ReferenceArea\r\n              yAxisId=\"1\"\r\n              x1={refAreaLeft}\r\n              x2={refAreaRight}\r\n              strokeOpacity={0.3}\r\n            />\r\n          ) : null}\r\n        </LineChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ReferenceLine,\r\n  Brush,\r\n  AreaChart,\r\n  Area,\r\n} from 'recharts';\r\nimport HighlightAndZoom from './HighlightAndZoom';\r\n\r\nconst data = [\r\n  { name: 'bob', age: 100, speed: 50 },\r\n  { name: 'bill', age: 200, speed: 30 },\r\n  { name: 'jill', age: 150, speed: 40 },\r\n  { name: 'job', age: 110, speed: 20 },\r\n];\r\nconst data2 = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\n\r\nexport default class RechartsLine extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Recharts Line Charts</h1>\r\n        <a href=\"http://recharts.org/en-US/examples/\">\r\n          More examples at Recharts.org\r\n        </a>\r\n\r\n        <LineChart width={400} height={400} data={data}>\r\n          <Line type=\"monotone\" dataKey=\"age\" stroke=\"#8884d8\" />\r\n          <YAxis />\r\n          <XAxis dataKey=\"name\" />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\r\n        >\r\n          <Line type=\"monotone\" dataKey=\"speed\" stroke=\"#8884d8\" />\r\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"pv\"\r\n            stroke=\"#8884d8\"\r\n            activeDot={{ r: 8 }}\r\n          />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <LineChart width={300} height={100} data={data2}>\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" strokeWidth={2} />\r\n        </LineChart>\r\n        <LineChart\r\n          layout=\"vertical\"\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis type=\"number\" />\r\n          <YAxis dataKey=\"name\" type=\"category\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line dataKey=\"pv\" stroke=\"#8884d8\" />\r\n          <Line dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 20, right: 50, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine x=\"Page C\" stroke=\"red\" label=\"Max PV PAGE\" />\r\n          <ReferenceLine y={9800} label=\"Max\" stroke=\"red\" />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <div>\r\n          <h4>A demo of synchronized AreaCharts</h4>\r\n          <LineChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"uv\"\r\n              stroke=\"#8884d8\"\r\n              fill=\"#8884d8\"\r\n            />\r\n          </LineChart>\r\n          <p>Maybe some other content</p>\r\n          <LineChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"pv\"\r\n              stroke=\"#82ca9d\"\r\n              fill=\"#82ca9d\"\r\n            />\r\n            <Brush />\r\n          </LineChart>\r\n          <AreaChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"pv\"\r\n              stroke=\"#82ca9d\"\r\n              fill=\"#82ca9d\"\r\n            />\r\n          </AreaChart>\r\n        </div>\r\n        <HighlightAndZoom />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Area,\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  ReferenceLine,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport { ChartsWrapper } from '../Victory/Bar';\r\nimport BrushBar from './BrushBar';\r\nimport CustomLabel from './CustomLabel';\r\nimport {\r\n  default as BarChartCustomTooltip,\r\n  default as CustomEvent,\r\n} from './CustomTooltip';\r\nimport RechartsLine from './Line';\r\nconst data = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\nconst dataStackedBySign = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: -3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: -2000, pv: -9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: -1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: -3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\nexport default class Recharts extends Component {\r\n  state = {\r\n    activeIndex: 0,\r\n  };\r\n  handleClick(data, index) {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h1>Recharts Bar Charts</h1>\r\n        <a href=\"http://recharts.org/en-US/examples/\">\r\n          More examples at Recharts.org\r\n        </a>\r\n        <BarChart width={150} height={40} data={data}>\r\n          <Bar dataKey=\"uv\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart width={150} height={40} data={data}>\r\n            <Bar dataKey=\"uv\" fill=\"#8884d8\" />\r\n          </BarChart>\r\n      `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n\r\n          `}\r\n        </pre>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n        `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"female\" stackId=\"a\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"male\" stackId=\"a\" fill=\"#82ca9d\" />\r\n          <Bar dataKey=\"uv\" fill=\"#ffc658\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"female\" stackId=\"a\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"male\" stackId=\"a\" fill=\"#82ca9d\" />\r\n            <Bar dataKey=\"uv\" fill=\"#ffc658\" />\r\n          </BarChart>\r\n`}\r\n        </pre>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <ReferenceLine y={0} stroke=\"#000\" />\r\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n          `}\r\n        </pre>\r\n\r\n        <BrushBar />\r\n        <pre>\r\n          {`\r\n          <BrushBar />\r\n\r\n          `}\r\n        </pre>\r\n        <CustomEvent />\r\n        <pre>\r\n          {`\r\n        <CustomEvent />\r\n          `}\r\n        </pre>\r\n\r\n        <CustomLabel />\r\n        <pre>\r\n          {`\r\n        <CustomLabel />\r\n        `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={dataStackedBySign}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" stackId=\"stack\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" stackId=\"stack\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n        <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={dataStackedBySign}\r\n        stackOffset=\"sign\"\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" stackId=\"stack\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" stackId=\"stack\" />\r\n          </BarChart>\r\n          `}\r\n        </pre>\r\n\r\n        <ComposedChart\r\n          layout=\"vertical\"\r\n          width={600}\r\n          height={400}\r\n          data={data}\r\n          margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n        >\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <XAxis type=\"number\" />\r\n          <YAxis dataKey=\"name\" type=\"category\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        <pre>\r\n          {`\r\n        <ComposedChart\r\n        layout=\"vertical\"\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n        >\r\n        <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <XAxis type=\"number\" />\r\n        <YAxis dataKey=\"name\" type=\"category\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Area dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n        <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n        <Line dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        `}\r\n        </pre>\r\n\r\n        <ComposedChart\r\n          width={600}\r\n          height={400}\r\n          data={data}\r\n          margin={{ top: 20, right: 80, bottom: 20, left: 20 }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"name\"\r\n            label={{ value: 'Pages', position: 'insideBottomRight', offset: 0 }}\r\n          />\r\n          <YAxis\r\n            label={{ value: 'Index', angle: -90, position: 'insideLeft' }}\r\n          />\r\n          <Tooltip />\r\n          <Legend />\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <Area type=\"monotone\" dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        <pre>\r\n          {`\r\n        <ComposedChart\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{ top: 20, right: 80, bottom: 20, left: 20 }}\r\n        >\r\n        <XAxis\r\n        dataKey=\"name\"\r\n        label={{ value: 'Pages', position: 'insideBottomRight', offset: 0 }}\r\n        />\r\n        <YAxis\r\n        label={{ value: 'Index', angle: -90, position: 'insideLeft' }}\r\n          />\r\n          <Tooltip />\r\n          <Legend />\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <Area type=\"monotone\" dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n          </ComposedChart>\r\n          `}\r\n        </pre>\r\n\r\n        <BarChartCustomTooltip />\r\n        <pre>\r\n          {`\r\n        <BarChartCustomTooltip />\r\n          `}\r\n        </pre>\r\n\r\n        <RechartsLine />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Bar, { ChartsWrapper } from './Bar';\r\n\r\nexport default class Victory extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <Bar />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import { Router } from '@reach/router';\r\nimport React, { Component } from 'react';\r\nimport ECharts from './components/ECharts/ECharts';\r\nimport Nivo from './components/Nivo/Nivo';\r\nimport ReactTimeSeries from './components/ReactTimeSeries/ReactTimeSeries';\r\nimport Recharts from './components/Recharts/Recharts';\r\nimport Victory from './components/Victory/Victory';\r\n\r\nexport const routes = [\r\n  { path: '/charts-playground/', name: 'Recharts' },\r\n  { path: '/charts-playground/ECharts', name: 'ECharts' },\r\n  { path: '/charts-playground/victory', name: 'Victory' },\r\n  { path: '/charts-playground/timeseries', name: 'React Time Series' },\r\n  { path: '/charts-playground/nivo', name: 'Nivo' },\r\n];\r\n\r\nexport default class AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Recharts path=\"/charts-playground/\" />\r\n        <Victory path=\"/charts-playground/victory\" />\r\n        <ECharts path=\"/charts-playground/ECharts\" />\r\n        <ReactTimeSeries path=\"/charts-playground/timeseries\" />\r\n        <Nivo path=\"/charts-playground/nivo\" />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import { Link } from '@reach/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport AppRouter, { routes } from './AppRouter';\nconst AppWrapper = styled.div`\n  padding: 100px 40px;\n  margin: auto;\n  * {\n    margin: 0;\n  }\n  pre {\n    background: lightgrey;\n  }\n`;\nconst NavWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  font-family: 'Open Sans';\n  padding: 20px;\n  display: grid;\n  justify-items: center;\n  background: lightgrey;\n  grid-gap: 20px 10px;\n  grid-template-columns: repeat(auto-fit, minmax(130px, 1fr));\n  a {\n    text-decoration: none;\n    color: steelblue;\n    &:hover {\n      text-decoration: underline;\n    }\n    &.active {\n      font-weight: bold;\n    }\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <AppWrapper>\n        <AppRouter />\n        <NavWrapper>\n          {routes.map(route => (\n            <Link\n              getProps={({ isCurrent }) =>\n                isCurrent ? { className: 'active' } : null\n              }\n              to={route.path}\n            >\n              <a>{route.name}</a>\n            </Link>\n          ))}\n        </NavWrapper>\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}