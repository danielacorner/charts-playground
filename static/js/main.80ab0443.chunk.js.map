{"version":3,"sources":["components/ECharts/Bar.js","components/ECharts/Butterfly.js","components/ECharts/ButterflyStack.js","components/ECharts/HelloECharts.js","components/ECharts/HorizontalBarStack.js","components/ECharts/VerticalBarStack.js","components/ECharts/ECharts.js","components/Nivo/Nivo.js","components/ReactTimeSeries/Bar.js","components/ReactTimeSeries/Realtime.js","components/ReactTimeSeries/ReactTimeSeries.js","components/Victory/Bar.js","components/Recharts/BrushBar.js","components/Recharts/CustomLabel.js","components/Recharts/CustomTooltip.js","components/Recharts/HighlightAndZoom.js","components/Recharts/Line.js","components/Recharts/Recharts.js","components/Victory/Victory.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["Bar","state","visible","toggleVisibility","panel","_this","setState","Object","defineProperty","getOption","xAxisData","data1","data2","i","push","Math","sin","cos","title","text","legend","data","align","toolbox","feature","magicType","type","dataView","saveAsImage","pixelRatio","tooltip","xAxis","silent","splitLine","show","yAxis","series","name","animationDelay","idx","animationEasing","animationDelayUpdate","_this2","this","react_default","a","createElement","lib_default","option","onClick","hello","Component","Butterfly","labelRight","normal","position","subtext","sublink","trigger","axisPointer","grid","top","bottom","lineStyle","axisLine","axisLabel","axisTick","stack","label","formatter","value","ButterflyStack","left","right","containLabel","HelloECharts","HorizontalBarStack","VerticalBarStack","data3","data4","random","toFixed","itemStyle","emphasis","barBorderWidth","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","backgroundColor","brush","xAxisIndex","onZero","splitArea","inverse","visualMap","dimension","itemHeight","calculable","min","max","inRange","colorLightness","outOfRange","color","controller","handleBrushSelected","params","echarts_instance","echarts_react","getEchartsInstance","brushed","brushComponent","batch","sIdx","selected","length","rawIndices","dataIndex","join","setOption","width","textStyle","fontSize","onEvents","brushSelected","onBrushSelected","ref","e","ChartsWrapper","styled","div","_templateObject","ECharts","href","style","display","margin","marginLeft","HelloECharts_HelloECharts","Bar_Bar","HorizontalBarStack_HorizontalBarStack","Butterfly_Butterfly","ButterflyStack_ButterflyStack","VerticalBarStack_VerticalBarStack","Nivo","height","src","frameborder","trafficPoints","interfacesJSON","require","days","_","each","day","dayOfMonth","Number","volIn","in","volOut","out","concat","octoberTrafficSeries","TimeSeries","utc","columns","points","netTrafficPoints","interfaceKeys","octoberDays","maxTotalTraffic","minTotalTraffic","ignoreValue","netTrafficForDay","maxDay","minDay","interfaceKey","netTraffic","netTrafficColumnNames","split","octoberNetTrafficSeries","routerData","monthlyJSON","router","routerName","accepted","delivered","traffic","key","month","timerange","range","selection","handleTimeRangeChange","styler","format","selectedDate","event","index","toNiceString","selectedValue","column","highlight","infoValues","infoNetValues","trafficText","get","className","lib_entry","timeRange","enablePanZoom","onTimeRangeChanged","onBackgroundClick","maxTime","Date","minTime","minDuration","id","axis","info","infoTimeFormat","moment","begin","highlighted","onHighlightChange","onSelectionChange","classed","size","offset","spacing","slice","infoWidth","React","displayName","Realtime","time","events","Ring","percentile50Out","percentile90Out","getNewEvent","t","base","getTime","TimeEvent","parseInt","stream","Stream","pipeline","from","windowBy","emitOn","aggregate","percentile","to","EventOut","interval","setInterval","newEvents","addEvent","clearInterval","beginTime","latestTime","fiveMinuteStyle","fill","opacity","eventSeries","toArray","perc50Series","perc90Series","initialBeginTime","endTime","TimeRange","charts","dashed","categories","borderWidth","borderColor","ReactTimeSeries_templateObject","startTime","description","completed","external_ticket","esnet_ticket","organization","map","_ref","objectWithoutProperties","timerangeevent","outageEventStyleFunc","ReactTimeSeries","tracker","eventChartVisible","realtimeChartVisible","which","handleTrackerChanged","ReactTimeSeries_ChartsWrapper","Realtime_Realtime","ReactTimeSeries_Bar_Bar","Bar_templateObject","quarter","earnings","data2012","data2013","data2014","data2015","sampleData","x","y","Bar_ChartsWrapper","victory_chart","domainPadding","theme","VictoryTheme","material","victory_axis","tickValues","tickFormat","dependentAxis","victory_bar","victory_stack","colorScale","target","eventHandlers","mutation","props","horizontal","labels","d","labelComponent","victory_label","dy","stroke","fillOpacity","strokeWidth","cx","cy","r","standalone","padding","victory_area","y0","uv","pv","BrushBar","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","verticalAlign","wrapperStyle","lineHeight","ReferenceLine","Brush","cartesian_Bar","renderCustomizedLabel","textAnchor","dominantBaseline","CustomLabel","amt","activeIndex","handleClick","minPointSize","LabelList","content","CustomTooltip","getIntroOfPage","active","_this$props","payload","BarChartCustomTooltip","CustomTooltip_CustomTooltip","barSize","cost","impression","getAxisYDomain","refData","forEach","initialState","refAreaLeft","refAreaRight","top2","bottom2","animation","HighlightAndZoom","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$state","_getAxisYDomain","_getAxisYDomain2","slicedToArray","_getAxisYDomain3","_getAxisYDomain4","_this$state2","zoomOut","bind","LineChart","onMouseDown","activeLabel","onMouseMove","onMouseUp","zoom","allowDataOverflow","domain","yAxisId","orientation","Line","animationDuration","ReferenceArea","x1","x2","strokeOpacity","age","speed","RechartsLine","activeDot","layout","syncId","AreaChart","Area","HighlightAndZoom_HighlightAndZoom","dataStackedBySign","Recharts","stackId","BrushBar_BrushBar","CustomTooltip_BarChartCustomTooltip","CustomLabel_CustomLabel","stackOffset","ComposedChart","angle","Line_RechartsLine","Victory","Victory_Bar_Bar","routes","path","AppRouter","es","Recharts_Recharts","Victory_Victory","ECharts_ECharts","ReactTimeSeries_ReactTimeSeries","Nivo_Nivo","AppWrapper","App_templateObject","NavWrapper","_templateObject2","App","AppRouter_AppRouter","route","getProps","isCurrent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80ab0443.chunk.js","sourcesContent":["import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Bar extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    let xAxisData = [];\r\n    let data1 = [];\r\n    let data2 = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      xAxisData.push('类目' + i);\r\n      data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n      data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n    }\r\n    return {\r\n      title: {\r\n        text: '柱状图动画延迟',\r\n      },\r\n      legend: {\r\n        data: ['bar', 'bar2'],\r\n        align: 'left',\r\n      },\r\n      toolbox: {\r\n        // y: 'bottom',\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n          saveAsImage: {\r\n            pixelRatio: 2,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        silent: false,\r\n        splitLine: {\r\n          show: false,\r\n        },\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          data: data1,\r\n          animationDelay: function(idx) {\r\n            return idx * 10;\r\n          },\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          data: data2,\r\n          animationDelay: function(idx) {\r\n            return idx * 10 + 100;\r\n          },\r\n        },\r\n      ],\r\n      animationEasing: 'elasticOut',\r\n      animationDelayUpdate: function(idx) {\r\n        return idx * 5;\r\n      },\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{` getOption = () => {\r\n    let xAxisData = [];\r\n    let data1 = [];\r\n    let data2 = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      xAxisData.push('类目' + i);\r\n      data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n      data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n    }\r\n    return {\r\n      title: {\r\n        text: '柱状图动画延迟',\r\n      },\r\n      legend: {\r\n        data: ['bar', 'bar2'],\r\n        align: 'left',\r\n      },\r\n      toolbox: {\r\n        // y: 'bottom',\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n          saveAsImage: {\r\n            pixelRatio: 2,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        silent: false,\r\n        splitLine: {\r\n          show: false,\r\n        },\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          data: data1,\r\n          animationDelay: function(idx) {\r\n            return idx * 10;\r\n          },\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          data: data2,\r\n          animationDelay: function(idx) {\r\n            return idx * 10 + 100;\r\n          },\r\n        },\r\n      ],\r\n      animationEasing: 'elasticOut',\r\n      animationDelayUpdate: function(idx) {\r\n        return idx * 5;\r\n      },\r\n    };\r\n  };\r\n  render() {\r\n    return <ReactEcharts option={this.getOption()} />;\r\n  }`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Butterfly extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    var labelRight = {\r\n      normal: {\r\n        position: 'right',\r\n      },\r\n    };\r\n    return {\r\n      title: {\r\n        text: '交错正负轴标签',\r\n        subtext: 'From ExcelHome',\r\n        sublink: 'http://e.weibo.com/1341556070/AjwF2AgQm',\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      grid: {\r\n        top: 80,\r\n        bottom: 30,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        position: 'top',\r\n        splitLine: { lineStyle: { type: 'dashed' } },\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        axisLine: { show: false },\r\n        axisLabel: { show: false },\r\n        axisTick: { show: false },\r\n        splitLine: { show: false },\r\n        data: [\r\n          'ten',\r\n          'nine',\r\n          'eight',\r\n          'seven',\r\n          'six',\r\n          'five',\r\n          'four',\r\n          'three',\r\n          'two',\r\n          'one',\r\n        ],\r\n      },\r\n      series: [\r\n        {\r\n          name: '生活费',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              formatter: '{b}',\r\n            },\r\n          },\r\n          data: [\r\n            { value: -0.07, label: labelRight },\r\n            { value: -0.09, label: labelRight },\r\n            0.2,\r\n            0.44,\r\n            { value: -0.23, label: labelRight },\r\n            0.08,\r\n            { value: -0.17, label: labelRight },\r\n            0.47,\r\n            { value: -0.36, label: labelRight },\r\n            0.18,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`\r\ngetOption = () => {\r\n    var labelRight = {\r\n      normal: {\r\n        position: 'right',\r\n      },\r\n    };\r\n    return {\r\n      title: {\r\n        text: '交错正负轴标签',\r\n        subtext: 'From ExcelHome',\r\n        sublink: 'http://e.weibo.com/1341556070/AjwF2AgQm',\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      grid: {\r\n        top: 80,\r\n        bottom: 30,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        position: 'top',\r\n        splitLine: { lineStyle: { type: 'dashed' } },\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        axisLine: { show: false },\r\n        axisLabel: { show: false },\r\n        axisTick: { show: false },\r\n        splitLine: { show: false },\r\n        data: [\r\n          'ten',\r\n          'nine',\r\n          'eight',\r\n          'seven',\r\n          'six',\r\n          'five',\r\n          'four',\r\n          'three',\r\n          'two',\r\n          'one',\r\n        ],\r\n      },\r\n      series: [\r\n        {\r\n          name: '生活费',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              formatter: '{b}',\r\n            },\r\n          },\r\n          data: [\r\n            { value: -0.07, label: labelRight },\r\n            { value: -0.09, label: labelRight },\r\n            0.2,\r\n            0.44,\r\n            { value: -0.23, label: labelRight },\r\n            0.08,\r\n            { value: -0.17, label: labelRight },\r\n            0.47,\r\n            { value: -0.36, label: labelRight },\r\n            0.18,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />        `}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class ButterflyStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['one', 'two', 'three'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'value',\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'category',\r\n          axisTick: { show: false },\r\n          data: ['a', 'b', 'c', 'd', 'e', 'f', 'g'],\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'one',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside',\r\n            },\r\n          },\r\n          data: [200, 170, 240, 244, 200, 220, 210],\r\n        },\r\n        {\r\n          name: 'three',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n            },\r\n          },\r\n          data: [320, 302, 341, 374, 390, 450, 420],\r\n        },\r\n        {\r\n          name: 'two',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'left',\r\n            },\r\n          },\r\n          data: [-120, -132, -101, -134, -190, -230, -210],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['one', 'two', 'three'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'value',\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'category',\r\n          axisTick: { show: false },\r\n          data: ['a', 'b', 'c', 'd', 'e', 'f', 'g'],\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'one',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside',\r\n            },\r\n          },\r\n          data: [200, 170, 240, 244, 200, 220, 210],\r\n        },\r\n        {\r\n          name: 'three',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n            },\r\n          },\r\n          data: [320, 302, 341, 374, 390, 450, 420],\r\n        },\r\n        {\r\n          name: 'two',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'left',\r\n            },\r\n          },\r\n          data: [-120, -132, -101, -134, -190, -230, -210],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class HelloECharts extends Component {\r\n  state = {\r\n    hello: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts entry example',\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['Sales'],\r\n      },\r\n      xAxis: {\r\n        data: ['shirt', 'cardign', 'chiffon shirt', 'pants', 'heels', 'socks'],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'Sales',\r\n          type: 'bar',\r\n          data: [5, 20, 36, 10, 10, 20],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('hello')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n        {this.state.hello && (\r\n          <pre>\r\n            <code>\r\n              {`getOption = () => {\r\n          return {\r\n            title: {\r\n              text: 'ECharts entry example',\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n              data: ['Sales'],\r\n            },\r\n            xAxis: {\r\n              data: ['shirt', 'cardign', 'chiffon shirt', 'pants', 'heels', 'socks'],\r\n            },\r\n            yAxis: {},\r\n            series: [\r\n              {\r\n                name: 'Sales',\r\n                type: 'bar',\r\n                data: [5, 20, 36, 10, 10, 20],\r\n              },\r\n            ],\r\n          };\r\n        };\r\n        render() {\r\n          return (\r\n              <ReactEcharts option={this.getOption()} />\r\n          `}\r\n            </code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class HorizontalBarStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n      },\r\n      series: [\r\n        {\r\n          name: '直接访问',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [320, 302, 301, 334, 390, 330, 320],\r\n        },\r\n        {\r\n          name: '邮件营销',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [120, 132, 101, 134, 90, 230, 210],\r\n        },\r\n        {\r\n          name: '联盟广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [220, 182, 191, 234, 290, 330, 310],\r\n        },\r\n        {\r\n          name: '视频广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [150, 212, 201, 154, 190, 330, 410],\r\n        },\r\n        {\r\n          name: '搜索引擎',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [820, 832, 901, 934, 1290, 1330, 1320],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n      },\r\n      series: [\r\n        {\r\n          name: '直接访问',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [320, 302, 301, 334, 390, 330, 320],\r\n        },\r\n        {\r\n          name: '邮件营销',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [120, 132, 101, 134, 90, 230, 210],\r\n        },\r\n        {\r\n          name: '联盟广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [220, 182, 191, 234, 290, 330, 310],\r\n        },\r\n        {\r\n          name: '视频广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [150, 212, 201, 154, 190, 330, 410],\r\n        },\r\n        {\r\n          name: '搜索引擎',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [820, 832, 901, 934, 1290, 1330, 1320],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return <ReactEcharts option={this.getOption()} />;\r\n  }`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class VerticalBarStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    var xAxisData = [];\r\n    var data1 = [];\r\n    var data2 = [];\r\n    var data3 = [];\r\n    var data4 = [];\r\n\r\n    for (var i = 0; i < 10; i++) {\r\n      xAxisData.push('Class' + i);\r\n      data1.push((Math.random() * 2).toFixed(2));\r\n      data2.push(-Math.random().toFixed(2));\r\n      data3.push((Math.random() * 5).toFixed(2));\r\n      data4.push((Math.random() + 0.3).toFixed(2));\r\n    }\r\n\r\n    var itemStyle = {\r\n      normal: {},\r\n      emphasis: {\r\n        barBorderWidth: 1,\r\n        shadowBlur: 10,\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowColor: 'rgba(0,0,0,0.5)',\r\n      },\r\n    };\r\n\r\n    return {\r\n      backgroundColor: '#eee',\r\n      legend: {\r\n        data: ['bar', 'bar2', 'bar3', 'bar4'],\r\n        align: 'left',\r\n        left: 10,\r\n      },\r\n      brush: {\r\n        toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n        xAxisIndex: 0,\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        name: 'X Axis',\r\n        silent: false,\r\n        axisLine: { onZero: true },\r\n        splitLine: { show: false },\r\n        splitArea: { show: false },\r\n      },\r\n      yAxis: {\r\n        inverse: true,\r\n        splitArea: { show: false },\r\n      },\r\n      grid: {\r\n        left: 100,\r\n      },\r\n      visualMap: {\r\n        type: 'continuous',\r\n        dimension: 1,\r\n        text: ['High', 'Low'],\r\n        inverse: true,\r\n        itemHeight: 200,\r\n        calculable: true,\r\n        min: -2,\r\n        max: 6,\r\n        top: 60,\r\n        left: 10,\r\n        inRange: {\r\n          colorLightness: [0.4, 0.8],\r\n        },\r\n        outOfRange: {\r\n          color: '#bbb',\r\n        },\r\n        controller: {\r\n          inRange: {\r\n            color: '#2f4554',\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data1,\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data2,\r\n        },\r\n        {\r\n          name: 'bar3',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data3,\r\n        },\r\n        {\r\n          name: 'bar4',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data4,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  handleBrushSelected = params => {\r\n    let echarts_instance = this.echarts_react.getEchartsInstance();\r\n\r\n    var brushed = [];\r\n    var brushComponent = params.batch[0];\r\n\r\n    for (var sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\r\n      var rawIndices = brushComponent.selected[sIdx].dataIndex;\r\n      brushed.push('[Series ' + sIdx + '] ' + rawIndices.join(', '));\r\n    }\r\n\r\n    echarts_instance.setOption({\r\n      title: {\r\n        backgroundColor: '#333',\r\n        text: 'SELECTED DATA INDICES: \\n' + brushed.join('\\n'),\r\n        bottom: 0,\r\n        right: 0,\r\n        width: 100,\r\n        textStyle: {\r\n          fontSize: 12,\r\n          color: '#fff',\r\n        },\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    let onEvents = {\r\n      brushSelected: this.onBrushSelected,\r\n    };\r\n    return (\r\n      <div>\r\n        <ReactEcharts\r\n          ref={e => {\r\n            this.echarts_react = e;\r\n          }}\r\n          option={this.getOption()}\r\n          onEvents={onEvents}\r\n        />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`    getOption = () => {\r\n    var xAxisData = [];\r\n    var data1 = [];\r\n    var data2 = [];\r\n    var data3 = [];\r\n    var data4 = [];\r\n\r\n    for (var i = 0; i < 10; i++) {\r\n      xAxisData.push('Class' + i);\r\n      data1.push((Math.random() * 2).toFixed(2));\r\n      data2.push(-Math.random().toFixed(2));\r\n      data3.push((Math.random() * 5).toFixed(2));\r\n      data4.push((Math.random() + 0.3).toFixed(2));\r\n    }\r\n\r\n    var itemStyle = {\r\n      normal: {},\r\n      emphasis: {\r\n        barBorderWidth: 1,\r\n        shadowBlur: 10,\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowColor: 'rgba(0,0,0,0.5)',\r\n      },\r\n    };\r\n\r\n    return {\r\n      backgroundColor: '#eee',\r\n      legend: {\r\n        data: ['bar', 'bar2', 'bar3', 'bar4'],\r\n        align: 'left',\r\n        left: 10,\r\n      },\r\n      brush: {\r\n        toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n        xAxisIndex: 0,\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        name: 'X Axis',\r\n        silent: false,\r\n        axisLine: { onZero: true },\r\n        splitLine: { show: false },\r\n        splitArea: { show: false },\r\n      },\r\n      yAxis: {\r\n        inverse: true,\r\n        splitArea: { show: false },\r\n      },\r\n      grid: {\r\n        left: 100,\r\n      },\r\n      visualMap: {\r\n        type: 'continuous',\r\n        dimension: 1,\r\n        text: ['High', 'Low'],\r\n        inverse: true,\r\n        itemHeight: 200,\r\n        calculable: true,\r\n        min: -2,\r\n        max: 6,\r\n        top: 60,\r\n        left: 10,\r\n        inRange: {\r\n          colorLightness: [0.4, 0.8],\r\n        },\r\n        outOfRange: {\r\n          color: '#bbb',\r\n        },\r\n        controller: {\r\n          inRange: {\r\n            color: '#2f4554',\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data1,\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data2,\r\n        },\r\n        {\r\n          name: 'bar3',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data3,\r\n        },\r\n        {\r\n          name: 'bar4',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data4,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  handleBrushSelected = params => {\r\n    let echarts_instance = this.echarts_react.getEchartsInstance();\r\n\r\n    var brushed = [];\r\n    var brushComponent = params.batch[0];\r\n\r\n    for (var sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\r\n      var rawIndices = brushComponent.selected[sIdx].dataIndex;\r\n      brushed.push('[Series ' + sIdx + '] ' + rawIndices.join(', '));\r\n    }\r\n\r\n    echarts_instance.setOption({\r\n      title: {\r\n        backgroundColor: '#333',\r\n        text: 'SELECTED DATA INDICES: \\n' + brushed.join('\\n'),\r\n        bottom: 0,\r\n        right: 0,\r\n        width: 100,\r\n        textStyle: {\r\n          fontSize: 12,\r\n          color: '#fff',\r\n        },\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    let onEvents = {\r\n      brushSelected: this.onBrushSelected,\r\n    };\r\n    return (\r\n      <div>\r\n        <ReactEcharts\r\n          ref={e => {\r\n            this.echarts_react = e;\r\n          }}\r\n          option={this.getOption()}\r\n          onEvents={onEvents}\r\n        />`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Bar from './Bar';\r\nimport Butterfly from './Butterfly';\r\nimport ButterflyStack from './ButterflyStack';\r\nimport HelloECharts from './HelloECharts';\r\nimport HorizontalBarStack from './HorizontalBarStack';\r\nimport VerticalBarStack from './VerticalBarStack';\r\nconst ChartsWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 50px;\r\n  margin-bottom: 125px;\r\n`;\r\n\r\nexport default class ECharts extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h1>\r\n          <a href=\"https://ecomfe.github.io/echarts-doc/public/en/index.html\">\r\n            ECharts\r\n          </a>\r\n        </h1>\r\n        <p>\r\n          Pass in a large \"options\" config object to a\r\n          <code\r\n            style={{ display: 'inline', margin: '0 6px' }}\r\n          >{`<ReactEcharts option={this.getOption()} />`}</code>\r\n          component\r\n        </p>\r\n        <h2>\r\n          <a href=\"http://git.hust.cc/echarts-for-react/#/?_k=9v3yjb\">\r\n            echarts-for-react\r\n          </a>\r\n          <span style={{ marginLeft: 15 }} />\r\n          <a href=\"https://www.npmjs.com/package/echarts-for-react\">npm</a>\r\n        </h2>\r\n\r\n        <HelloECharts />\r\n\r\n        <Bar />\r\n\r\n        <HorizontalBarStack />\r\n\r\n        <Butterfly />\r\n\r\n        <ButterflyStack />\r\n\r\n        <VerticalBarStack />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Nivo extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <a href=\"https://nivo.rocks/\">Nivo</a>\r\n        </h1>\r\n        <iframe\r\n          style={{ width: '100%', height: '100vh' }}\r\n          title=\"nivoStorybook\"\r\n          src=\"https://nivo.rocks/storybook/?selectedKind=Bar&selectedStory=stacked&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs\"\r\n          frameborder=\"0\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { format } from 'd3-format';\r\nimport moment from 'moment';\r\n// Pond\r\nimport { TimeSeries } from 'pondjs';\r\nimport React from 'react';\r\nimport _ from 'underscore';\r\n// Imports from the charts library\r\nimport {\r\n\r\n  BarChart,\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  Resizable,\r\n  YAxis,\r\n  styler,\r\n} from 'react-timeseries-charts'\r\n// Test data\r\nimport monthlyJSON from './total_traffic_6mo.json';\r\n\r\n//\r\n// October 2014 daily traffic\r\n//\r\n\r\nconst trafficPoints = [];\r\nconst interfacesJSON = require('./interface-traffic.json');\r\nconst interfaceKey = 'ornl-cr5::to_ornl_ip-a::standard';\r\nconst days = interfacesJSON[interfaceKey].days;\r\n\r\nlet max = 0;\r\n_.each(days, (value, day) => {\r\n  const dayOfMonth = Number(day);\r\n  const volIn = value.in;\r\n  const volOut = value.out;\r\n\r\n  // Max\r\n  max = Math.max(max, value.in);\r\n  max = Math.max(max, value.out);\r\n\r\n  trafficPoints.push([`2014-10-${dayOfMonth}`, volIn, volOut]);\r\n});\r\n\r\nconst octoberTrafficSeries = new TimeSeries({\r\n  name: 'October Traffic',\r\n  utc: false,\r\n  columns: ['index', 'in', 'out'],\r\n  points: trafficPoints,\r\n});\r\n\r\nmax /= 100;\r\n\r\n//\r\n// October 2014 net daily traffic for multiple interfaces\r\n//\r\n\r\nconst netTrafficPoints = [];\r\nconst interfaceKeys = [\r\n  'lbl-mr2::xe-8_3_0.911::standard',\r\n  'pnwg-cr5::111-10_1_4-814::sap',\r\n  'denv-cr5::to_denv-frgp(as14041)::standard',\r\n];\r\nconst octoberDays = interfacesJSON[interfaceKeys[0]].days;\r\n\r\nlet maxTotalTraffic = 0;\r\nlet minTotalTraffic = 0;\r\n_.each(octoberDays, (ignoreValue, day) => {\r\n  const dayOfMonth = Number(day);\r\n  const netTrafficForDay = [`2014-10-${dayOfMonth}`];\r\n  let maxDay = 0;\r\n  let minDay = 0;\r\n  _.each(interfaceKeys, interfaceKey => {\r\n    let value = interfacesJSON[interfaceKey].days[dayOfMonth];\r\n    let netTraffic = value.out - value.in;\r\n    netTrafficForDay.push(netTraffic);\r\n    if (netTraffic > 0) {\r\n      maxDay += netTraffic;\r\n    } else {\r\n      minDay += netTraffic;\r\n    }\r\n  });\r\n  maxTotalTraffic = Math.max(maxTotalTraffic, maxDay);\r\n  minTotalTraffic = Math.min(minTotalTraffic, minDay);\r\n  netTrafficPoints.push(netTrafficForDay);\r\n});\r\n\r\nconst netTrafficColumnNames = ['index'];\r\n_.each(interfaceKeys, interfaceKey => {\r\n  netTrafficColumnNames.push(interfaceKey.split(':')[0]);\r\n});\r\n\r\nconst octoberNetTrafficSeries = new TimeSeries({\r\n  name: 'October Net Traffic',\r\n  utc: false,\r\n  columns: netTrafficColumnNames,\r\n  points: netTrafficPoints,\r\n});\r\n\r\n// Correct for measurement error on October 10th\r\nmaxTotalTraffic /= 150;\r\nminTotalTraffic /= 10;\r\n\r\n//\r\n// ESnet wide monthy traffic summary (part of 2014)\r\n//\r\n\r\nconst routerData = {};\r\n_.each(monthlyJSON, router => {\r\n  const routerName = router['Router'];\r\n  if (routerName) {\r\n    routerData[routerName] = {\r\n      accepted: [],\r\n      delivered: [],\r\n    };\r\n    _.each(router, (traffic, key) => {\r\n      if (key !== 'Router') {\r\n        const month = key.split(' ')[0];\r\n        const type = key.split(' ')[1];\r\n        if (type === 'Accepted') {\r\n          routerData[routerName].accepted.push([month, traffic]);\r\n        } else if (type === 'Delivered') {\r\n          routerData[routerName].delivered.push([month, traffic]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nexport default class Bar extends React.Component {\r\n  static displayName = 'VolumeExample';\r\n\r\n  state = {\r\n    timerange: octoberTrafficSeries.range(),\r\n    selection: null,\r\n  };\r\n\r\n  handleTimeRangeChange = timerange => {\r\n    this.setState({ timerange });\r\n  };\r\n\r\n  render() {\r\n    /*\r\n\r\n    Styling the hard way\r\n    const style = {\r\n        in: {\r\n            normal: {fill: \"#A5C8E1\"},\r\n            highlighted: {fill: \"#BFDFF6\"},\r\n            selected: {fill: \"#2DB3D1\"},\r\n            muted: {fill: \"#A5C8E1\", opacity: 0.4}\r\n        }\r\n    };\r\n    const altStyle = {\r\n        out: {\r\n            normal: {fill: \"#FFCC9E\"},\r\n            highlighted: {fill: \"#fcc593\"},\r\n            selected: {fill: \"#2DB3D1\"},\r\n            muted: {fill: \"#FFCC9E\", opacity: 0.4}\r\n        }\r\n    };\r\n\r\n    const combinedStyle = {\r\n        in: {\r\n            normal: {fill: \"#A5C8E1\"},\r\n            highlighted: {fill: \"#BFDFF6\"},\r\n            selected: {fill: \"#2DB3D1\"},\r\n            muted: {fill: \"#A5C8E1\", opacity: 0.4}\r\n        },\r\n        out: {\r\n            normal: {fill: \"#FFCC9E\"},\r\n            highlighted: {fill: \"#fcc593\"},\r\n            selected: {fill: \"#2DB3D1\"},\r\n            muted: {fill: \"#FFCC9E\", opacity: 0.4}\r\n        }\r\n    };\r\n    */\r\n\r\n    const style = styler([\r\n      { key: 'in', color: '#A5C8E1', selected: '#2CB1CF' },\r\n      { key: 'out', color: '#FFCC9E', selected: '#2CB1CF' },\r\n      {\r\n        key: netTrafficColumnNames[1],\r\n        color: '#A5C8E1',\r\n        selected: '#2CB1CF',\r\n      },\r\n      {\r\n        key: netTrafficColumnNames[2],\r\n        color: '#FFCC9E',\r\n        selected: '#2CB1CF',\r\n      },\r\n      {\r\n        key: netTrafficColumnNames[3],\r\n        color: '#DEB887',\r\n        selected: '#2CB1CF',\r\n      },\r\n    ]);\r\n\r\n    const formatter = format('.2s');\r\n    const selectedDate = this.state.selection\r\n      ? this.state.selection.event.index().toNiceString()\r\n      : '--';\r\n    const selectedValue = this.state.selection\r\n      ? `${formatter(\r\n          +this.state.selection.event.value(this.state.selection.column),\r\n        )}b`\r\n      : '--';\r\n\r\n    const highlight = this.state.highlight;\r\n    let infoValues = [];\r\n    let infoNetValues = [];\r\n    if (highlight) {\r\n      const trafficText = `${formatter(highlight.event.get(highlight.column))}`;\r\n      infoValues = [{ label: 'Traffic', value: trafficText }];\r\n      infoNetValues = [\r\n        { label: 'Traffic ' + highlight.column, value: trafficText },\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <b>October 2014 Total Traffic</b>\r\n            <p style={{ color: '#808080' }}>\r\n              Selected: {selectedDate} - {selectedValue}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer\r\n                utc={false}\r\n                timeRange={this.state.timerange}\r\n                format=\"day\"\r\n                enablePanZoom={true}\r\n                onTimeRangeChanged={this.handleTimeRangeChange}\r\n                onBackgroundClick={() => this.setState({ selection: null })}\r\n                maxTime={new Date(1414827330868)}\r\n                minTime={new Date(1412143472795)}\r\n                minDuration={1000 * 60 * 60 * 24 * 5}\r\n              >\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"traffic\"\r\n                    label=\"Traffic In (B)\"\r\n                    min={0}\r\n                    max={max}\r\n                    width=\"70\"\r\n                  />\r\n                  <Charts>\r\n                    <BarChart\r\n                      axis=\"traffic\"\r\n                      style={style}\r\n                      columns={['in']}\r\n                      series={octoberTrafficSeries}\r\n                      info={infoValues}\r\n                      infoTimeFormat={index =>\r\n                        moment(index.begin()).format(\"Do MMM 'YY\")\r\n                      }\r\n                      highlighted={this.state.highlight}\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                  </Charts>\r\n                  <YAxis\r\n                    id=\"traffic-rate\"\r\n                    label=\"Avg Traffic Rate In (bps)\"\r\n                    min={0}\r\n                    max={(max / (24 * 60 * 60)) * 8}\r\n                    width=\"70\"\r\n                  />\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <hr />\r\n            Alternatively we can display bars side by side using the 'spacing'\r\n            and 'offset' props:\r\n            <hr />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer\r\n                timeRange={octoberTrafficSeries.range()}\r\n                format=\"day\"\r\n                onBackgroundClick={() => this.setState({ selection: null })}\r\n              >\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"traffic-volume\"\r\n                    label=\"Traffic (B)\"\r\n                    classed=\"traffic-in\"\r\n                    min={0}\r\n                    max={max}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  <Charts>\r\n                    <BarChart\r\n                      axis=\"traffic-volume\"\r\n                      style={style}\r\n                      size={10}\r\n                      offset={5.5}\r\n                      columns={['in']}\r\n                      series={octoberTrafficSeries}\r\n                      highlighted={this.state.highlight}\r\n                      info={infoValues}\r\n                      infoTimeFormat=\"%m/%d/%y\"\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                    <BarChart\r\n                      axis=\"traffic-volume\"\r\n                      style={style}\r\n                      size={10}\r\n                      offset={-5.5}\r\n                      columns={['out']}\r\n                      series={octoberTrafficSeries}\r\n                      info={infoValues}\r\n                      highlighted={this.state.highlight}\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                  </Charts>\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <hr />\r\n            Or of course you can stack them:\r\n            <hr />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer\r\n                timeRange={octoberTrafficSeries.range()}\r\n                format=\"day\"\r\n                onBackgroundClick={() => this.setState({ selection: null })}\r\n              >\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"traffic-volume\"\r\n                    label=\"Traffic (B)\"\r\n                    classed=\"traffic-in\"\r\n                    min={0}\r\n                    max={max}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  <Charts>\r\n                    <BarChart\r\n                      axis=\"traffic-volume\"\r\n                      style={style}\r\n                      spacing={3}\r\n                      columns={['in', 'out']}\r\n                      series={octoberTrafficSeries}\r\n                      info={infoValues}\r\n                      highlighted={this.state.highlight}\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                  </Charts>\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <hr />\r\n            BarChart can display negative values as well, as shown below for a\r\n            stacked format. Note that all bars representing positive values are\r\n            stacked together above the x-axis and the bars for negative values\r\n            are stacked below the x-axis.\r\n            <hr />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer\r\n                timeRange={octoberNetTrafficSeries.range()}\r\n                format=\"day\"\r\n                onBackgroundClick={() => this.setState({ selection: null })}\r\n              >\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"net-traffic-volume\"\r\n                    label=\"Net Traffic (B)\"\r\n                    classed=\"traffic-in\"\r\n                    min={minTotalTraffic}\r\n                    max={maxTotalTraffic}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  <Charts>\r\n                    <BarChart\r\n                      axis=\"net-traffic-volume\"\r\n                      style={style}\r\n                      spacing={3}\r\n                      columns={netTrafficColumnNames.slice(\r\n                        1,\r\n                        netTrafficColumnNames.length,\r\n                      )}\r\n                      series={octoberNetTrafficSeries}\r\n                      info={infoNetValues}\r\n                      infoWidth={140}\r\n                      highlighted={this.state.highlight}\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                  </Charts>\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  EventOut,\r\n  percentile,\r\n  Pipeline as pipeline,\r\n  Stream,\r\n  TimeEvent,\r\n  TimeRange,\r\n  TimeSeries,\r\n} from 'pondjs';\r\nimport React from 'react';\r\nimport {\r\n  BarChart,\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  Legend,\r\n  Resizable,\r\n  ScatterChart,\r\n  styler,\r\n  YAxis,\r\n} from 'react-timeseries-charts';\r\nimport Ring from 'ringjs';\r\n\r\nconst sec = 1000;\r\nconst minute = 60 * sec;\r\nconst hours = 60 * minute;\r\nconst rate = 80;\r\n\r\nexport default class Realtime extends React.Component {\r\n  static displayName = 'AggregatorDemo';\r\n\r\n  state = {\r\n    time: new Date(2015, 0, 1),\r\n    events: new Ring(200),\r\n    percentile50Out: new Ring(100),\r\n    percentile90Out: new Ring(100),\r\n  };\r\n\r\n  getNewEvent = t => {\r\n    const base = Math.sin(t.getTime() / 10000000) * 350 + 500;\r\n    return new TimeEvent(t, parseInt(base + Math.random() * 1000, 10));\r\n  };\r\n\r\n  componentDidMount() {\r\n    //\r\n    // Setup our aggregation pipelines\r\n    //\r\n\r\n    this.stream = new Stream();\r\n\r\n    pipeline()\r\n      .from(this.stream)\r\n      .windowBy('5m')\r\n      .emitOn('discard')\r\n      .aggregate({\r\n        value: { value: percentile(90) },\r\n      })\r\n      .to(EventOut, event => {\r\n        const events = this.state.percentile90Out;\r\n        events.push(event);\r\n        this.setState({ percentile90Out: events });\r\n      });\r\n\r\n    pipeline()\r\n      .from(this.stream)\r\n      .windowBy('5m')\r\n      .emitOn('discard')\r\n      .aggregate({\r\n        value: { value: percentile(50) },\r\n      })\r\n      .to(EventOut, event => {\r\n        const events = this.state.percentile50Out;\r\n        events.push(event);\r\n        this.setState({ percentile50Out: events });\r\n      });\r\n\r\n    //\r\n    // Setup our interval to advance the time and generate raw events\r\n    //\r\n\r\n    const increment = minute;\r\n    this.interval = setInterval(() => {\r\n      const t = new Date(this.state.time.getTime() + increment);\r\n      const event = this.getNewEvent(t);\r\n\r\n      // Raw events\r\n      const newEvents = this.state.events;\r\n      newEvents.push(event);\r\n      this.setState({ time: t, events: newEvents });\r\n\r\n      // Let our aggregators process the event\r\n      this.stream.addEvent(event);\r\n    }, rate);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const latestTime = `${this.state.time}`;\r\n\r\n    const fiveMinuteStyle = {\r\n      value: {\r\n        normal: { fill: '#619F3A', opacity: 0.2 },\r\n        highlight: { fill: '619F3A', opacity: 0.5 },\r\n        selected: { fill: '619F3A', opacity: 0.5 },\r\n      },\r\n    };\r\n\r\n    const scatterStyle = {\r\n      value: {\r\n        normal: {\r\n          fill: 'steelblue',\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n    };\r\n\r\n    //\r\n    // Create a TimeSeries for our raw, 5min and hourly events\r\n    //\r\n\r\n    const eventSeries = new TimeSeries({\r\n      name: 'raw',\r\n      events: this.state.events.toArray(),\r\n    });\r\n\r\n    const perc50Series = new TimeSeries({\r\n      name: 'five minute perc50',\r\n      events: this.state.percentile50Out.toArray(),\r\n    });\r\n\r\n    const perc90Series = new TimeSeries({\r\n      name: 'five minute perc90',\r\n      events: this.state.percentile90Out.toArray(),\r\n    });\r\n\r\n    // Timerange for the chart axis\r\n    const initialBeginTime = new Date(2015, 0, 1);\r\n    const timeWindow = 3 * hours;\r\n\r\n    let beginTime;\r\n    const endTime = new Date(this.state.time.getTime() + minute);\r\n    if (endTime.getTime() - timeWindow < initialBeginTime.getTime()) {\r\n      beginTime = initialBeginTime;\r\n    } else {\r\n      beginTime = new Date(endTime.getTime() - timeWindow);\r\n    }\r\n    const timeRange = new TimeRange(beginTime, endTime);\r\n\r\n    // Charts (after a certain amount of time, just show hourly rollup)\r\n    const charts = (\r\n      <Charts>\r\n        <BarChart\r\n          axis=\"y\"\r\n          series={perc90Series}\r\n          style={fiveMinuteStyle}\r\n          columns={['value']}\r\n        />\r\n        <BarChart\r\n          axis=\"y\"\r\n          series={perc50Series}\r\n          style={fiveMinuteStyle}\r\n          columns={['value']}\r\n        />\r\n        <ScatterChart axis=\"y\" series={eventSeries} style={scatterStyle} />\r\n      </Charts>\r\n    );\r\n\r\n    const dateStyle = {\r\n      fontSize: 12,\r\n      color: '#AAA',\r\n      borderWidth: 1,\r\n      borderColor: '#F4F4F4',\r\n    };\r\n\r\n    const style = styler([\r\n      { key: 'perc50', color: '#C5DCB7', width: 1, dashed: true },\r\n      { key: 'perc90', color: '#DFECD7', width: 2 },\r\n    ]);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Legend\r\n              type=\"swatch\"\r\n              style={style}\r\n              categories={[\r\n                {\r\n                  key: 'perc50',\r\n                  label: '50th Percentile',\r\n                  style: { fill: '#C5DCB7' },\r\n                },\r\n                {\r\n                  key: 'perc90',\r\n                  label: '90th Percentile',\r\n                  style: { fill: '#DFECD7' },\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <span style={dateStyle}>{latestTime}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer timeRange={timeRange}>\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"y\"\r\n                    label=\"Value\"\r\n                    min={0}\r\n                    max={1500}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  {charts}\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { TimeRange, TimeSeries } from 'pondjs';\r\nimport timerangeevent from 'pondjs/lib/lib/timerangeevent';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  EventChart,\r\n  Resizable,\r\n} from 'react-timeseries-charts';\r\nimport styled from 'styled-components';\r\nimport Bar from './Bar';\r\nimport Realtime from './Realtime';\r\n\r\nconst ChartsWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n`;\r\n\r\n//\r\n// Test data\r\n//\r\n\r\nconst outageEvents = [\r\n  {\r\n    startTime: '2015-03-08T09:00:00Z',\r\n    endTime: '2015-03-22T14:00:00Z',\r\n    title: 'ANL Scheduled Maintenance',\r\n    description: 'ANL will be switching border routers...',\r\n    completed: true,\r\n    external_ticket: '',\r\n    esnet_ticket: 'ESNET-20150302-002',\r\n    organization: 'ANL',\r\n    type: 'Planned',\r\n  },\r\n  {\r\n    startTime: '2015-04-01T03:30:00Z',\r\n    endTime: '2015-04-02T16:50:00Z',\r\n    title: 'STAR-CR5 < 100 ge 06519 > ANL  - Outage',\r\n    description: 'The listed circuit was unavailable due to bent pins.',\r\n    completed: true,\r\n    external_ticket: '3576:144',\r\n    esnet_ticket: 'ESNET-20150421-013',\r\n    organization: 'Internet2 / Level 3',\r\n    type: 'Unplanned',\r\n  },\r\n  {\r\n    startTime: '2015-04-22T03:30:00Z',\r\n    endTime: '2015-04-22T13:00:00Z',\r\n    description: 'At 13:33 pacific circuit 06519 went down.',\r\n    title: 'STAR-CR5 < 100 ge 06519 > ANL  - Outage',\r\n    completed: true,\r\n    external_ticket: '',\r\n    esnet_ticket: 'ESNET-20150421-013',\r\n    organization: 'Internet2 / Level 3',\r\n    type: 'Unplanned',\r\n  },\r\n];\r\n\r\n//\r\n// Turn data into TimeSeries\r\n//\r\n\r\nconst events = outageEvents.map(\r\n  ({ startTime, endTime, ...data }) =>\r\n    new timerangeevent(\r\n      new TimeRange(new Date(startTime), new Date(endTime)),\r\n      data,\r\n    ),\r\n);\r\nconst series = new TimeSeries({ name: 'outages', events });\r\n\r\n//\r\n// Render event chart\r\n//\r\n\r\nfunction outageEventStyleFunc(event, state) {\r\n  const color = event.get('type') === 'Planned' ? '#998ec3' : '#f1a340';\r\n  switch (state) {\r\n    case 'normal':\r\n      return {\r\n        fill: color,\r\n      };\r\n    case 'hover':\r\n      return {\r\n        fill: color,\r\n        opacity: 0.4,\r\n      };\r\n    case 'selected':\r\n      return {\r\n        fill: color,\r\n      };\r\n    default:\r\n    //pass\r\n  }\r\n}\r\n\r\nexport default class ReactTimeSeries extends Component {\r\n  state = {\r\n    tracker: null,\r\n    timerange: series.timerange(),\r\n    eventChartVisible: false,\r\n    realtimeChartVisible: false,\r\n  };\r\n  toggleVisibility = which => {\r\n    this.setState({ [which]: !this.state[which] });\r\n  };\r\n  handleTrackerChanged = tracker => {\r\n    this.setState({ tracker });\r\n  };\r\n  handleTimeRangeChange = timerange => {\r\n    this.setState({ timerange });\r\n  };\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <div>\r\n          <h1>\r\n            <a href=\"http://software.es.net/react-timeseries-charts/#/\">\r\n              React Timeseries Charts\r\n            </a>\r\n          </h1>\r\n          <h3>\r\n            uses <a href=\"http://software.es.net/pond/#/\">pond.js</a> for\r\n            handling time series data\r\n          </h3>\r\n        </div>\r\n        <h4>\r\n          <a href=\"http://software.es.net/react-timeseries-charts/#/api/charts/EventChart\">\r\n            EventChart\r\n          </a>\r\n        </h4>\r\n        <div>\r\n          <Resizable>\r\n            <ChartContainer\r\n              timeRange={this.state.timerange}\r\n              enablePanZoom={true}\r\n              onTimeRangeChanged={this.handleTimeRangeChange}\r\n            >\r\n              <ChartRow height=\"30\">\r\n                <Charts>\r\n                  <EventChart\r\n                    series={series}\r\n                    size={45}\r\n                    style={outageEventStyleFunc}\r\n                    label={e => e.get('title')}\r\n                  />\r\n                </Charts>\r\n              </ChartRow>\r\n            </ChartContainer>\r\n          </Resizable>\r\n          <button onClick={() => this.toggleVisibility('eventChartVisible')}>\r\n            {this.state.eventChartVisible ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.eventChartVisible && (\r\n            <pre>\r\n              <code>{`\r\n//\r\n// Test data\r\n//\r\n\r\nconst outageEvents = [\r\n  {\r\n    startTime: '2015-03-08T09:00:00Z',\r\n    endTime: '2015-03-22T14:00:00Z',\r\n    title: 'ANL Scheduled Maintenance',\r\n    description: 'ANL will be switching border routers...',\r\n    completed: true,\r\n    external_ticket: '',\r\n    esnet_ticket: 'ESNET-20150302-002',\r\n    organization: 'ANL',\r\n    type: 'Planned',\r\n  },\r\n  {\r\n    startTime: '2015-04-01T03:30:00Z',\r\n    endTime: '2015-04-02T16:50:00Z',\r\n    title: 'STAR-CR5 < 100 ge 06519 > ANL  - Outage',\r\n    description: 'The listed circuit was unavailable due to bent pins.',\r\n    completed: true,\r\n    external_ticket: '3576:144',\r\n    esnet_ticket: 'ESNET-20150421-013',\r\n    organization: 'Internet2 / Level 3',\r\n    type: 'Unplanned',\r\n  },\r\n  {\r\n    startTime: '2015-04-22T03:30:00Z',\r\n    endTime: '2015-04-22T13:00:00Z',\r\n    description: 'At 13:33 pacific circuit 06519 went down.',\r\n    title: 'STAR-CR5 < 100 ge 06519 > ANL  - Outage',\r\n    completed: true,\r\n    external_ticket: '',\r\n    esnet_ticket: 'ESNET-20150421-013',\r\n    organization: 'Internet2 / Level 3',\r\n    type: 'Unplanned',\r\n  },\r\n];\r\n\r\n//\r\n// Turn data into TimeSeries\r\n//\r\n\r\nconst events = outageEvents.map(\r\n  ({ startTime, endTime, ...data }) =>\r\n    new timerangeevent(\r\n      new TimeRange(new Date(startTime), new Date(endTime)),\r\n      data,\r\n    ),\r\n);\r\nconst series = new TimeSeries({ name: 'outages', events });\r\n\r\n//\r\n// Render event chart\r\n//\r\n\r\nfunction outageEventStyleFunc(event, state) {\r\n  const color = event.get('type') === 'Planned' ? '#998ec3' : '#f1a340';\r\n  switch (state) {\r\n    case 'normal':\r\n      return {\r\n        fill: color,\r\n      };\r\n    case 'hover':\r\n      return {\r\n        fill: color,\r\n        opacity: 0.4,\r\n      };\r\n    case 'selected':\r\n      return {\r\n        fill: color,\r\n      };\r\n    default:\r\n    //pass\r\n  }\r\n}\r\n\r\nexport default class ReactTimeSeries extends Component {\r\n  state = {\r\n    tracker: null,\r\n    timerange: series.timerange(),\r\n    eventChartVisible: true,\r\n  };\r\n  toggleVisibility = which => {\r\n    this.setState({ [which]: !this.state[which] });\r\n  };\r\n  handleTrackerChanged = tracker => {\r\n    this.setState({ tracker });\r\n  };\r\n  handleTimeRangeChange = timerange => {\r\n    this.setState({ timerange });\r\n  };\r\n      render() {\r\n        return (\r\n            <Resizable>\r\n            <ChartContainer\r\n              timeRange={this.state.timerange}\r\n              enablePanZoom={true}\r\n              onTimeRangeChanged={this.handleTimeRangeChange}\r\n            >\r\n              <ChartRow height=\"30\">\r\n                <Charts>\r\n                  <EventChart\r\n                    series={series}\r\n                    size={45}\r\n                    style={outageEventStyleFunc}\r\n                    label={e => e.get('title')}\r\n                  />\r\n                </Charts>\r\n              </ChartRow>\r\n            </ChartContainer>\r\n          </Resizable>\r\n          `}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h4>\r\n            <a href=\"http://software.es.net/react-timeseries-charts/#/api/charts/EventChart\">\r\n              Realtime chart\r\n            </a>\r\n          </h4>\r\n\r\n          <Realtime />\r\n          <button onClick={() => this.toggleVisibility('realtimeChartVisible')}>\r\n            {this.state.realtimeChartVisible ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.realtimeChartVisible && (\r\n            <pre>\r\n              <code>{`\r\nimport {\r\n  EventOut,\r\n  percentile,\r\n  Pipeline as pipeline,\r\n  Stream,\r\n  TimeEvent,\r\n  TimeRange,\r\n  TimeSeries,\r\n} from 'pondjs';\r\nimport React from 'react';\r\nimport {\r\n  BarChart,\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  Legend,\r\n  Resizable,\r\n  ScatterChart,\r\n  styler,\r\n  YAxis,\r\n} from 'react-timeseries-charts';\r\nimport Ring from 'ringjs';\r\n\r\nconst sec = 1000;\r\nconst minute = 60 * sec;\r\nconst hours = 60 * minute;\r\nconst rate = 80;\r\n\r\nexport default class Realtime extends React.Component {\r\n  static displayName = 'AggregatorDemo';\r\n\r\n  state = {\r\n    time: new Date(2015, 0, 1),\r\n    events: new Ring(200),\r\n    percentile50Out: new Ring(100),\r\n    percentile90Out: new Ring(100),\r\n  };\r\n\r\n  getNewEvent = t => {\r\n    const base = Math.sin(t.getTime() / 10000000) * 350 + 500;\r\n    return new TimeEvent(t, parseInt(base + Math.random() * 1000, 10));\r\n  };\r\n\r\n  componentDidMount() {\r\n    //\r\n    // Setup our aggregation pipelines\r\n    //\r\n\r\n    this.stream = new Stream();\r\n\r\n    pipeline()\r\n      .from(this.stream)\r\n      .windowBy('5m')\r\n      .emitOn('discard')\r\n      .aggregate({\r\n        value: { value: percentile(90) },\r\n      })\r\n      .to(EventOut, event => {\r\n        const events = this.state.percentile90Out;\r\n        events.push(event);\r\n        this.setState({ percentile90Out: events });\r\n      });\r\n\r\n    pipeline()\r\n      .from(this.stream)\r\n      .windowBy('5m')\r\n      .emitOn('discard')\r\n      .aggregate({\r\n        value: { value: percentile(50) },\r\n      })\r\n      .to(EventOut, event => {\r\n        const events = this.state.percentile50Out;\r\n        events.push(event);\r\n        this.setState({ percentile50Out: events });\r\n      });\r\n\r\n    //\r\n    // Setup our interval to advance the time and generate raw events\r\n    //\r\n\r\n    const increment = minute;\r\n    this.interval = setInterval(() => {\r\n      const t = new Date(this.state.time.getTime() + increment);\r\n      const event = this.getNewEvent(t);\r\n\r\n      // Raw events\r\n      const newEvents = this.state.events;\r\n      newEvents.push(event);\r\n      this.setState({ time: t, events: newEvents });\r\n\r\n      // Let our aggregators process the event\r\n      this.stream.addEvent(event);\r\n    }, rate);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const latestTime = \\`\\${this.state.time}\\`;\r\n\r\n    const fiveMinuteStyle = {\r\n      value: {\r\n        normal: { fill: '#619F3A', opacity: 0.2 },\r\n        highlight: { fill: '619F3A', opacity: 0.5 },\r\n        selected: { fill: '619F3A', opacity: 0.5 },\r\n      },\r\n    };\r\n\r\n    const scatterStyle = {\r\n      value: {\r\n        normal: {\r\n          fill: 'steelblue',\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n    };\r\n\r\n    //\r\n    // Create a TimeSeries for our raw, 5min and hourly events\r\n    //\r\n\r\n    const eventSeries = new TimeSeries({\r\n      name: 'raw',\r\n      events: this.state.events.toArray(),\r\n    });\r\n\r\n    const perc50Series = new TimeSeries({\r\n      name: 'five minute perc50',\r\n      events: this.state.percentile50Out.toArray(),\r\n    });\r\n\r\n    const perc90Series = new TimeSeries({\r\n      name: 'five minute perc90',\r\n      events: this.state.percentile90Out.toArray(),\r\n    });\r\n\r\n    // Timerange for the chart axis\r\n    const initialBeginTime = new Date(2015, 0, 1);\r\n    const timeWindow = 3 * hours;\r\n\r\n    let beginTime;\r\n    const endTime = new Date(this.state.time.getTime() + minute);\r\n    if (endTime.getTime() - timeWindow < initialBeginTime.getTime()) {\r\n      beginTime = initialBeginTime;\r\n    } else {\r\n      beginTime = new Date(endTime.getTime() - timeWindow);\r\n    }\r\n    const timeRange = new TimeRange(beginTime, endTime);\r\n\r\n    // Charts (after a certain amount of time, just show hourly rollup)\r\n    const charts = (\r\n      <Charts>\r\n        <BarChart\r\n          axis=\"y\"\r\n          series={perc90Series}\r\n          style={fiveMinuteStyle}\r\n          columns={['value']}\r\n        />\r\n        <BarChart\r\n          axis=\"y\"\r\n          series={perc50Series}\r\n          style={fiveMinuteStyle}\r\n          columns={['value']}\r\n        />\r\n        <ScatterChart axis=\"y\" series={eventSeries} style={scatterStyle} />\r\n      </Charts>\r\n    );\r\n\r\n    const dateStyle = {\r\n      fontSize: 12,\r\n      color: '#AAA',\r\n      borderWidth: 1,\r\n      borderColor: '#F4F4F4',\r\n    };\r\n\r\n    const style = styler([\r\n      { key: 'perc50', color: '#C5DCB7', width: 1, dashed: true },\r\n      { key: 'perc90', color: '#DFECD7', width: 2 },\r\n    ]);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Legend\r\n              type=\"swatch\"\r\n              style={style}\r\n              categories={[\r\n                {\r\n                  key: 'perc50',\r\n                  label: '50th Percentile',\r\n                  style: { fill: '#C5DCB7' },\r\n                },\r\n                {\r\n                  key: 'perc90',\r\n                  label: '90th Percentile',\r\n                  style: { fill: '#DFECD7' },\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <span style={dateStyle}>{latestTime}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer timeRange={timeRange}>\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"y\"\r\n                    label=\"Value\"\r\n                    min={0}\r\n                    max={1500}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  {charts}\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n          `}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h4>\r\n            <a href=\"https://software.es.net/react-timeseries-charts/#/example/volume\">\r\n              Bar charts\r\n            </a>\r\n          </h4>\r\n          <Bar />\r\n        </div>\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  VictoryArea,\r\n  VictoryAxis,\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryLabel,\r\n  VictoryStack,\r\n  VictoryTheme,\r\n} from 'victory';\r\n\r\nexport const ChartsWrapper = styled.div``;\r\n\r\nconst data = [\r\n  { quarter: 1, earnings: 13000 },\r\n  { quarter: 2, earnings: 16500 },\r\n  { quarter: 3, earnings: 14250 },\r\n  { quarter: 4, earnings: 19000 },\r\n];\r\nconst data2012 = [\r\n  { quarter: 1, earnings: 13000 },\r\n  { quarter: 2, earnings: 16500 },\r\n  { quarter: 3, earnings: 14250 },\r\n  { quarter: 4, earnings: 19000 },\r\n];\r\n\r\nconst data2013 = [\r\n  { quarter: 1, earnings: 15000 },\r\n  { quarter: 2, earnings: 12500 },\r\n  { quarter: 3, earnings: 19500 },\r\n  { quarter: 4, earnings: 13000 },\r\n];\r\n\r\nconst data2014 = [\r\n  { quarter: 1, earnings: 11500 },\r\n  { quarter: 2, earnings: 13250 },\r\n  { quarter: 3, earnings: 20000 },\r\n  { quarter: 4, earnings: 15500 },\r\n];\r\n\r\nconst data2015 = [\r\n  { quarter: 1, earnings: 18000 },\r\n  { quarter: 2, earnings: 13250 },\r\n  { quarter: 3, earnings: 15000 },\r\n  { quarter: 4, earnings: 12000 },\r\n];\r\n\r\nconst sampleData = [\r\n  { x: 1, y: 2 },\r\n  { x: 2, y: 1 },\r\n  { x: 3, y: 4 },\r\n  { x: 4, y: 3 },\r\n];\r\nexport default class Bar extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h4>\r\n          <a href=\"https://formidable.com/open-source/victory/docs/victory-bar/\">\r\n            Victory Bar Charts\r\n          </a>\r\n        </h4>\r\n        <VictoryChart\r\n          // domainPadding will add space to each side of VictoryBar to\r\n          // prevent it from overlapping the axis\r\n          domainPadding={20}\r\n          theme={VictoryTheme.material}\r\n        >\r\n          <VictoryAxis\r\n            // tickValues specifies both the number of ticks and where\r\n            // they are placed on the axis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis\r\n            dependentAxis\r\n            // tickFormat specifies how ticks should be displayed\r\n            tickFormat={x => `$${x / 1000}k`}\r\n          />\r\n          <VictoryBar\r\n            data={data}\r\n            // data accessor for x values\r\n            x=\"quarter\"\r\n            // data accessor for y values\r\n            y=\"earnings\"\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart\r\n            // domainPadding will add space to each side of VictoryBar to\r\n            // prevent it from overlapping the axis\r\n            domainPadding={20}\r\n            theme={VictoryTheme.material}\r\n          >\r\n            <VictoryAxis\r\n              // tickValues specifies both the number of ticks and where\r\n              // they are placed on the axis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis\r\n              dependentAxis\r\n              // tickFormat specifies how ticks should be displayed\r\n              tickFormat={x => \\`$\\${x / 1000}k\\`}\r\n            />\r\n            <VictoryBar\r\n              data={data}\r\n              // data accessor for x values\r\n              x=\"quarter\"\r\n              // data accessor for y values\r\n              y=\"earnings\"\r\n            />\r\n          </VictoryChart>\r\n        `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n          <VictoryAxis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis dependentAxis tickFormat={x => `$${x / 1000}k`} />\r\n          <VictoryStack>\r\n            <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n          </VictoryStack>\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n            <VictoryAxis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={x => \\`$\\${x / 1000}k\\`} />\r\n            <VictoryStack>\r\n              <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n            </VictoryStack>\r\n          </VictoryChart>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n          <VictoryAxis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis dependentAxis tickFormat={x => `$${x / 1000}k`} />\r\n          <VictoryStack colorScale={'warm'}>\r\n            <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n          </VictoryStack>\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n            <VictoryAxis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={x => \\`$\\${x / 1000}k\\`} />\r\n            <VictoryStack colorScale={'warm'}>\r\n              <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n            </VictoryStack>\r\n          </VictoryChart>\r\n       `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart theme={VictoryTheme.material} domainPadding={10}>\r\n          <VictoryBar\r\n            style={{ data: { fill: '#c43a31' } }}\r\n            data={data}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart theme={VictoryTheme.material} domainPadding={10}>\r\n            <VictoryBar\r\n              style={{ data: { fill: '#c43a31' } }}\r\n              data={data}\r\n              x=\"quarter\"\r\n              y=\"earnings\"\r\n              />\r\n              </VictoryChart>\r\n\r\n              `}\r\n          </code>\r\n        </pre>\r\n        <div>\r\n          <h3>Click Me</h3>\r\n          <VictoryBar\r\n            style={{\r\n              data: { fill: '#c43a31' },\r\n            }}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            events={[\r\n              {\r\n                target: 'data',\r\n                eventHandlers: {\r\n                  onClick: () => {\r\n                    return [\r\n                      {\r\n                        target: 'data',\r\n                        mutation: props => {\r\n                          const fill = props.style && props.style.fill;\r\n                          return fill === 'black'\r\n                            ? null\r\n                            : { style: { fill: 'black' } };\r\n                        },\r\n                      },\r\n                    ];\r\n                  },\r\n                },\r\n              },\r\n            ]}\r\n            data={data}\r\n          />\r\n        </div>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <div>\r\n          <h3>Click Me</h3>\r\n          <VictoryBar\r\n          style={{\r\n            data: { fill: '#c43a31' },\r\n          }}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          events={[\r\n            {\r\n              target: 'data',\r\n              eventHandlers: {\r\n                onClick: () => {\r\n                  return [\r\n                    {\r\n                      target: 'data',\r\n                      mutation: props => {\r\n                        const fill = props.style && props.style.fill;\r\n                        return fill === 'black'\r\n                        ? null\r\n                        : { style: { fill: 'black' } };\r\n                      },\r\n                    },\r\n                  ];\r\n                },\r\n              },\r\n            },\r\n          ]}\r\n          data={data}\r\n          />\r\n          </div>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart theme={VictoryTheme.material} domainPadding={{ y: 10 }}>\r\n          <VictoryBar\r\n            horizontal\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            style={{\r\n              data: { fill: '#c43a31' },\r\n            }}\r\n            data={data}\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart theme={VictoryTheme.material} domainPadding={{ y: 10 }}>\r\n            <VictoryBar\r\n              horizontal\r\n              x=\"quarter\"\r\n              y=\"earnings\"\r\n              style={{\r\n                data: { fill: '#c43a31' },\r\n              }}\r\n              data={data}\r\n              />\r\n              </VictoryChart>\r\n              `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={d => d.earnings}\r\n          style={{ labels: { fill: 'white' } }}\r\n          labelComponent={<VictoryLabel dy={30} />}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={(d) => d.earnings}\r\n          style={{ labels: { fill: \"white\" } }}\r\n          labelComponent={<VictoryLabel dy={30} />}\r\n          />\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={d => `y: ${d.earnings}`}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n            data={data}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            labels={d => \\`y: \\${d.earnings}\\`}\r\n            />\r\n            `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          style={{\r\n            data: {\r\n              fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              stroke: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              fillOpacity: 0.7,\r\n              strokeWidth: 3,\r\n            },\r\n            labels: {\r\n              fontSize: 15,\r\n              fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n            },\r\n          }}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          data={data}\r\n          labels={d => d.quarter}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n            style={{\r\n              data: {\r\n                fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n                stroke: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n                fillOpacity: 0.7,\r\n                strokeWidth: 3,\r\n              },\r\n              labels: {\r\n                fontSize: 15,\r\n                fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              },\r\n            }}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            data={data}\r\n            labels={d => d.quarter}\r\n            />\r\n            `}\r\n          </code>\r\n        </pre>\r\n        <h2>standalone</h2>\r\n        <p>type: boolean</p>\r\n        <p>VictoryBar uses the standard standalone prop.</p>\r\n        <p>\r\n          Read about it{' '}\r\n          <a href=\"https://formidable.com/open-source/victory/docs/common-props/#standalone\">\r\n            here\r\n          </a>\r\n        </p>\r\n        <p>\r\n          note: When VictoryBar is nested within a component like VictoryChart,\r\n          this prop will be set to false{' '}\r\n        </p>\r\n        <p>default: standalone={'{true}'}</p>\r\n        <svg width={300} height={300}>\r\n          <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n          <VictoryBar\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            standalone={false}\r\n            width={300}\r\n            height={300}\r\n            padding={{ left: 10, right: 10 }}\r\n            data={data}\r\n          />\r\n        </svg>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <svg width={300} height={300}>\r\n            <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n            <VictoryBar\r\n            x=\"quarter\"\r\n              y=\"earnings\"\r\n              standalone={false}\r\n              width={300}\r\n              height={300}\r\n              padding={{ left: 10, right: 10 }}\r\n              data={data}\r\n              />\r\n              </svg>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <svg width={300} height={300}>\r\n          <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n          <VictoryArea\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            standalone={false}\r\n            width={300}\r\n            height={300}\r\n            padding={0}\r\n            data={data}\r\n          />\r\n        </svg>\r\n        <h2>y0</h2>\r\n        <p>type: string || integer || array[string] || function</p>\r\n        <p>\r\n          VictoryBar uses the standard y0 data accessor prop to set a baseline.\r\n        </p>\r\n        <p>\r\n          Read about it{' '}\r\n          <a href=\"https://formidable.com/open-source/victory/docs/common-props#y0\">\r\n            here\r\n          </a>\r\n        </p>\r\n        <VictoryChart domainPadding={30}>\r\n          <VictoryBar\r\n            // x=\"quarter\"\r\n            // y=\"earnings\"\r\n            data={sampleData}\r\n            y0={d => d.y - 1}\r\n          />\r\n        </VictoryChart>\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  BarChart,\r\n  Bar,\r\n  Brush,\r\n  ReferenceLine,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\nimport React, { Component } from 'react';\r\nconst data = [\r\n  { name: '1', uv: 300, pv: 456 },\r\n  { name: '2', uv: -145, pv: 230 },\r\n  { name: '3', uv: -100, pv: 345 },\r\n  { name: '4', uv: -8, pv: 450 },\r\n  { name: '5', uv: 100, pv: 321 },\r\n  { name: '6', uv: 9, pv: 235 },\r\n  { name: '7', uv: 53, pv: 267 },\r\n  { name: '8', uv: 252, pv: -378 },\r\n  { name: '9', uv: 79, pv: -210 },\r\n  { name: '10', uv: 294, pv: -23 },\r\n  { name: '12', uv: 43, pv: 45 },\r\n  { name: '13', uv: -74, pv: 90 },\r\n  { name: '14', uv: -71, pv: 130 },\r\n  { name: '15', uv: -117, pv: 11 },\r\n  { name: '16', uv: -186, pv: 107 },\r\n  { name: '17', uv: -16, pv: 926 },\r\n  { name: '18', uv: -125, pv: 653 },\r\n  { name: '19', uv: 222, pv: 366 },\r\n  { name: '20', uv: 372, pv: 486 },\r\n  { name: '21', uv: 182, pv: 512 },\r\n  { name: '22', uv: 164, pv: 302 },\r\n  { name: '23', uv: 316, pv: 425 },\r\n  { name: '24', uv: 131, pv: 467 },\r\n  { name: '25', uv: 291, pv: -190 },\r\n  { name: '26', uv: -47, pv: 194 },\r\n  { name: '27', uv: -415, pv: 371 },\r\n  { name: '28', uv: -182, pv: 376 },\r\n  { name: '29', uv: -93, pv: 295 },\r\n  { name: '30', uv: -99, pv: 322 },\r\n  { name: '31', uv: -52, pv: 246 },\r\n  { name: '32', uv: 154, pv: 33 },\r\n  { name: '33', uv: 205, pv: 354 },\r\n  { name: '34', uv: 70, pv: 258 },\r\n  { name: '35', uv: -25, pv: 359 },\r\n  { name: '36', uv: -59, pv: 192 },\r\n  { name: '37', uv: -63, pv: 464 },\r\n  { name: '38', uv: -91, pv: -2 },\r\n  { name: '39', uv: -66, pv: 154 },\r\n  { name: '40', uv: -50, pv: 186 },\r\n];\r\n\r\nexport default class BrushBar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  LabelList,\r\n  Legend,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst renderCustomizedLabel = props => {\r\n  const { x, y, width, value } = props;\r\n  const radius = 10;\r\n\r\n  return (\r\n    <g>\r\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#8884d8\" />\r\n      <text\r\n        x={x + width / 2}\r\n        y={y - radius}\r\n        fill=\"#fff\"\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"middle\"\r\n      >\r\n        {value.split(' ')[1]}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class CustomLabel extends Component {\r\n  state = {\r\n    data: [\r\n      { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n      { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n      { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n      { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n      { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n      { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n      { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n    ],\r\n    activeIndex: 0,\r\n  };\r\n\r\n  handleClick = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={this.state.data}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"pv\" fill=\"#8884d8\" minPointSize={5}>\r\n          <LabelList dataKey=\"name\" content={renderCustomizedLabel} />\r\n        </Bar>\r\n        <Bar dataKey=\"uv\" fill=\"#82ca9d\" minPointSize={10} />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\n\r\nclass CustomTooltip extends Component {\r\n  getIntroOfPage = label => {\r\n    if (label === 'Page A') {\r\n      return \"Page A is about men's clothing\";\r\n    } else if (label === 'Page B') {\r\n      return \"Page B is about women's dress\";\r\n    } else if (label === 'Page C') {\r\n      return \"Page C is about women's bag\";\r\n    } else if (label === 'Page D') {\r\n      return 'Page D is about household goods';\r\n    } else if (label === 'Page E') {\r\n      return 'Page E is about food';\r\n    } else if (label === 'Page F') {\r\n      return 'Page F is about baby food';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { active } = this.props;\r\n\r\n    if (active) {\r\n      const { payload, label } = this.props;\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n          <p className=\"intro\">{this.getIntroOfPage(label)}</p>\r\n          <p className=\"desc\">Anything you want can be displayed here.</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default class BarChartCustomTooltip extends Component {\r\n  render() {\r\n    return (\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={data}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend />\r\n        <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ReferenceArea,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  { name: 1, cost: 4.11, impression: 100 },\r\n  { name: 2, cost: 2.39, impression: 120 },\r\n  { name: 3, cost: 1.37, impression: 150 },\r\n  { name: 4, cost: 1.16, impression: 180 },\r\n  { name: 5, cost: 2.29, impression: 200 },\r\n  { name: 6, cost: 3, impression: 499 },\r\n  { name: 7, cost: 0.53, impression: 50 },\r\n  { name: 8, cost: 2.52, impression: 100 },\r\n  { name: 9, cost: 1.79, impression: 200 },\r\n  { name: 10, cost: 2.94, impression: 222 },\r\n  { name: 11, cost: 4.3, impression: 210 },\r\n  { name: 12, cost: 4.41, impression: 300 },\r\n  { name: 13, cost: 2.1, impression: 50 },\r\n  { name: 14, cost: 8, impression: 190 },\r\n  { name: 15, cost: 0, impression: 300 },\r\n  { name: 16, cost: 9, impression: 400 },\r\n  { name: 17, cost: 3, impression: 200 },\r\n  { name: 18, cost: 2, impression: 50 },\r\n  { name: 19, cost: 3, impression: 100 },\r\n  { name: 20, cost: 7, impression: 100 },\r\n];\r\n\r\nconst getAxisYDomain = (from, to, ref, offset) => {\r\n  const refData = data.slice(from - 1, to);\r\n  let [bottom, top] = [refData[0][ref], refData[0][ref]];\r\n  refData.forEach(d => {\r\n    if (d[ref] > top) top = d[ref];\r\n    if (d[ref] < bottom) bottom = d[ref];\r\n  });\r\n\r\n  return [(bottom | 0) - offset, (top | 0) + offset];\r\n};\r\n\r\nconst initialState = {\r\n  data,\r\n  left: 'dataMin',\r\n  right: 'dataMax',\r\n  refAreaLeft: '',\r\n  refAreaRight: '',\r\n  top: 'dataMax+1',\r\n  bottom: 'dataMin-1',\r\n  top2: 'dataMax+20',\r\n  bottom2: 'dataMin-20',\r\n  animation: true,\r\n};\r\n\r\nexport default class HighlightAndZoom extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  zoom() {\r\n    let { refAreaLeft, refAreaRight, data } = this.state;\r\n\r\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\r\n      this.setState(() => ({\r\n        refAreaLeft: '',\r\n        refAreaRight: '',\r\n      }));\r\n      return;\r\n    }\r\n\r\n    // xAxis domain\r\n    if (refAreaLeft > refAreaRight)\r\n      [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\r\n\r\n    // yAxis domain\r\n    const [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, 'cost', 1);\r\n    const [bottom2, top2] = getAxisYDomain(\r\n      refAreaLeft,\r\n      refAreaRight,\r\n      'impression',\r\n      50,\r\n    );\r\n\r\n    this.setState(() => ({\r\n      refAreaLeft: '',\r\n      refAreaRight: '',\r\n      data: data.slice(),\r\n      left: refAreaLeft,\r\n      right: refAreaRight,\r\n      bottom,\r\n      top,\r\n      bottom2,\r\n      top2,\r\n    }));\r\n  }\r\n\r\n  zoomOut() {\r\n    const { data } = this.state;\r\n    this.setState(() => ({\r\n      data: data.slice(),\r\n      refAreaLeft: '',\r\n      refAreaRight: '',\r\n      left: 'dataMin',\r\n      right: 'dataMax',\r\n      top: 'dataMax+1',\r\n      bottom: 'dataMin',\r\n      top2: 'dataMax+50',\r\n      bottom2: 'dataMin+50',\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      left,\r\n      right,\r\n      refAreaLeft,\r\n      refAreaRight,\r\n      top,\r\n      bottom,\r\n      top2,\r\n      bottom2,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"highlight-bar-charts\">\r\n        <button className=\"btn update\" onClick={this.zoomOut.bind(this)}>\r\n          Zoom Out\r\n        </button>\r\n\r\n        <p>Highlight / Zoom - able Line Chart</p>\r\n        <LineChart\r\n          width={800}\r\n          height={400}\r\n          data={data}\r\n          onMouseDown={e => this.setState({ refAreaLeft: e.activeLabel })}\r\n          onMouseMove={e =>\r\n            this.state.refAreaLeft &&\r\n            this.setState({ refAreaRight: e.activeLabel })\r\n          }\r\n          onMouseUp={this.zoom.bind(this)}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            allowDataOverflow={true}\r\n            dataKey=\"name\"\r\n            domain={[left, right]}\r\n            type=\"number\"\r\n          />\r\n          <YAxis\r\n            allowDataOverflow={true}\r\n            domain={[bottom, top]}\r\n            type=\"number\"\r\n            yAxisId=\"1\"\r\n          />\r\n          <YAxis\r\n            orientation=\"right\"\r\n            allowDataOverflow={true}\r\n            domain={[bottom2, top2]}\r\n            type=\"number\"\r\n            yAxisId=\"2\"\r\n          />\r\n          <Tooltip />\r\n          <Line\r\n            yAxisId=\"1\"\r\n            type=\"natural\"\r\n            dataKey=\"cost\"\r\n            stroke=\"#8884d8\"\r\n            animationDuration={300}\r\n          />\r\n          <Line\r\n            yAxisId=\"2\"\r\n            type=\"natural\"\r\n            dataKey=\"impression\"\r\n            stroke=\"#82ca9d\"\r\n            animationDuration={300}\r\n          />\r\n\r\n          {refAreaLeft && refAreaRight ? (\r\n            <ReferenceArea\r\n              yAxisId=\"1\"\r\n              x1={refAreaLeft}\r\n              x2={refAreaRight}\r\n              strokeOpacity={0.3}\r\n            />\r\n          ) : null}\r\n        </LineChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ReferenceLine,\r\n  Brush,\r\n  AreaChart,\r\n  Area,\r\n} from 'recharts';\r\nimport HighlightAndZoom from './HighlightAndZoom';\r\n\r\nconst data = [\r\n  { name: 'bob', age: 100, speed: 50 },\r\n  { name: 'bill', age: 200, speed: 30 },\r\n  { name: 'jill', age: 150, speed: 40 },\r\n  { name: 'job', age: 110, speed: 20 },\r\n];\r\nconst data2 = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\n\r\nexport default class RechartsLine extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Recharts Line Charts</h1>\r\n        <a href=\"http://recharts.org/en-US/examples/\">\r\n          More examples at Recharts.org\r\n        </a>\r\n\r\n        <LineChart width={400} height={400} data={data}>\r\n          <Line type=\"monotone\" dataKey=\"age\" stroke=\"#8884d8\" />\r\n          <YAxis />\r\n          <XAxis dataKey=\"name\" />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\r\n        >\r\n          <Line type=\"monotone\" dataKey=\"speed\" stroke=\"#8884d8\" />\r\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"pv\"\r\n            stroke=\"#8884d8\"\r\n            activeDot={{ r: 8 }}\r\n          />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <LineChart width={300} height={100} data={data2}>\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" strokeWidth={2} />\r\n        </LineChart>\r\n        <LineChart\r\n          layout=\"vertical\"\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis type=\"number\" />\r\n          <YAxis dataKey=\"name\" type=\"category\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line dataKey=\"pv\" stroke=\"#8884d8\" />\r\n          <Line dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 20, right: 50, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine x=\"Page C\" stroke=\"red\" label=\"Max PV PAGE\" />\r\n          <ReferenceLine y={9800} label=\"Max\" stroke=\"red\" />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <div>\r\n          <h4>A demo of synchronized AreaCharts</h4>\r\n          <LineChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"uv\"\r\n              stroke=\"#8884d8\"\r\n              fill=\"#8884d8\"\r\n            />\r\n          </LineChart>\r\n          <p>Maybe some other content</p>\r\n          <LineChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"pv\"\r\n              stroke=\"#82ca9d\"\r\n              fill=\"#82ca9d\"\r\n            />\r\n            <Brush />\r\n          </LineChart>\r\n          <AreaChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"pv\"\r\n              stroke=\"#82ca9d\"\r\n              fill=\"#82ca9d\"\r\n            />\r\n          </AreaChart>\r\n        </div>\r\n        <HighlightAndZoom />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Area,\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  ReferenceLine,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport { ChartsWrapper } from '../Victory/Bar';\r\nimport BrushBar from './BrushBar';\r\nimport CustomLabel from './CustomLabel';\r\nimport {\r\n  default as BarChartCustomTooltip,\r\n  default as CustomEvent,\r\n} from './CustomTooltip';\r\nimport RechartsLine from './Line';\r\nconst data = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\nconst dataStackedBySign = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: -3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: -2000, pv: -9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: -1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: -3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\nexport default class Recharts extends Component {\r\n  state = {\r\n    activeIndex: 0,\r\n  };\r\n  handleClick(data, index) {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h1>Recharts Bar Charts</h1>\r\n        <a href=\"http://recharts.org/en-US/examples/\">\r\n          More examples at Recharts.org\r\n        </a>\r\n        <BarChart width={150} height={40} data={data}>\r\n          <Bar dataKey=\"uv\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart width={150} height={40} data={data}>\r\n            <Bar dataKey=\"uv\" fill=\"#8884d8\" />\r\n          </BarChart>\r\n      `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n\r\n          `}\r\n        </pre>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n        `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"female\" stackId=\"a\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"male\" stackId=\"a\" fill=\"#82ca9d\" />\r\n          <Bar dataKey=\"uv\" fill=\"#ffc658\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"female\" stackId=\"a\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"male\" stackId=\"a\" fill=\"#82ca9d\" />\r\n            <Bar dataKey=\"uv\" fill=\"#ffc658\" />\r\n          </BarChart>\r\n`}\r\n        </pre>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <ReferenceLine y={0} stroke=\"#000\" />\r\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n          `}\r\n        </pre>\r\n\r\n        <BrushBar />\r\n        <pre>\r\n          {`\r\n          <BrushBar />\r\n\r\n          `}\r\n        </pre>\r\n        <CustomEvent />\r\n        <pre>\r\n          {`\r\n        <CustomEvent />\r\n          `}\r\n        </pre>\r\n\r\n        <CustomLabel />\r\n        <pre>\r\n          {`\r\n        <CustomLabel />\r\n        `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={dataStackedBySign}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" stackId=\"stack\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" stackId=\"stack\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n        <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={dataStackedBySign}\r\n        stackOffset=\"sign\"\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" stackId=\"stack\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" stackId=\"stack\" />\r\n          </BarChart>\r\n          `}\r\n        </pre>\r\n\r\n        <ComposedChart\r\n          layout=\"vertical\"\r\n          width={600}\r\n          height={400}\r\n          data={data}\r\n          margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n        >\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <XAxis type=\"number\" />\r\n          <YAxis dataKey=\"name\" type=\"category\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        <pre>\r\n          {`\r\n        <ComposedChart\r\n        layout=\"vertical\"\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n        >\r\n        <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <XAxis type=\"number\" />\r\n        <YAxis dataKey=\"name\" type=\"category\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Area dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n        <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n        <Line dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        `}\r\n        </pre>\r\n\r\n        <ComposedChart\r\n          width={600}\r\n          height={400}\r\n          data={data}\r\n          margin={{ top: 20, right: 80, bottom: 20, left: 20 }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"name\"\r\n            label={{ value: 'Pages', position: 'insideBottomRight', offset: 0 }}\r\n          />\r\n          <YAxis\r\n            label={{ value: 'Index', angle: -90, position: 'insideLeft' }}\r\n          />\r\n          <Tooltip />\r\n          <Legend />\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <Area type=\"monotone\" dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        <pre>\r\n          {`\r\n        <ComposedChart\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{ top: 20, right: 80, bottom: 20, left: 20 }}\r\n        >\r\n        <XAxis\r\n        dataKey=\"name\"\r\n        label={{ value: 'Pages', position: 'insideBottomRight', offset: 0 }}\r\n        />\r\n        <YAxis\r\n        label={{ value: 'Index', angle: -90, position: 'insideLeft' }}\r\n          />\r\n          <Tooltip />\r\n          <Legend />\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <Area type=\"monotone\" dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n          </ComposedChart>\r\n          `}\r\n        </pre>\r\n\r\n        <BarChartCustomTooltip />\r\n        <pre>\r\n          {`\r\n        <BarChartCustomTooltip />\r\n          `}\r\n        </pre>\r\n\r\n        <RechartsLine />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Bar, { ChartsWrapper } from './Bar';\r\n\r\nexport default class Victory extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <Bar />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import { Router } from '@reach/router';\r\nimport React, { Component } from 'react';\r\nimport ECharts from './components/ECharts/ECharts';\r\nimport Nivo from './components/Nivo/Nivo';\r\nimport ReactTimeSeries from './components/ReactTimeSeries/ReactTimeSeries';\r\nimport Recharts from './components/Recharts/Recharts';\r\nimport Victory from './components/Victory/Victory';\r\n\r\nexport const routes = [\r\n  { path: '/charts-playground/', name: 'Recharts' },\r\n  { path: '/charts-playground/ECharts', name: 'ECharts' },\r\n  { path: '/charts-playground/victory', name: 'Victory' },\r\n  { path: '/charts-playground/timeseries', name: 'React Time Series' },\r\n  { path: '/charts-playground/nivo', name: 'Nivo' },\r\n];\r\n\r\nexport default class AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Recharts path=\"/charts-playground/\" />\r\n        <Victory path=\"/charts-playground/victory\" />\r\n        <ECharts path=\"/charts-playground/ECharts\" />\r\n        <ReactTimeSeries path=\"/charts-playground/timeseries\" />\r\n        <Nivo path=\"/charts-playground/nivo\" />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import { Link } from '@reach/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport AppRouter, { routes } from './AppRouter';\nconst AppWrapper = styled.div`\n  padding: 100px 40px;\n  margin: auto;\n  * {\n    margin: 0;\n  }\n  pre {\n    background: lightgrey;\n  }\n`;\nconst NavWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  font-family: 'Open Sans';\n  padding: 20px;\n  display: grid;\n  justify-items: center;\n  background: lightgrey;\n  grid-gap: 20px 10px;\n  grid-template-columns: repeat(auto-fit, minmax(130px, 1fr));\n  a {\n    text-decoration: none;\n    color: steelblue;\n    &:hover {\n      text-decoration: underline;\n    }\n    &.active {\n      font-weight: bold;\n    }\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <AppWrapper>\n        <AppRouter />\n        <NavWrapper>\n          {routes.map(route => (\n            <Link\n              key={route.path}\n              getProps={({ isCurrent }) =>\n                isCurrent ? { className: 'active' } : null\n              }\n              to={route.path}\n            >\n              {route.name}\n            </Link>\n          ))}\n        </NavWrapper>\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}