{"version":3,"sources":["components/ECharts/Bar.js","components/ECharts/Butterfly.js","components/ECharts/ButterflyStack.js","components/ECharts/HelloECharts.js","components/ECharts/HorizontalBarStack.js","components/ECharts/VerticalBarStack.js","components/ECharts/ECharts.js","components/GoogleCharts/GoogleCharts.js","components/Nivo/Nivo.js","components/ReactTimeSeries/Bar.js","components/ReactTimeSeries/BrushPanExample.js","components/ReactTimeSeries/Realtime.js","components/ReactTimeSeries/ReactTimeSeries.js","components/Victory/Bar.js","components/Recharts/BrushBar.js","components/Recharts/CustomLabel.js","components/Recharts/CustomTooltip.js","components/Recharts/HighlightAndZoom.js","components/Recharts/Line.js","components/Recharts/Recharts.js","components/Victory/Victory.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["Bar","state","visible","toggleVisibility","panel","_this","setState","Object","defineProperty","getOption","xAxisData","data1","data2","i","push","Math","sin","cos","title","text","legend","data","align","toolbox","feature","magicType","type","dataView","saveAsImage","pixelRatio","tooltip","xAxis","silent","splitLine","show","yAxis","series","name","animationDelay","idx","animationEasing","animationDelayUpdate","_this2","this","react_default","a","createElement","lib_default","option","onClick","hello","Component","Butterfly","labelRight","normal","position","subtext","sublink","trigger","axisPointer","grid","top","bottom","lineStyle","axisLine","axisLabel","axisTick","stack","label","formatter","value","ButterflyStack","left","right","containLabel","HelloECharts","HorizontalBarStack","VerticalBarStack","data3","data4","random","toFixed","itemStyle","emphasis","barBorderWidth","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","backgroundColor","brush","xAxisIndex","onZero","splitArea","inverse","visualMap","dimension","itemHeight","calculable","min","max","inRange","colorLightness","outOfRange","color","controller","handleBrushSelected","params","echarts_instance","echarts_react","getEchartsInstance","brushed","brushComponent","batch","sIdx","selected","length","rawIndices","dataIndex","join","setOption","width","textStyle","fontSize","onEvents","brushSelected","onBrushSelected","ref","e","ChartsWrapper","styled","div","_templateObject","ECharts","href","style","display","margin","marginLeft","HelloECharts_HelloECharts","Bar_Bar","HorizontalBarStack_HorizontalBarStack","Butterfly_Butterfly","ButterflyStack_ButterflyStack","VerticalBarStack_VerticalBarStack","GoogleCharts_templateObject","timelineData","id","Date","GoogleCharts","timeline1","timeline2","timeline3","timeline4","timeline5","timeline6","timeline7","bar1","bar2","bar3","bar4","bar5","bar6","calendar","combo","stepped1","stepped2","which","GoogleCharts_ChartsWrapper","index_esm","height","chartType","loader","rootProps","data-testid","options","showRowNumber","timeline","groupByRowLabel","colorByRowLabel","showRowLabels","avoidOverlappingGridLines","role","allowHtml","chartArea","hAxis","minValue","vAxis","chart","subtitle","isStacked","colors","bars","axes","y","0","side","sourceColumn","calc","bar","groupWidth","marginTop","seriesType","5","maxLines","ticks","Nivo","src","frameborder","trafficPoints","interfacesJSON","require","days","_","each","day","dayOfMonth","Number","volIn","in","volOut","out","concat","octoberTrafficSeries","TimeSeries","utc","columns","points","netTrafficPoints","interfaceKeys","octoberDays","maxTotalTraffic","minTotalTraffic","ignoreValue","netTrafficForDay","maxDay","minDay","interfaceKey","netTraffic","netTrafficColumnNames","split","octoberNetTrafficSeries","routerData","monthlyJSON","router","routerName","accepted","delivered","traffic","key","month","timerange","range","selection","handleTimeRangeChange","styler","format","selectedDate","event","index","toNiceString","selectedValue","column","highlight","infoValues","infoNetValues","trafficText","get","className","lib_entry","timeRange","enablePanZoom","onTimeRangeChanged","onBackgroundClick","maxTime","minTime","minDuration","axis","info","infoTimeFormat","moment","begin","highlighted","onHighlightChange","onSelectionChange","classed","size","offset","spacing","slice","infoWidth","React","displayName","opacity","baselineStyles","speed","stroke","power","speedFormat","Cycling","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTrackerChanged","t","tracker","channels","brushrange","handleChartResize","handleActiveChange","channelName","renderChart","mode","renderMultiAxisChart","renderChannelsChart","renderBoxChart","_this$state","displayChannels","durationPerPixel","duration","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","charts","forEach","rollups","rollup","crop","breakLine","avg","approx","end","ii","floor","bisect","v","at","parseInt","summary","values","detail","units","err","return","showGrid","trackerPosition","onChartResize","onTrackerChanged","_this$state2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","aggregation","reducers","outer","percentile","inner","center","median","renderBrush","altitude","debug","allowSelectionClear","areaChartStyle","up","down","renderMode","linkStyle","fontWeight","cursor","linkStyleActive","renderModeOptions","initialRange","TimeRange","ready","distance","cadence","temperature","channelNames","rollupLevels","setTimeout","_this2$state","channel","time","deltaTime","watts","temp","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","contains","map","rollupLevel","fixedWindowRollup","windowSize","_iterator3","_this3","_this$state3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","trackerInfoValues","filter","fmt","vv","axisList","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","trackerShowTime","trackerInfoHeight","trackerInfoWidth","_this$state4","disabled","categories","borderStyle","borderWidth","borderColor","paddingTop","marginBottom","boxShadow","background","Realtime","events","Ring","percentile50Out","percentile90Out","getNewEvent","base","getTime","TimeEvent","stream","Stream","pipeline","from","windowBy","emitOn","aggregate","to","EventOut","interval","setInterval","newEvents","addEvent","clearInterval","beginTime","latestTime","fiveMinuteStyle","fill","eventSeries","toArray","perc50Series","perc90Series","initialBeginTime","endTime","dashed","ReactTimeSeries_templateObject","startTime","description","completed","external_ticket","esnet_ticket","organization","_ref","objectWithoutProperties","timerangeevent","outageEventStyleFunc","ReactTimeSeries","eventChartVisible","realtimeChartVisible","ReactTimeSeries_ChartsWrapper","Realtime_Realtime","BrushPanExample","ReactTimeSeries_Bar_Bar","Bar_templateObject","quarter","earnings","data2012","data2013","data2014","data2015","sampleData","x","Bar_ChartsWrapper","victory_chart","domainPadding","theme","VictoryTheme","material","victory_axis","tickValues","tickFormat","dependentAxis","victory_bar","victory_stack","colorScale","target","eventHandlers","mutation","horizontal","labels","d","labelComponent","victory_label","dy","fillOpacity","strokeWidth","cx","cy","r","standalone","padding","victory_area","y0","uv","pv","BrushBar","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","verticalAlign","wrapperStyle","lineHeight","ReferenceLine","Brush","cartesian_Bar","renderCustomizedLabel","textAnchor","dominantBaseline","CustomLabel","amt","activeIndex","handleClick","minPointSize","LabelList","content","CustomTooltip","getIntroOfPage","active","_this$props","payload","BarChartCustomTooltip","CustomTooltip_CustomTooltip","barSize","cost","impression","getAxisYDomain","refData","initialState","refAreaLeft","refAreaRight","top2","bottom2","animation","HighlightAndZoom","_getAxisYDomain","_getAxisYDomain2","slicedToArray","_getAxisYDomain3","_getAxisYDomain4","zoomOut","bind","LineChart","onMouseDown","activeLabel","onMouseMove","onMouseUp","zoom","allowDataOverflow","domain","yAxisId","orientation","Line","animationDuration","ReferenceArea","x1","x2","strokeOpacity","age","RechartsLine","activeDot","layout","syncId","AreaChart","Area","HighlightAndZoom_HighlightAndZoom","dataStackedBySign","Recharts","stackId","BrushBar_BrushBar","CustomTooltip_BarChartCustomTooltip","CustomLabel_CustomLabel","stackOffset","ComposedChart","angle","Line_RechartsLine","Victory","Victory_Bar_Bar","routes","path","AppRouter","es","Recharts_Recharts","Victory_Victory","ECharts_ECharts","ReactTimeSeries_ReactTimeSeries","Nivo_Nivo","GoogleCharts_GoogleCharts","AppWrapper","App_templateObject","NavWrapper","_templateObject2","App","AppRouter_AppRouter","route","getProps","isCurrent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.42647a7e.chunk.js","sourcesContent":["import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Bar extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    let xAxisData = [];\r\n    let data1 = [];\r\n    let data2 = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      xAxisData.push('类目' + i);\r\n      data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n      data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n    }\r\n    return {\r\n      title: {\r\n        text: '柱状图动画延迟',\r\n      },\r\n      legend: {\r\n        data: ['bar', 'bar2'],\r\n        align: 'left',\r\n      },\r\n      toolbox: {\r\n        // y: 'bottom',\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n          saveAsImage: {\r\n            pixelRatio: 2,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        silent: false,\r\n        splitLine: {\r\n          show: false,\r\n        },\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          data: data1,\r\n          animationDelay: function(idx) {\r\n            return idx * 10;\r\n          },\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          data: data2,\r\n          animationDelay: function(idx) {\r\n            return idx * 10 + 100;\r\n          },\r\n        },\r\n      ],\r\n      animationEasing: 'elasticOut',\r\n      animationDelayUpdate: function(idx) {\r\n        return idx * 5;\r\n      },\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{` getOption = () => {\r\n    let xAxisData = [];\r\n    let data1 = [];\r\n    let data2 = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      xAxisData.push('类目' + i);\r\n      data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n      data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\r\n    }\r\n    return {\r\n      title: {\r\n        text: '柱状图动画延迟',\r\n      },\r\n      legend: {\r\n        data: ['bar', 'bar2'],\r\n        align: 'left',\r\n      },\r\n      toolbox: {\r\n        // y: 'bottom',\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n          saveAsImage: {\r\n            pixelRatio: 2,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        silent: false,\r\n        splitLine: {\r\n          show: false,\r\n        },\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          data: data1,\r\n          animationDelay: function(idx) {\r\n            return idx * 10;\r\n          },\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          data: data2,\r\n          animationDelay: function(idx) {\r\n            return idx * 10 + 100;\r\n          },\r\n        },\r\n      ],\r\n      animationEasing: 'elasticOut',\r\n      animationDelayUpdate: function(idx) {\r\n        return idx * 5;\r\n      },\r\n    };\r\n  };\r\n  render() {\r\n    return <ReactEcharts option={this.getOption()} />;\r\n  }`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Butterfly extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    var labelRight = {\r\n      normal: {\r\n        position: 'right',\r\n      },\r\n    };\r\n    return {\r\n      title: {\r\n        text: '交错正负轴标签',\r\n        subtext: 'From ExcelHome',\r\n        sublink: 'http://e.weibo.com/1341556070/AjwF2AgQm',\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      grid: {\r\n        top: 80,\r\n        bottom: 30,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        position: 'top',\r\n        splitLine: { lineStyle: { type: 'dashed' } },\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        axisLine: { show: false },\r\n        axisLabel: { show: false },\r\n        axisTick: { show: false },\r\n        splitLine: { show: false },\r\n        data: [\r\n          'ten',\r\n          'nine',\r\n          'eight',\r\n          'seven',\r\n          'six',\r\n          'five',\r\n          'four',\r\n          'three',\r\n          'two',\r\n          'one',\r\n        ],\r\n      },\r\n      series: [\r\n        {\r\n          name: '生活费',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              formatter: '{b}',\r\n            },\r\n          },\r\n          data: [\r\n            { value: -0.07, label: labelRight },\r\n            { value: -0.09, label: labelRight },\r\n            0.2,\r\n            0.44,\r\n            { value: -0.23, label: labelRight },\r\n            0.08,\r\n            { value: -0.17, label: labelRight },\r\n            0.47,\r\n            { value: -0.36, label: labelRight },\r\n            0.18,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`\r\ngetOption = () => {\r\n    var labelRight = {\r\n      normal: {\r\n        position: 'right',\r\n      },\r\n    };\r\n    return {\r\n      title: {\r\n        text: '交错正负轴标签',\r\n        subtext: 'From ExcelHome',\r\n        sublink: 'http://e.weibo.com/1341556070/AjwF2AgQm',\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      grid: {\r\n        top: 80,\r\n        bottom: 30,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        position: 'top',\r\n        splitLine: { lineStyle: { type: 'dashed' } },\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        axisLine: { show: false },\r\n        axisLabel: { show: false },\r\n        axisTick: { show: false },\r\n        splitLine: { show: false },\r\n        data: [\r\n          'ten',\r\n          'nine',\r\n          'eight',\r\n          'seven',\r\n          'six',\r\n          'five',\r\n          'four',\r\n          'three',\r\n          'two',\r\n          'one',\r\n        ],\r\n      },\r\n      series: [\r\n        {\r\n          name: '生活费',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              formatter: '{b}',\r\n            },\r\n          },\r\n          data: [\r\n            { value: -0.07, label: labelRight },\r\n            { value: -0.09, label: labelRight },\r\n            0.2,\r\n            0.44,\r\n            { value: -0.23, label: labelRight },\r\n            0.08,\r\n            { value: -0.17, label: labelRight },\r\n            0.47,\r\n            { value: -0.36, label: labelRight },\r\n            0.18,\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />        `}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class ButterflyStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['one', 'two', 'three'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'value',\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'category',\r\n          axisTick: { show: false },\r\n          data: ['a', 'b', 'c', 'd', 'e', 'f', 'g'],\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'one',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside',\r\n            },\r\n          },\r\n          data: [200, 170, 240, 244, 200, 220, 210],\r\n        },\r\n        {\r\n          name: 'three',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n            },\r\n          },\r\n          data: [320, 302, 341, 374, 390, 450, 420],\r\n        },\r\n        {\r\n          name: 'two',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'left',\r\n            },\r\n          },\r\n          data: [-120, -132, -101, -134, -190, -230, -210],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['one', 'two', 'three'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'value',\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'category',\r\n          axisTick: { show: false },\r\n          data: ['a', 'b', 'c', 'd', 'e', 'f', 'g'],\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: 'one',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside',\r\n            },\r\n          },\r\n          data: [200, 170, 240, 244, 200, 220, 210],\r\n        },\r\n        {\r\n          name: 'three',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n            },\r\n          },\r\n          data: [320, 302, 341, 374, 390, 450, 420],\r\n        },\r\n        {\r\n          name: 'two',\r\n          type: 'bar',\r\n          stack: 'stackOne',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'left',\r\n            },\r\n          },\r\n          data: [-120, -132, -101, -134, -190, -230, -210],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class HelloECharts extends Component {\r\n  state = {\r\n    hello: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts entry example',\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['Sales'],\r\n      },\r\n      xAxis: {\r\n        data: ['shirt', 'cardign', 'chiffon shirt', 'pants', 'heels', 'socks'],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: 'Sales',\r\n          type: 'bar',\r\n          data: [5, 20, 36, 10, 10, 20],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('hello')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n        {this.state.hello && (\r\n          <pre>\r\n            <code>\r\n              {`getOption = () => {\r\n          return {\r\n            title: {\r\n              text: 'ECharts entry example',\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n              data: ['Sales'],\r\n            },\r\n            xAxis: {\r\n              data: ['shirt', 'cardign', 'chiffon shirt', 'pants', 'heels', 'socks'],\r\n            },\r\n            yAxis: {},\r\n            series: [\r\n              {\r\n                name: 'Sales',\r\n                type: 'bar',\r\n                data: [5, 20, 36, 10, 10, 20],\r\n              },\r\n            ],\r\n          };\r\n        };\r\n        render() {\r\n          return (\r\n              <ReactEcharts option={this.getOption()} />\r\n          `}\r\n            </code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class HorizontalBarStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n      },\r\n      series: [\r\n        {\r\n          name: '直接访问',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [320, 302, 301, 334, 390, 330, 320],\r\n        },\r\n        {\r\n          name: '邮件营销',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [120, 132, 101, 134, 90, 230, 210],\r\n        },\r\n        {\r\n          name: '联盟广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [220, 182, 191, 234, 290, 330, 310],\r\n        },\r\n        {\r\n          name: '视频广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [150, 212, 201, 154, 190, 330, 410],\r\n        },\r\n        {\r\n          name: '搜索引擎',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [820, 832, 901, 934, 1290, 1330, 1320],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactEcharts option={this.getOption()} />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n      },\r\n      series: [\r\n        {\r\n          name: '直接访问',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [320, 302, 301, 334, 390, 330, 320],\r\n        },\r\n        {\r\n          name: '邮件营销',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [120, 132, 101, 134, 90, 230, 210],\r\n        },\r\n        {\r\n          name: '联盟广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [220, 182, 191, 234, 290, 330, 310],\r\n        },\r\n        {\r\n          name: '视频广告',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [150, 212, 201, 154, 190, 330, 410],\r\n        },\r\n        {\r\n          name: '搜索引擎',\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n            },\r\n          },\r\n          data: [820, 832, 901, 934, 1290, 1330, 1320],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return <ReactEcharts option={this.getOption()} />;\r\n  }`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactEcharts from 'echarts-for-react';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class VerticalBarStack extends Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n  toggleVisibility = panel => {\r\n    this.setState({ [panel]: !this.state[panel] });\r\n  };\r\n  getOption = () => {\r\n    var xAxisData = [];\r\n    var data1 = [];\r\n    var data2 = [];\r\n    var data3 = [];\r\n    var data4 = [];\r\n\r\n    for (var i = 0; i < 10; i++) {\r\n      xAxisData.push('Class' + i);\r\n      data1.push((Math.random() * 2).toFixed(2));\r\n      data2.push(-Math.random().toFixed(2));\r\n      data3.push((Math.random() * 5).toFixed(2));\r\n      data4.push((Math.random() + 0.3).toFixed(2));\r\n    }\r\n\r\n    var itemStyle = {\r\n      normal: {},\r\n      emphasis: {\r\n        barBorderWidth: 1,\r\n        shadowBlur: 10,\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowColor: 'rgba(0,0,0,0.5)',\r\n      },\r\n    };\r\n\r\n    return {\r\n      backgroundColor: '#eee',\r\n      legend: {\r\n        data: ['bar', 'bar2', 'bar3', 'bar4'],\r\n        align: 'left',\r\n        left: 10,\r\n      },\r\n      brush: {\r\n        toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n        xAxisIndex: 0,\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        name: 'X Axis',\r\n        silent: false,\r\n        axisLine: { onZero: true },\r\n        splitLine: { show: false },\r\n        splitArea: { show: false },\r\n      },\r\n      yAxis: {\r\n        inverse: true,\r\n        splitArea: { show: false },\r\n      },\r\n      grid: {\r\n        left: 100,\r\n      },\r\n      visualMap: {\r\n        type: 'continuous',\r\n        dimension: 1,\r\n        text: ['High', 'Low'],\r\n        inverse: true,\r\n        itemHeight: 200,\r\n        calculable: true,\r\n        min: -2,\r\n        max: 6,\r\n        top: 60,\r\n        left: 10,\r\n        inRange: {\r\n          colorLightness: [0.4, 0.8],\r\n        },\r\n        outOfRange: {\r\n          color: '#bbb',\r\n        },\r\n        controller: {\r\n          inRange: {\r\n            color: '#2f4554',\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data1,\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data2,\r\n        },\r\n        {\r\n          name: 'bar3',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data3,\r\n        },\r\n        {\r\n          name: 'bar4',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data4,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  handleBrushSelected = params => {\r\n    let echarts_instance = this.echarts_react.getEchartsInstance();\r\n\r\n    var brushed = [];\r\n    var brushComponent = params.batch[0];\r\n\r\n    for (var sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\r\n      var rawIndices = brushComponent.selected[sIdx].dataIndex;\r\n      brushed.push('[Series ' + sIdx + '] ' + rawIndices.join(', '));\r\n    }\r\n\r\n    echarts_instance.setOption({\r\n      title: {\r\n        backgroundColor: '#333',\r\n        text: 'SELECTED DATA INDICES: \\n' + brushed.join('\\n'),\r\n        bottom: 0,\r\n        right: 0,\r\n        width: 100,\r\n        textStyle: {\r\n          fontSize: 12,\r\n          color: '#fff',\r\n        },\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    let onEvents = {\r\n      brushSelected: this.onBrushSelected,\r\n    };\r\n    return (\r\n      <div>\r\n        <ReactEcharts\r\n          ref={e => {\r\n            this.echarts_react = e;\r\n          }}\r\n          option={this.getOption()}\r\n          onEvents={onEvents}\r\n        />\r\n        <button onClick={() => this.toggleVisibility('visible')}>\r\n          {this.state.hello ? 'Hide' : 'Show'} Source\r\n        </button>\r\n\r\n        {this.state.visible && (\r\n          <pre>\r\n            <code>{`    getOption = () => {\r\n    var xAxisData = [];\r\n    var data1 = [];\r\n    var data2 = [];\r\n    var data3 = [];\r\n    var data4 = [];\r\n\r\n    for (var i = 0; i < 10; i++) {\r\n      xAxisData.push('Class' + i);\r\n      data1.push((Math.random() * 2).toFixed(2));\r\n      data2.push(-Math.random().toFixed(2));\r\n      data3.push((Math.random() * 5).toFixed(2));\r\n      data4.push((Math.random() + 0.3).toFixed(2));\r\n    }\r\n\r\n    var itemStyle = {\r\n      normal: {},\r\n      emphasis: {\r\n        barBorderWidth: 1,\r\n        shadowBlur: 10,\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowColor: 'rgba(0,0,0,0.5)',\r\n      },\r\n    };\r\n\r\n    return {\r\n      backgroundColor: '#eee',\r\n      legend: {\r\n        data: ['bar', 'bar2', 'bar3', 'bar4'],\r\n        align: 'left',\r\n        left: 10,\r\n      },\r\n      brush: {\r\n        toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n        xAxisIndex: 0,\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          magicType: {\r\n            type: ['stack', 'tiled'],\r\n          },\r\n          dataView: {},\r\n        },\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: xAxisData,\r\n        name: 'X Axis',\r\n        silent: false,\r\n        axisLine: { onZero: true },\r\n        splitLine: { show: false },\r\n        splitArea: { show: false },\r\n      },\r\n      yAxis: {\r\n        inverse: true,\r\n        splitArea: { show: false },\r\n      },\r\n      grid: {\r\n        left: 100,\r\n      },\r\n      visualMap: {\r\n        type: 'continuous',\r\n        dimension: 1,\r\n        text: ['High', 'Low'],\r\n        inverse: true,\r\n        itemHeight: 200,\r\n        calculable: true,\r\n        min: -2,\r\n        max: 6,\r\n        top: 60,\r\n        left: 10,\r\n        inRange: {\r\n          colorLightness: [0.4, 0.8],\r\n        },\r\n        outOfRange: {\r\n          color: '#bbb',\r\n        },\r\n        controller: {\r\n          inRange: {\r\n            color: '#2f4554',\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: 'bar',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data1,\r\n        },\r\n        {\r\n          name: 'bar2',\r\n          type: 'bar',\r\n          stack: 'one',\r\n          itemStyle: itemStyle,\r\n          data: data2,\r\n        },\r\n        {\r\n          name: 'bar3',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data3,\r\n        },\r\n        {\r\n          name: 'bar4',\r\n          type: 'bar',\r\n          stack: 'two',\r\n          itemStyle: itemStyle,\r\n          data: data4,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  handleBrushSelected = params => {\r\n    let echarts_instance = this.echarts_react.getEchartsInstance();\r\n\r\n    var brushed = [];\r\n    var brushComponent = params.batch[0];\r\n\r\n    for (var sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\r\n      var rawIndices = brushComponent.selected[sIdx].dataIndex;\r\n      brushed.push('[Series ' + sIdx + '] ' + rawIndices.join(', '));\r\n    }\r\n\r\n    echarts_instance.setOption({\r\n      title: {\r\n        backgroundColor: '#333',\r\n        text: 'SELECTED DATA INDICES: \\n' + brushed.join('\\n'),\r\n        bottom: 0,\r\n        right: 0,\r\n        width: 100,\r\n        textStyle: {\r\n          fontSize: 12,\r\n          color: '#fff',\r\n        },\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    let onEvents = {\r\n      brushSelected: this.onBrushSelected,\r\n    };\r\n    return (\r\n      <div>\r\n        <ReactEcharts\r\n          ref={e => {\r\n            this.echarts_react = e;\r\n          }}\r\n          option={this.getOption()}\r\n          onEvents={onEvents}\r\n        />`}</code>\r\n          </pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Bar from './Bar';\r\nimport Butterfly from './Butterfly';\r\nimport ButterflyStack from './ButterflyStack';\r\nimport HelloECharts from './HelloECharts';\r\nimport HorizontalBarStack from './HorizontalBarStack';\r\nimport VerticalBarStack from './VerticalBarStack';\r\nconst ChartsWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 50px;\r\n  margin-bottom: 125px;\r\n`;\r\n\r\nexport default class ECharts extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h1>\r\n          <a href=\"https://ecomfe.github.io/echarts-doc/public/en/index.html\">\r\n            ECharts\r\n          </a>\r\n        </h1>\r\n        <p>\r\n          Pass in a large \"options\" config object to a\r\n          <code\r\n            style={{ display: 'inline', margin: '0 6px' }}\r\n          >{`<ReactEcharts option={this.getOption()} />`}</code>\r\n          component\r\n        </p>\r\n        <h2>\r\n          <a href=\"http://git.hust.cc/echarts-for-react/#/?_k=9v3yjb\">\r\n            echarts-for-react\r\n          </a>\r\n          <span style={{ marginLeft: 15 }} />\r\n          <a href=\"https://www.npmjs.com/package/echarts-for-react\">npm</a>\r\n        </h2>\r\n\r\n        <HelloECharts />\r\n\r\n        <Bar />\r\n\r\n        <HorizontalBarStack />\r\n\r\n        <Butterfly />\r\n\r\n        <ButterflyStack />\r\n\r\n        <VerticalBarStack />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'react-google-charts';\r\nimport styled from 'styled-components';\r\nconst ChartsWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 90px;\r\n`;\r\nconst timelineData = [\r\n  [\r\n    { type: 'string', id: 'Position' },\r\n    { type: 'string', id: 'Name' },\r\n    { type: 'date', id: 'Start' },\r\n    { type: 'date', id: 'End' },\r\n  ],\r\n  [\r\n    'President',\r\n    'George Washington',\r\n    new Date(1789, 3, 30),\r\n    new Date(1797, 2, 4),\r\n  ],\r\n  ['President', 'John Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)],\r\n  ['President', 'Thomas Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4)],\r\n  ['Vice President', 'John Adams', new Date(1789, 3, 21), new Date(1797, 2, 4)],\r\n  [\r\n    'Vice President',\r\n    'Thomas Jefferson',\r\n    new Date(1797, 2, 4),\r\n    new Date(1801, 2, 4),\r\n  ],\r\n  ['Vice President', 'Aaron Burr', new Date(1801, 2, 4), new Date(1805, 2, 4)],\r\n  [\r\n    'Vice President',\r\n    'George Clinton',\r\n    new Date(1805, 2, 4),\r\n    new Date(1812, 3, 20),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'John Jay',\r\n    new Date(1789, 8, 25),\r\n    new Date(1790, 2, 22),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Thomas Jefferson',\r\n    new Date(1790, 2, 22),\r\n    new Date(1793, 11, 31),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Edmund Randolph',\r\n    new Date(1794, 0, 2),\r\n    new Date(1795, 7, 20),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Timothy Pickering',\r\n    new Date(1795, 7, 20),\r\n    new Date(1800, 4, 12),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Charles Lee',\r\n    new Date(1800, 4, 13),\r\n    new Date(1800, 5, 5),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'John Marshall',\r\n    new Date(1800, 5, 13),\r\n    new Date(1801, 2, 4),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Levi Lincoln',\r\n    new Date(1801, 2, 5),\r\n    new Date(1801, 4, 1),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'James Madison',\r\n    new Date(1801, 4, 2),\r\n    new Date(1809, 2, 3),\r\n  ],\r\n];\r\nexport default class GoogleCharts extends Component {\r\n  state = {\r\n    timeline1: false,\r\n    timeline2: false,\r\n    timeline3: false,\r\n    timeline4: false,\r\n    timeline5: false,\r\n    timeline6: false,\r\n    timeline7: false,\r\n    data: false,\r\n    bar1: false,\r\n    bar2: false,\r\n    bar3: false,\r\n    bar4: false,\r\n    bar5: false,\r\n    bar6: false,\r\n    calendar: false,\r\n    combo: false,\r\n    stepped1: false,\r\n    stepped2: false,\r\n  };\r\n  toggleVisibility = which => {\r\n    this.setState({ [which]: !this.state[which] });\r\n  };\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <div>\r\n          <h1>\r\n            <a href=\"https://react-google-charts.com/\">React Google Charts</a>\r\n          </h1>\r\n        </div>\r\n        <div>\r\n          <h2>\r\n            <a href=\"https://react-google-charts.com/timeline-chart\">\r\n              timeline chart\r\n            </a>\r\n          </h2>\r\n          <Chart\r\n            width={'100%'}\r\n            height={'200px'}\r\n            chartType=\"Timeline\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={timelineData}\r\n            rootProps={{ 'data-testid': '3' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('timeline1')}>\r\n            {this.state.timeline1 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.timeline1 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'100%'}\r\n  height={'200px'}\r\n  chartType=\"Timeline\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={timelineData}\r\n  rootProps={{ 'data-testid': '3' }}\r\n/>            `}</code>\r\n            </pre>\r\n          )}\r\n          <button onClick={() => this.toggleVisibility('data')}>\r\n            {this.state.data ? 'Hide' : 'Show'} Data\r\n          </button>\r\n          {this.state.data && (\r\n            <pre>\r\n              <code>{`\r\nconst timelineData = [\r\n  [\r\n    { type: 'string', id: 'Position' },\r\n    { type: 'string', id: 'Name' },\r\n    { type: 'date', id: 'Start' },\r\n    { type: 'date', id: 'End' },\r\n  ],\r\n  [\r\n    'President',\r\n    'George Washington',\r\n    new Date(1789, 3, 30),\r\n    new Date(1797, 2, 4),\r\n  ],\r\n  ['President', 'John Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)],\r\n  ['President', 'Thomas Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4)],\r\n  ['Vice President', 'John Adams', new Date(1789, 3, 21), new Date(1797, 2, 4)],\r\n  [\r\n    'Vice President',\r\n    'Thomas Jefferson',\r\n    new Date(1797, 2, 4),\r\n    new Date(1801, 2, 4),\r\n  ],\r\n  ['Vice President', 'Aaron Burr', new Date(1801, 2, 4), new Date(1805, 2, 4)],\r\n  [\r\n    'Vice President',\r\n    'George Clinton',\r\n    new Date(1805, 2, 4),\r\n    new Date(1812, 3, 20),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'John Jay',\r\n    new Date(1789, 8, 25),\r\n    new Date(1790, 2, 22),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Thomas Jefferson',\r\n    new Date(1790, 2, 22),\r\n    new Date(1793, 11, 31),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Edmund Randolph',\r\n    new Date(1794, 0, 2),\r\n    new Date(1795, 7, 20),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Timothy Pickering',\r\n    new Date(1795, 7, 20),\r\n    new Date(1800, 4, 12),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Charles Lee',\r\n    new Date(1800, 4, 13),\r\n    new Date(1800, 5, 5),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'John Marshall',\r\n    new Date(1800, 5, 13),\r\n    new Date(1801, 2, 4),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'Levi Lincoln',\r\n    new Date(1801, 2, 5),\r\n    new Date(1801, 4, 1),\r\n  ],\r\n  [\r\n    'Secretary of State',\r\n    'James Madison',\r\n    new Date(1801, 4, 2),\r\n    new Date(1809, 2, 3),\r\n  ],\r\n];            `}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Simple Timeline</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"Timeline\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                { type: 'string', id: 'President' },\r\n                { type: 'date', id: 'Start' },\r\n                { type: 'date', id: 'End' },\r\n              ],\r\n              ['Washington', new Date(1789, 3, 30), new Date(1797, 2, 4)],\r\n              ['Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)],\r\n              ['Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4)],\r\n            ]}\r\n            options={{\r\n              showRowNumber: true,\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('timeline2')}>\r\n            {this.state.timeline2 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.timeline2 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"Timeline\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [\r\n      { type: 'string', id: 'President' },\r\n      { type: 'date', id: 'Start' },\r\n      { type: 'date', id: 'End' },\r\n    ],\r\n    ['Washington', new Date(1789, 3, 30), new Date(1797, 2, 4)],\r\n    ['Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)],\r\n    ['Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4)],\r\n  ]}\r\n  options={{\r\n    showRowNumber: true,\r\n  }}\r\n  rootProps={{ 'data-testid': '1' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Labeled Timeline</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"Timeline\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                { type: 'string', id: 'Term' },\r\n                { type: 'string', id: 'Name' },\r\n                { type: 'date', id: 'Start' },\r\n                { type: 'date', id: 'End' },\r\n              ],\r\n              [\r\n                '1',\r\n                'George Washington',\r\n                new Date(1789, 3, 30),\r\n                new Date(1797, 2, 4),\r\n              ],\r\n              ['2', 'John Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)],\r\n              [\r\n                '3',\r\n                'Thomas Jefferson',\r\n                new Date(1801, 2, 4),\r\n                new Date(1809, 2, 4),\r\n              ],\r\n            ]}\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('timeline3')}>\r\n            {this.state.timeline3 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.timeline3 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"Timeline\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [\r\n      { type: 'string', id: 'Term' },\r\n      { type: 'string', id: 'Name' },\r\n      { type: 'date', id: 'Start' },\r\n      { type: 'date', id: 'End' },\r\n    ],\r\n    ['1', 'George Washington', new Date(1789, 3, 30), new Date(1797, 2, 4)],\r\n    ['2', 'John Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)],\r\n    ['3', 'Thomas Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4)],\r\n  ]}\r\n  rootProps={{ 'data-testid': '2' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Putting bars on one row</h2>\r\n          <Chart\r\n            width={'100%'}\r\n            height={'200px'}\r\n            chartType=\"Timeline\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                { type: 'string', id: 'Position' },\r\n                { type: 'string', id: 'Name' },\r\n                { type: 'date', id: 'Start' },\r\n                { type: 'date', id: 'End' },\r\n              ],\r\n              [\r\n                'President',\r\n                'George Washington',\r\n                new Date(1789, 3, 30),\r\n                new Date(1797, 2, 4),\r\n              ],\r\n              [\r\n                'President',\r\n                'John Adams',\r\n                new Date(1797, 2, 4),\r\n                new Date(1801, 2, 4),\r\n              ],\r\n              [\r\n                'President',\r\n                'Thomas Jefferson',\r\n                new Date(1801, 2, 4),\r\n                new Date(1809, 2, 4),\r\n              ],\r\n            ]}\r\n            options={{\r\n              timeline: {\r\n                groupByRowLabel: false,\r\n              },\r\n            }}\r\n            rootProps={{ 'data-testid': '4' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('timeline4')}>\r\n            {this.state.timeline4 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.timeline4 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'100%'}\r\n  height={'200px'}\r\n  chartType=\"Timeline\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [\r\n      { type: 'string', id: 'Position' },\r\n      { type: 'string', id: 'Name' },\r\n      { type: 'date', id: 'Start' },\r\n      { type: 'date', id: 'End' },\r\n    ],\r\n    [\r\n      'President',\r\n      'George Washington',\r\n      new Date(1789, 3, 30),\r\n      new Date(1797, 2, 4),\r\n    ],\r\n    ['President', 'John Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)],\r\n    [\r\n      'President',\r\n      'Thomas Jefferson',\r\n      new Date(1801, 2, 4),\r\n      new Date(1809, 2, 4),\r\n    ],\r\n  ]}\r\n  options={{\r\n    timeline: {\r\n      groupByRowLabel: false,\r\n    },\r\n  }}\r\n  rootProps={{ 'data-testid': '4' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Controlling the Colours</h2>\r\n          <Chart\r\n            width={'100%'}\r\n            height={'200px'}\r\n            chartType=\"Timeline\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                { type: 'string', id: 'Room' },\r\n                { type: 'string', id: 'Name' },\r\n                { type: 'date', id: 'Start' },\r\n                { type: 'date', id: 'End' },\r\n              ],\r\n              [\r\n                'Magnolia Room',\r\n                'Beginning JavaScript',\r\n                new Date(0, 0, 0, 12, 0, 0),\r\n                new Date(0, 0, 0, 13, 30, 0),\r\n              ],\r\n              [\r\n                'Magnolia Room',\r\n                'Intermediate JavaScript',\r\n                new Date(0, 0, 0, 14, 0, 0),\r\n                new Date(0, 0, 0, 15, 30, 0),\r\n              ],\r\n              [\r\n                'Magnolia Room',\r\n                'Advanced JavaScript',\r\n                new Date(0, 0, 0, 16, 0, 0),\r\n                new Date(0, 0, 0, 17, 30, 0),\r\n              ],\r\n              [\r\n                'Willow Room',\r\n                'Beginning Google Charts',\r\n                new Date(0, 0, 0, 12, 30, 0),\r\n                new Date(0, 0, 0, 14, 0, 0),\r\n              ],\r\n              [\r\n                'Willow Room',\r\n                'Intermediate Google Charts',\r\n                new Date(0, 0, 0, 14, 30, 0),\r\n                new Date(0, 0, 0, 16, 0, 0),\r\n              ],\r\n              [\r\n                'Willow Room',\r\n                'Advanced Google Charts',\r\n                new Date(0, 0, 0, 16, 30, 0),\r\n                new Date(0, 0, 0, 18, 0, 0),\r\n              ],\r\n            ]}\r\n            options={{\r\n              timeline: {\r\n                colorByRowLabel: true,\r\n              },\r\n            }}\r\n            rootProps={{ 'data-testid': '5' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('timeline5')}>\r\n            {this.state.timeline5 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.timeline5 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'100%'}\r\n  height={'200px'}\r\n  chartType=\"Timeline\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [\r\n      { type: 'string', id: 'Room' },\r\n      { type: 'string', id: 'Name' },\r\n      { type: 'date', id: 'Start' },\r\n      { type: 'date', id: 'End' },\r\n    ],\r\n    [\r\n      'Magnolia Room',\r\n      'Beginning JavaScript',\r\n      new Date(0, 0, 0, 12, 0, 0),\r\n      new Date(0, 0, 0, 13, 30, 0),\r\n    ],\r\n    [\r\n      'Magnolia Room',\r\n      'Intermediate JavaScript',\r\n      new Date(0, 0, 0, 14, 0, 0),\r\n      new Date(0, 0, 0, 15, 30, 0),\r\n    ],\r\n    [\r\n      'Magnolia Room',\r\n      'Advanced JavaScript',\r\n      new Date(0, 0, 0, 16, 0, 0),\r\n      new Date(0, 0, 0, 17, 30, 0),\r\n    ],\r\n    [\r\n      'Willow Room',\r\n      'Beginning Google Charts',\r\n      new Date(0, 0, 0, 12, 30, 0),\r\n      new Date(0, 0, 0, 14, 0, 0),\r\n    ],\r\n    [\r\n      'Willow Room',\r\n      'Intermediate Google Charts',\r\n      new Date(0, 0, 0, 14, 30, 0),\r\n      new Date(0, 0, 0, 16, 0, 0),\r\n    ],\r\n    [\r\n      'Willow Room',\r\n      'Advanced Google Charts',\r\n      new Date(0, 0, 0, 16, 30, 0),\r\n      new Date(0, 0, 0, 18, 0, 0),\r\n    ],\r\n  ]}\r\n  options={{\r\n    timeline: {\r\n      // singleColor: '#8d8', // same colour for all bars\r\n      colorByRowLabel: true,\r\n    },\r\n    // backgroundColor: '#ffd',\r\n    // colors: ['#cbb69d', '#603913', '#c69c6e'], // set individual colors for bars\r\n\r\n  }}\r\n  rootProps={{ 'data-testid': '5' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Overlapping GridLines</h2>\r\n          <Chart\r\n            width={'100%'}\r\n            height={'200px'}\r\n            chartType=\"Timeline\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                { type: 'string', id: 'Room' },\r\n                { type: 'string', id: 'Name' },\r\n                { type: 'date', id: 'Start' },\r\n                { type: 'date', id: 'End' },\r\n              ],\r\n              [\r\n                'Magnolia Room',\r\n                'Google Charts',\r\n                new Date(0, 0, 0, 14, 0, 0),\r\n                new Date(0, 0, 0, 15, 0, 0),\r\n              ],\r\n              [\r\n                'Magnolia Room',\r\n                'App Engine',\r\n                new Date(0, 0, 0, 15, 0, 0),\r\n                new Date(0, 0, 0, 16, 0, 0),\r\n              ],\r\n            ]}\r\n            options={{\r\n              timeline: { showRowLabels: false },\r\n              avoidOverlappingGridLines: false,\r\n            }}\r\n            rootProps={{ 'data-testid': '9' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('timeline6')}>\r\n            {this.state.timeline6 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.timeline6 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'100%'}\r\n  height={'200px'}\r\n  chartType=\"Timeline\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [\r\n      { type: 'string', id: 'Room' },\r\n      { type: 'string', id: 'Name' },\r\n      { type: 'date', id: 'Start' },\r\n      { type: 'date', id: 'End' },\r\n    ],\r\n    [\r\n      'Magnolia Room',\r\n      'Google Charts',\r\n      new Date(0, 0, 0, 14, 0, 0),\r\n      new Date(0, 0, 0, 15, 0, 0),\r\n    ],\r\n    [\r\n      'Magnolia Room',\r\n      'App Engine',\r\n      new Date(0, 0, 0, 15, 0, 0),\r\n      new Date(0, 0, 0, 16, 0, 0),\r\n    ],\r\n  ]}\r\n  options={{\r\n    timeline: { showRowLabels: false },\r\n    avoidOverlappingGridLines: false,\r\n  }}\r\n  rootProps={{ 'data-testid': '9' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Customizing Tooltips</h2>\r\n          <Chart\r\n            width={'100%'}\r\n            height={'200px'}\r\n            chartType=\"Timeline\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                { type: 'string', id: 'President' },\r\n                { type: 'string', id: 'dummy bar label' },\r\n                { type: 'string', role: 'tooltip' },\r\n                { type: 'date', id: 'Start' },\r\n                { type: 'date', id: 'End' },\r\n              ],\r\n              [\r\n                'Washington',\r\n                null,\r\n                'George',\r\n                new Date(1789, 3, 29),\r\n                new Date(1797, 2, 3),\r\n              ],\r\n              [\r\n                'Adams',\r\n                null,\r\n                'John',\r\n                new Date(1797, 2, 3),\r\n                new Date(1801, 2, 3),\r\n              ],\r\n              [\r\n                'Jefferson',\r\n                null,\r\n                'Thomas',\r\n                new Date(1801, 2, 3),\r\n                new Date(1809, 2, 3),\r\n              ],\r\n            ]}\r\n            options={{\r\n              allowHtml: true,\r\n            }}\r\n            rootProps={{ 'data-testid': '10' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('timeline7')}>\r\n            {this.state.timeline7 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.timeline7 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'100%'}\r\n  height={'200px'}\r\n  chartType=\"Timeline\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [\r\n      { type: 'string', id: 'President' },\r\n      { type: 'string', id: 'dummy bar label' },\r\n      { type: 'string', role: 'tooltip' },\r\n      { type: 'date', id: 'Start' },\r\n      { type: 'date', id: 'End' },\r\n    ],\r\n    [\r\n      'Washington',\r\n      null,\r\n      'George',\r\n      new Date(1789, 3, 29),\r\n      new Date(1797, 2, 3),\r\n    ],\r\n    ['Adams', null, 'John', new Date(1797, 2, 3), new Date(1801, 2, 3)],\r\n    ['Jefferson', null, 'Thomas', new Date(1801, 2, 3), new Date(1809, 2, 3)],\r\n  ]}\r\n  options={{\r\n    allowHtml: true,\r\n  }}\r\n  rootProps={{ 'data-testid': '10' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Basic bar chart with multiple series</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"BarChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['City', '2010 Population', '2000 Population'],\r\n              ['New York City, NY', 8175000, 8008000],\r\n              ['Los Angeles, CA', 3792000, 3694000],\r\n              ['Chicago, IL', 2695000, 2896000],\r\n              ['Houston, TX', 2099000, 1953000],\r\n              ['Philadelphia, PA', 1526000, 1517000],\r\n            ]}\r\n            options={{\r\n              title: 'Population of Largest U.S. Cities',\r\n              chartArea: { width: '50%' },\r\n              hAxis: {\r\n                title: 'Total Population',\r\n                minValue: 0,\r\n              },\r\n              vAxis: {\r\n                title: 'City',\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('bar1')}>\r\n            {this.state.bar1 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.bar1 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"BarChart\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    ['City', '2010 Population', '2000 Population'],\r\n    ['New York City, NY', 8175000, 8008000],\r\n    ['Los Angeles, CA', 3792000, 3694000],\r\n    ['Chicago, IL', 2695000, 2896000],\r\n    ['Houston, TX', 2099000, 1953000],\r\n    ['Philadelphia, PA', 1526000, 1517000],\r\n  ]}\r\n  options={{\r\n    title: 'Population of Largest U.S. Cities',\r\n    chartArea: { width: '50%' },\r\n    hAxis: {\r\n      title: 'Total Population',\r\n      minValue: 0,\r\n    },\r\n    vAxis: {\r\n      title: 'City',\r\n    },\r\n  }}\r\n  // For tests\r\n  rootProps={{ 'data-testid': '1' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Material Design</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"Bar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['Year', 'Sales', 'Expenses', 'Profit'],\r\n              ['2014', 1000, 400, 200],\r\n              ['2015', 1170, 460, 250],\r\n              ['2016', 660, 1120, 300],\r\n              ['2017', 1030, 540, 350],\r\n            ]}\r\n            options={{\r\n              // Material design options\r\n              chart: {\r\n                title: 'Company Performance',\r\n                subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('bar2')}>\r\n            {this.state.bar2 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.bar2 && (\r\n            <pre>\r\n              <code>{`\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"Bar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['Year', 'Sales', 'Expenses', 'Profit'],\r\n              ['2014', 1000, 400, 200],\r\n              ['2015', 1170, 460, 250],\r\n              ['2016', 660, 1120, 300],\r\n              ['2017', 1030, 540, 350],\r\n            ]}\r\n            options={{\r\n              // Material design options\r\n              chart: {\r\n                title: 'Company Performance',\r\n                subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Stacked bar chart with multiple series</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"BarChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['City', '2010 Population', '2000 Population'],\r\n              ['New York City, NY', 8175000, 8008000],\r\n              ['Los Angeles, CA', 3792000, 3694000],\r\n              ['Chicago, IL', 2695000, 2896000],\r\n              ['Houston, TX', 2099000, 1953000],\r\n              ['Philadelphia, PA', 1526000, 1517000],\r\n            ]}\r\n            options={{\r\n              title: 'Population of Largest U.S. Cities',\r\n              chartArea: { width: '50%' },\r\n              isStacked: true,\r\n              hAxis: {\r\n                title: 'Total Population',\r\n                minValue: 0,\r\n              },\r\n              vAxis: {\r\n                title: 'City',\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '3' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('bar3')}>\r\n            {this.state.bar3 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.bar3 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"BarChart\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    ['City', '2010 Population', '2000 Population'],\r\n    ['New York City, NY', 8175000, 8008000],\r\n    ['Los Angeles, CA', 3792000, 3694000],\r\n    ['Chicago, IL', 2695000, 2896000],\r\n    ['Houston, TX', 2099000, 1953000],\r\n    ['Philadelphia, PA', 1526000, 1517000],\r\n  ]}\r\n  options={{\r\n    title: 'Population of Largest U.S. Cities',\r\n    chartArea: { width: '50%' },\r\n    isStacked: true,\r\n    hAxis: {\r\n      title: 'Total Population',\r\n      minValue: 0,\r\n    },\r\n    vAxis: {\r\n      title: 'City',\r\n    },\r\n  }}\r\n  // For tests\r\n  rootProps={{ 'data-testid': '3' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Customizable Bar Colors</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"BarChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['City', '2010 Population', '2000 Population'],\r\n              ['New York City, NY', 8175000, 8008000],\r\n              ['Los Angeles, CA', 3792000, 3694000],\r\n              ['Chicago, IL', 2695000, 2896000],\r\n              ['Houston, TX', 2099000, 1953000],\r\n              ['Philadelphia, PA', 1526000, 1517000],\r\n            ]}\r\n            options={{\r\n              title: 'Population of Largest U.S. Cities',\r\n              chartArea: { width: '50%' },\r\n              colors: ['#b0120a', '#ffab91'],\r\n              hAxis: {\r\n                title: 'Total Population',\r\n                minValue: 0,\r\n              },\r\n              vAxis: {\r\n                title: 'City',\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '4' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('bar4')}>\r\n            {this.state.bar4 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.bar4 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"BarChart\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    ['City', '2010 Population', '2000 Population'],\r\n    ['New York City, NY', 8175000, 8008000],\r\n    ['Los Angeles, CA', 3792000, 3694000],\r\n    ['Chicago, IL', 2695000, 2896000],\r\n    ['Houston, TX', 2099000, 1953000],\r\n    ['Philadelphia, PA', 1526000, 1517000],\r\n  ]}\r\n  options={{\r\n    title: 'Population of Largest U.S. Cities',\r\n    chartArea: { width: '50%' },\r\n    colors: ['#b0120a', '#ffab91'],\r\n    hAxis: {\r\n      title: 'Total Population',\r\n      minValue: 0,\r\n    },\r\n    vAxis: {\r\n      title: 'City',\r\n    },\r\n  }}\r\n  // For tests\r\n  rootProps={{ 'data-testid': '4' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Right Y axis</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            // Note here we use Bar instead of BarChart to load the material design version\r\n            chartType=\"Bar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['City', '2010 Population', '2000 Population'],\r\n              ['New York City, NY', 8175000, 8008000],\r\n              ['Los Angeles, CA', 3792000, 3694000],\r\n              ['Chicago, IL', 2695000, 2896000],\r\n              ['Houston, TX', 2099000, 1953000],\r\n              ['Philadelphia, PA', 1526000, 1517000],\r\n            ]}\r\n            options={{\r\n              // Material chart options\r\n              chart: {\r\n                title: 'Population of Largest U.S. Cities',\r\n                subtitle: 'Based on most recent and previous census data',\r\n              },\r\n              hAxis: {\r\n                title: 'Total Population',\r\n                minValue: 0,\r\n              },\r\n              vAxis: {\r\n                title: 'City',\r\n              },\r\n              bars: 'horizontal',\r\n              axes: {\r\n                y: {\r\n                  0: { side: 'right' },\r\n                },\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '5' }}\r\n          />\r\n          <button onClick={() => this.toggleVisibility('bar5')}>\r\n            {this.state.bar5 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.bar5 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  // Note here we use Bar instead of BarChart to load the material design version\r\n  chartType=\"Bar\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    ['City', '2010 Population', '2000 Population'],\r\n    ['New York City, NY', 8175000, 8008000],\r\n    ['Los Angeles, CA', 3792000, 3694000],\r\n    ['Chicago, IL', 2695000, 2896000],\r\n    ['Houston, TX', 2099000, 1953000],\r\n    ['Philadelphia, PA', 1526000, 1517000],\r\n  ]}\r\n  options={{\r\n    // Material chart options\r\n    chart: {\r\n      title: 'Population of Largest U.S. Cities',\r\n      subtitle: 'Based on most recent and previous census data',\r\n    },\r\n    hAxis: {\r\n      title: 'Total Population',\r\n      minValue: 0,\r\n    },\r\n    vAxis: {\r\n      title: 'City',\r\n    },\r\n    bars: 'horizontal',\r\n    axes: {\r\n      y: {\r\n        0: { side: 'right' },\r\n      },\r\n    },\r\n  }}\r\n  // For tests\r\n  rootProps={{ 'data-testid': '5' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Labeling Bars</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"BarChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                'Element',\r\n                'Density',\r\n                { role: 'style' },\r\n                {\r\n                  sourceColumn: 0,\r\n                  role: 'annotation',\r\n                  type: 'string',\r\n                  calc: 'stringify',\r\n                },\r\n              ],\r\n              ['Copper', 8.94, '#b87333', null],\r\n              ['Silver', 10.49, 'silver', null],\r\n              ['Gold', 19.3, 'gold', null],\r\n              ['Platinum', 21.45, 'color: #e5e4e2', null],\r\n            ]}\r\n            options={{\r\n              title: 'Density of Precious Metals, in g/cm^3',\r\n              width: 600,\r\n              height: 400,\r\n              bar: { groupWidth: '95%' },\r\n              legend: { position: 'none' },\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '6' }}\r\n          />\r\n          <button\r\n            style={{ marginTop: '120px' }}\r\n            onClick={() => this.toggleVisibility('bar6')}\r\n          >\r\n            {this.state.bar6 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.bar6 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"BarChart\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [\r\n      'Element',\r\n      'Density',\r\n      { role: 'style' },\r\n      {\r\n        sourceColumn: 0,\r\n        role: 'annotation',\r\n        type: 'string',\r\n        calc: 'stringify',\r\n      },\r\n    ],\r\n    ['Copper', 8.94, '#b87333', null],\r\n    ['Silver', 10.49, 'silver', null],\r\n    ['Gold', 19.3, 'gold', null],\r\n    ['Platinum', 21.45, 'color: #e5e4e2', null],\r\n  ]}\r\n  options={{\r\n    title: 'Density of Precious Metals, in g/cm^3',\r\n    width: 600,\r\n    height: 400,\r\n    bar: { groupWidth: '95%' },\r\n    legend: { position: 'none' },\r\n  }}\r\n  // For tests\r\n  rootProps={{ 'data-testid': '6' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Calendar Chart</h2>\r\n          <Chart\r\n            width={1000}\r\n            height={350}\r\n            chartType=\"Calendar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                { type: 'date', id: 'Date' },\r\n                { type: 'number', id: 'Won/Loss' },\r\n              ],\r\n              [new Date(2012, 3, 13), 37032],\r\n              [new Date(2012, 3, 14), 38024],\r\n              [new Date(2012, 3, 15), 38024],\r\n              [new Date(2012, 3, 16), 38108],\r\n              [new Date(2012, 3, 17), 38229],\r\n\r\n              [new Date(2013, 1, 4), 38177],\r\n              [new Date(2013, 1, 5), 38705],\r\n              [new Date(2013, 1, 12), 38210],\r\n              [new Date(2013, 1, 13), 38029],\r\n              [new Date(2013, 1, 19), 38823],\r\n              [new Date(2013, 1, 23), 38345],\r\n              [new Date(2013, 1, 24), 38436],\r\n              [new Date(2013, 2, 10), 38447],\r\n            ]}\r\n            options={{\r\n              title: 'Red Sox Attendance',\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n          <button\r\n            style={{ marginTop: '120px' }}\r\n            onClick={() => this.toggleVisibility('calendar')}\r\n          >\r\n            {this.state.calendar ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.calendar && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={1000}\r\n  height={350}\r\n  chartType=\"Calendar\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [{ type: 'date', id: 'Date' }, { type: 'number', id: 'Won/Loss' }],\r\n    [new Date(2012, 3, 13), 37032],\r\n    [new Date(2012, 3, 14), 38024],\r\n    [new Date(2012, 3, 15), 38024],\r\n    [new Date(2012, 3, 16), 38108],\r\n    [new Date(2012, 3, 17), 38229],\r\n\r\n    [new Date(2013, 1, 4), 38177],\r\n    [new Date(2013, 1, 5), 38705],\r\n    [new Date(2013, 1, 12), 38210],\r\n    [new Date(2013, 1, 13), 38029],\r\n    [new Date(2013, 1, 19), 38823],\r\n    [new Date(2013, 1, 23), 38345],\r\n    [new Date(2013, 1, 24), 38436],\r\n    [new Date(2013, 2, 10), 38447],\r\n  ]}\r\n  options={{\r\n    title: 'Red Sox Attendance',\r\n  }}\r\n  rootProps={{ 'data-testid': '1' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Combo Chart</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"ComboChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\r\n                'Month',\r\n                'Bolivia',\r\n                'Ecuador',\r\n                'Madagascar',\r\n                'Papua New Guinea',\r\n                'Rwanda',\r\n                'Average',\r\n              ],\r\n              ['2004/05', 165, 938, 522, 998, 450, 614.6],\r\n              ['2005/06', 135, 1120, 599, 1268, 288, 682],\r\n              ['2006/07', 157, 1167, 587, 807, 397, 623],\r\n              ['2007/08', 139, 1110, 615, 968, 215, 609.4],\r\n              ['2008/09', 136, 691, 629, 1026, 366, 569.6],\r\n            ]}\r\n            options={{\r\n              title: 'Monthly Coffee Production by Country',\r\n              vAxis: { title: 'Cups' },\r\n              hAxis: { title: 'Month' },\r\n              seriesType: 'bars',\r\n              series: { 5: { type: 'line' } },\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n          <button\r\n            style={{ marginTop: '120px' }}\r\n            onClick={() => this.toggleVisibility('combo')}\r\n          >\r\n            {this.state.combo ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.combo && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"ComboChart\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    [\r\n      'Month',\r\n      'Bolivia',\r\n      'Ecuador',\r\n      'Madagascar',\r\n      'Papua New Guinea',\r\n      'Rwanda',\r\n      'Average',\r\n    ],\r\n    ['2004/05', 165, 938, 522, 998, 450, 614.6],\r\n    ['2005/06', 135, 1120, 599, 1268, 288, 682],\r\n    ['2006/07', 157, 1167, 587, 807, 397, 623],\r\n    ['2007/08', 139, 1110, 615, 968, 215, 609.4],\r\n    ['2008/09', 136, 691, 629, 1026, 366, 569.6],\r\n  ]}\r\n  options={{\r\n    title: 'Monthly Coffee Production by Country',\r\n    vAxis: { title: 'Cups' },\r\n    hAxis: { title: 'Month' },\r\n    seriesType: 'bars',\r\n    series: { 5: { type: 'line' } },\r\n  }}\r\n  rootProps={{ 'data-testid': '1' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>Stepped Area Chart</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"SteppedAreaChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['Director (Year)', 'Rotten Tomatoes', 'IMDB'],\r\n              ['Alfred Hitchcock (1935)', 8.4, 7.9],\r\n              ['Ralph Thomas (1959)', 6.9, 6.5],\r\n              ['Don Sharp (1978)', 6.5, 6.4],\r\n              ['James Hawes (2008)', 4.4, 6.2],\r\n            ]}\r\n            options={{\r\n              title: \"The decline of 'The 39 Steps'\",\r\n              vAxis: { title: 'Accumulated Rating' },\r\n              isStacked: true,\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n          <button\r\n            style={{ marginTop: '120px' }}\r\n            onClick={() => this.toggleVisibility('stepped1')}\r\n          >\r\n            {this.state.stepped1 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.stepped1 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"SteppedAreaChart\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    ['Director (Year)', 'Rotten Tomatoes', 'IMDB'],\r\n    ['Alfred Hitchcock (1935)', 8.4, 7.9],\r\n    ['Ralph Thomas (1959)', 6.9, 6.5],\r\n    ['Don Sharp (1978)', 6.5, 6.4],\r\n    ['James Hawes (2008)', 4.4, 6.2],\r\n  ]}\r\n  options={{\r\n    title: \"The decline of 'The 39 Steps'\",\r\n    vAxis: { title: 'Accumulated Rating' },\r\n    isStacked: true,\r\n  }}\r\n  rootProps={{ 'data-testid': '1' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>100 Percent Stacked Stepped Area</h2>\r\n          <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"AreaChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['Style', 'Colonial', 'Victorian', 'Modern', 'Contemporary'],\r\n              ['2013', 5.2, 3.6, 2.8, 2],\r\n              ['2014', 5.6, 4.0, 2.8, 3],\r\n              ['2015', 7.2, 2.2, 2.2, 6.0],\r\n              ['2016', 8.0, 1.7, 0.8, 4.0],\r\n            ]}\r\n            options={{\r\n              isStacked: 'relative',\r\n              height: 300,\r\n              legend: { position: 'top', maxLines: 3 },\r\n              vAxis: {\r\n                minValue: 0,\r\n                ticks: [0, 0.3, 0.6, 0.9, 1],\r\n              },\r\n            }}\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />\r\n          <button\r\n            style={{ marginTop: '120px' }}\r\n            onClick={() => this.toggleVisibility('stepped1')}\r\n          >\r\n            {this.state.stepped1 ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.stepped1 && (\r\n            <pre>\r\n              <code>{`\r\n<Chart\r\n  width={'500px'}\r\n  height={'300px'}\r\n  chartType=\"AreaChart\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    ['Style', 'Colonial', 'Victorian', 'Modern', 'Contemporary'],\r\n    ['2013', 5.2, 3.6, 2.8, 2],\r\n    ['2014', 5.6, 4.0, 2.8, 3],\r\n    ['2015', 7.2, 2.2, 2.2, 6.0],\r\n    ['2016', 8.0, 1.7, 0.8, 4.0],\r\n  ]}\r\n  options={{\r\n    isStacked: 'relative',\r\n    height: 300,\r\n    legend: { position: 'top', maxLines: 3 },\r\n    vAxis: {\r\n      minValue: 0,\r\n      ticks: [0, 0.3, 0.6, 0.9, 1],\r\n    },\r\n  }}\r\n  rootProps={{ 'data-testid': '2' }}\r\n/>`}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Nivo extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <a href=\"https://nivo.rocks/\">Nivo</a>\r\n        </h1>\r\n        <iframe\r\n          style={{ width: '100%', height: '100vh' }}\r\n          title=\"nivoStorybook\"\r\n          src=\"https://nivo.rocks/storybook/?selectedKind=Bar&selectedStory=stacked&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybooks%2Fstorybook-addon-knobs\"\r\n          frameborder=\"0\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { format } from 'd3-format';\r\nimport moment from 'moment';\r\n// Pond\r\nimport { TimeSeries } from 'pondjs';\r\nimport React from 'react';\r\nimport _ from 'underscore';\r\n// Imports from the charts library\r\nimport {\r\n\r\n  BarChart,\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  Resizable,\r\n  YAxis,\r\n  styler,\r\n} from 'react-timeseries-charts'\r\n// Test data\r\nimport monthlyJSON from './total_traffic_6mo.json';\r\n\r\n//\r\n// October 2014 daily traffic\r\n//\r\n\r\nconst trafficPoints = [];\r\nconst interfacesJSON = require('./interface-traffic.json');\r\nconst interfaceKey = 'ornl-cr5::to_ornl_ip-a::standard';\r\nconst days = interfacesJSON[interfaceKey].days;\r\n\r\nlet max = 0;\r\n_.each(days, (value, day) => {\r\n  const dayOfMonth = Number(day);\r\n  const volIn = value.in;\r\n  const volOut = value.out;\r\n\r\n  // Max\r\n  max = Math.max(max, value.in);\r\n  max = Math.max(max, value.out);\r\n\r\n  trafficPoints.push([`2014-10-${dayOfMonth}`, volIn, volOut]);\r\n});\r\n\r\nconst octoberTrafficSeries = new TimeSeries({\r\n  name: 'October Traffic',\r\n  utc: false,\r\n  columns: ['index', 'in', 'out'],\r\n  points: trafficPoints,\r\n});\r\n\r\nmax /= 100;\r\n\r\n//\r\n// October 2014 net daily traffic for multiple interfaces\r\n//\r\n\r\nconst netTrafficPoints = [];\r\nconst interfaceKeys = [\r\n  'lbl-mr2::xe-8_3_0.911::standard',\r\n  'pnwg-cr5::111-10_1_4-814::sap',\r\n  'denv-cr5::to_denv-frgp(as14041)::standard',\r\n];\r\nconst octoberDays = interfacesJSON[interfaceKeys[0]].days;\r\n\r\nlet maxTotalTraffic = 0;\r\nlet minTotalTraffic = 0;\r\n_.each(octoberDays, (ignoreValue, day) => {\r\n  const dayOfMonth = Number(day);\r\n  const netTrafficForDay = [`2014-10-${dayOfMonth}`];\r\n  let maxDay = 0;\r\n  let minDay = 0;\r\n  _.each(interfaceKeys, interfaceKey => {\r\n    let value = interfacesJSON[interfaceKey].days[dayOfMonth];\r\n    let netTraffic = value.out - value.in;\r\n    netTrafficForDay.push(netTraffic);\r\n    if (netTraffic > 0) {\r\n      maxDay += netTraffic;\r\n    } else {\r\n      minDay += netTraffic;\r\n    }\r\n  });\r\n  maxTotalTraffic = Math.max(maxTotalTraffic, maxDay);\r\n  minTotalTraffic = Math.min(minTotalTraffic, minDay);\r\n  netTrafficPoints.push(netTrafficForDay);\r\n});\r\n\r\nconst netTrafficColumnNames = ['index'];\r\n_.each(interfaceKeys, interfaceKey => {\r\n  netTrafficColumnNames.push(interfaceKey.split(':')[0]);\r\n});\r\n\r\nconst octoberNetTrafficSeries = new TimeSeries({\r\n  name: 'October Net Traffic',\r\n  utc: false,\r\n  columns: netTrafficColumnNames,\r\n  points: netTrafficPoints,\r\n});\r\n\r\n// Correct for measurement error on October 10th\r\nmaxTotalTraffic /= 150;\r\nminTotalTraffic /= 10;\r\n\r\n//\r\n// ESnet wide monthy traffic summary (part of 2014)\r\n//\r\n\r\nconst routerData = {};\r\n_.each(monthlyJSON, router => {\r\n  const routerName = router['Router'];\r\n  if (routerName) {\r\n    routerData[routerName] = {\r\n      accepted: [],\r\n      delivered: [],\r\n    };\r\n    _.each(router, (traffic, key) => {\r\n      if (key !== 'Router') {\r\n        const month = key.split(' ')[0];\r\n        const type = key.split(' ')[1];\r\n        if (type === 'Accepted') {\r\n          routerData[routerName].accepted.push([month, traffic]);\r\n        } else if (type === 'Delivered') {\r\n          routerData[routerName].delivered.push([month, traffic]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nexport default class Bar extends React.Component {\r\n  static displayName = 'VolumeExample';\r\n\r\n  state = {\r\n    timerange: octoberTrafficSeries.range(),\r\n    selection: null,\r\n  };\r\n\r\n  handleTimeRangeChange = timerange => {\r\n    this.setState({ timerange });\r\n  };\r\n\r\n  render() {\r\n    /*\r\n\r\n    Styling the hard way\r\n    const style = {\r\n        in: {\r\n            normal: {fill: \"#A5C8E1\"},\r\n            highlighted: {fill: \"#BFDFF6\"},\r\n            selected: {fill: \"#2DB3D1\"},\r\n            muted: {fill: \"#A5C8E1\", opacity: 0.4}\r\n        }\r\n    };\r\n    const altStyle = {\r\n        out: {\r\n            normal: {fill: \"#FFCC9E\"},\r\n            highlighted: {fill: \"#fcc593\"},\r\n            selected: {fill: \"#2DB3D1\"},\r\n            muted: {fill: \"#FFCC9E\", opacity: 0.4}\r\n        }\r\n    };\r\n\r\n    const combinedStyle = {\r\n        in: {\r\n            normal: {fill: \"#A5C8E1\"},\r\n            highlighted: {fill: \"#BFDFF6\"},\r\n            selected: {fill: \"#2DB3D1\"},\r\n            muted: {fill: \"#A5C8E1\", opacity: 0.4}\r\n        },\r\n        out: {\r\n            normal: {fill: \"#FFCC9E\"},\r\n            highlighted: {fill: \"#fcc593\"},\r\n            selected: {fill: \"#2DB3D1\"},\r\n            muted: {fill: \"#FFCC9E\", opacity: 0.4}\r\n        }\r\n    };\r\n    */\r\n\r\n    const style = styler([\r\n      { key: 'in', color: '#A5C8E1', selected: '#2CB1CF' },\r\n      { key: 'out', color: '#FFCC9E', selected: '#2CB1CF' },\r\n      {\r\n        key: netTrafficColumnNames[1],\r\n        color: '#A5C8E1',\r\n        selected: '#2CB1CF',\r\n      },\r\n      {\r\n        key: netTrafficColumnNames[2],\r\n        color: '#FFCC9E',\r\n        selected: '#2CB1CF',\r\n      },\r\n      {\r\n        key: netTrafficColumnNames[3],\r\n        color: '#DEB887',\r\n        selected: '#2CB1CF',\r\n      },\r\n    ]);\r\n\r\n    const formatter = format('.2s');\r\n    const selectedDate = this.state.selection\r\n      ? this.state.selection.event.index().toNiceString()\r\n      : '--';\r\n    const selectedValue = this.state.selection\r\n      ? `${formatter(\r\n          +this.state.selection.event.value(this.state.selection.column),\r\n        )}b`\r\n      : '--';\r\n\r\n    const highlight = this.state.highlight;\r\n    let infoValues = [];\r\n    let infoNetValues = [];\r\n    if (highlight) {\r\n      const trafficText = `${formatter(highlight.event.get(highlight.column))}`;\r\n      infoValues = [{ label: 'Traffic', value: trafficText }];\r\n      infoNetValues = [\r\n        { label: 'Traffic ' + highlight.column, value: trafficText },\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <b>October 2014 Total Traffic</b>\r\n            <p style={{ color: '#808080' }}>\r\n              Selected: {selectedDate} - {selectedValue}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer\r\n                utc={false}\r\n                timeRange={this.state.timerange}\r\n                format=\"day\"\r\n                enablePanZoom={true}\r\n                onTimeRangeChanged={this.handleTimeRangeChange}\r\n                onBackgroundClick={() => this.setState({ selection: null })}\r\n                maxTime={new Date(1414827330868)}\r\n                minTime={new Date(1412143472795)}\r\n                minDuration={1000 * 60 * 60 * 24 * 5}\r\n              >\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"traffic\"\r\n                    label=\"Traffic In (B)\"\r\n                    min={0}\r\n                    max={max}\r\n                    width=\"70\"\r\n                  />\r\n                  <Charts>\r\n                    <BarChart\r\n                      axis=\"traffic\"\r\n                      style={style}\r\n                      columns={['in']}\r\n                      series={octoberTrafficSeries}\r\n                      info={infoValues}\r\n                      infoTimeFormat={index =>\r\n                        moment(index.begin()).format(\"Do MMM 'YY\")\r\n                      }\r\n                      highlighted={this.state.highlight}\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                  </Charts>\r\n                  <YAxis\r\n                    id=\"traffic-rate\"\r\n                    label=\"Avg Traffic Rate In (bps)\"\r\n                    min={0}\r\n                    max={(max / (24 * 60 * 60)) * 8}\r\n                    width=\"70\"\r\n                  />\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <hr />\r\n            Alternatively we can display bars side by side using the 'spacing'\r\n            and 'offset' props:\r\n            <hr />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer\r\n                timeRange={octoberTrafficSeries.range()}\r\n                format=\"day\"\r\n                onBackgroundClick={() => this.setState({ selection: null })}\r\n              >\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"traffic-volume\"\r\n                    label=\"Traffic (B)\"\r\n                    classed=\"traffic-in\"\r\n                    min={0}\r\n                    max={max}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  <Charts>\r\n                    <BarChart\r\n                      axis=\"traffic-volume\"\r\n                      style={style}\r\n                      size={10}\r\n                      offset={5.5}\r\n                      columns={['in']}\r\n                      series={octoberTrafficSeries}\r\n                      highlighted={this.state.highlight}\r\n                      info={infoValues}\r\n                      infoTimeFormat=\"%m/%d/%y\"\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                    <BarChart\r\n                      axis=\"traffic-volume\"\r\n                      style={style}\r\n                      size={10}\r\n                      offset={-5.5}\r\n                      columns={['out']}\r\n                      series={octoberTrafficSeries}\r\n                      info={infoValues}\r\n                      highlighted={this.state.highlight}\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                  </Charts>\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <hr />\r\n            Or of course you can stack them:\r\n            <hr />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer\r\n                timeRange={octoberTrafficSeries.range()}\r\n                format=\"day\"\r\n                onBackgroundClick={() => this.setState({ selection: null })}\r\n              >\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"traffic-volume\"\r\n                    label=\"Traffic (B)\"\r\n                    classed=\"traffic-in\"\r\n                    min={0}\r\n                    max={max}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  <Charts>\r\n                    <BarChart\r\n                      axis=\"traffic-volume\"\r\n                      style={style}\r\n                      spacing={3}\r\n                      columns={['in', 'out']}\r\n                      series={octoberTrafficSeries}\r\n                      info={infoValues}\r\n                      highlighted={this.state.highlight}\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                  </Charts>\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <hr />\r\n            BarChart can display negative values as well, as shown below for a\r\n            stacked format. Note that all bars representing positive values are\r\n            stacked together above the x-axis and the bars for negative values\r\n            are stacked below the x-axis.\r\n            <hr />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer\r\n                timeRange={octoberNetTrafficSeries.range()}\r\n                format=\"day\"\r\n                onBackgroundClick={() => this.setState({ selection: null })}\r\n              >\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"net-traffic-volume\"\r\n                    label=\"Net Traffic (B)\"\r\n                    classed=\"traffic-in\"\r\n                    min={minTotalTraffic}\r\n                    max={maxTotalTraffic}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  <Charts>\r\n                    <BarChart\r\n                      axis=\"net-traffic-volume\"\r\n                      style={style}\r\n                      spacing={3}\r\n                      columns={netTrafficColumnNames.slice(\r\n                        1,\r\n                        netTrafficColumnNames.length,\r\n                      )}\r\n                      series={octoberNetTrafficSeries}\r\n                      info={infoNetValues}\r\n                      infoWidth={140}\r\n                      highlighted={this.state.highlight}\r\n                      onHighlightChange={highlight =>\r\n                        this.setState({ highlight })\r\n                      }\r\n                      selected={this.state.selection}\r\n                      onSelectionChange={selection =>\r\n                        this.setState({ selection })\r\n                      }\r\n                    />\r\n                  </Charts>\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2015, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/* eslint max-len:0 */\r\n/* eslint-disable react/prefer-es6-class */\r\n\r\nimport { format } from 'd3-format';\r\nimport moment from 'moment';\r\nimport 'moment-duration-format';\r\n// Pond\r\nimport { avg, median, percentile, TimeRange, TimeSeries } from 'pondjs';\r\nimport React from 'react';\r\n// Imports from the charts library\r\nimport {\r\n  AreaChart,\r\n  Baseline,\r\n  BoxChart,\r\n  Brush,\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  LabelAxis,\r\n  Legend,\r\n  LineChart,\r\n  Resizable,\r\n  styler,\r\n  ValueAxis,\r\n  YAxis,\r\n} from 'react-timeseries-charts';\r\nimport _ from 'underscore';\r\n\r\n//\r\n// Load our data file\r\n//\r\n\r\nconst data = require('./bike.json');\r\n\r\n// Styling relates a channel to its rendering properties. In this way you\r\n// can achieve consistent styles across different charts and labels by supplying\r\n// the components with this styler object\r\n\r\nconst style = styler([\r\n  { key: 'distance', color: '#e2e2e2' },\r\n  { key: 'altitude', color: '#e2e2e2' },\r\n  { key: 'cadence', color: '#ff47ff' },\r\n  { key: 'power', color: 'green', width: 1, opacity: 0.5 },\r\n  { key: 'temperature', color: '#cfc793' },\r\n  { key: 'speed', color: 'steelblue', width: 1, opacity: 0.5 },\r\n]);\r\n\r\n// Baselines are the dotted average lines displayed on the chart\r\n// In this case these are separately styled\r\n\r\nconst baselineStyles = {\r\n  speed: {\r\n    stroke: 'steelblue',\r\n    opacity: 0.5,\r\n    width: 0.25,\r\n  },\r\n  power: {\r\n    stroke: 'green',\r\n    opacity: 0.5,\r\n    width: 0.25,\r\n  },\r\n};\r\n\r\n// d3 formatter to display the speed with one decimal place\r\nconst speedFormat = format('.1f');\r\n\r\nclass Cycling extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const initialRange = new TimeRange([75 * 60 * 1000, 125 * 60 * 1000]);\r\n\r\n    // Storage for all the data channels\r\n    const channels = {\r\n      distance: {\r\n        units: 'miles',\r\n        label: 'Distance',\r\n        format: ',.1f',\r\n        series: null,\r\n        show: false,\r\n      },\r\n      altitude: {\r\n        units: 'feet',\r\n        label: 'Altitude',\r\n        format: 'd',\r\n        series: null,\r\n        show: false,\r\n      },\r\n      cadence: {\r\n        units: 'rpm',\r\n        label: 'Cadence',\r\n        format: 'd',\r\n        series: null,\r\n        show: true,\r\n      },\r\n      power: {\r\n        units: 'watts',\r\n        label: 'Power',\r\n        format: ',.1f',\r\n        series: null,\r\n        show: true,\r\n      },\r\n      temperature: {\r\n        units: 'deg F',\r\n        label: 'Temp',\r\n        format: 'd',\r\n        series: null,\r\n        show: false,\r\n      },\r\n      speed: {\r\n        units: 'mph',\r\n        label: 'Speed',\r\n        format: ',.1f',\r\n        series: null,\r\n        show: true,\r\n      },\r\n    };\r\n\r\n    // Channel names list, in order we want them shown\r\n    const channelNames = [\r\n      'speed',\r\n      'power',\r\n      'cadence',\r\n      'temperature',\r\n      'distance',\r\n      'altitude',\r\n    ];\r\n\r\n    // Channels we'll actually display on our charts\r\n    const displayChannels = ['speed', 'power', 'cadence'];\r\n\r\n    // Rollups we'll generate to reduce data for the screen\r\n    const rollupLevels = ['1s', '5s', '15s', '25s'];\r\n\r\n    this.state = {\r\n      ready: false,\r\n      mode: 'channels',\r\n      channels,\r\n      channelNames,\r\n      displayChannels,\r\n      rollupLevels,\r\n      rollup: '1m',\r\n      tracker: null,\r\n      timerange: initialRange,\r\n      brushrange: initialRange,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      const {\r\n        channelNames,\r\n        channels,\r\n        displayChannels,\r\n        rollupLevels,\r\n      } = this.state;\r\n\r\n      //\r\n      // Process the data file into channels\r\n      //\r\n\r\n      const points = {};\r\n      channelNames.forEach(channel => {\r\n        points[channel] = [];\r\n      });\r\n\r\n      for (let i = 0; i < data.time.length; i += 1) {\r\n        if (i > 0) {\r\n          const deltaTime = data.time[i] - data.time[i - 1];\r\n          const time = data.time[i] * 1000;\r\n\r\n          points['distance'].push([time, data.distance[i]]);\r\n          points['altitude'].push([time, data.altitude[i] * 3.28084]); // convert m to ft\r\n          points['cadence'].push([time, data.cadence[i]]);\r\n          points['power'].push([time, data.watts[i]]);\r\n          points['temperature'].push([time, data.temp[i]]);\r\n\r\n          // insert a null into the speed data to put breaks in the data where\r\n          // the rider was stationary\r\n          if (deltaTime > 10) {\r\n            points['speed'].push([time - 1000, null]);\r\n          }\r\n\r\n          const speed =\r\n            (data.distance[i] - data.distance[i - 1]) /\r\n            (data.time[i] - data.time[i - 1]); // meters/sec\r\n          points['speed'].push([time, 2.236941 * speed]); // convert m/s to miles/hr\r\n        }\r\n      }\r\n\r\n      // Make the TimeSeries here from the points collected above\r\n      for (let channelName of channelNames) {\r\n        // The TimeSeries itself, for this channel\r\n        const series = new TimeSeries({\r\n          name: channels[channelName].name,\r\n          columns: ['time', channelName],\r\n          points: points[channelName],\r\n        });\r\n\r\n        if (_.contains(displayChannels, channelName)) {\r\n          const rollups = _.map(rollupLevels, rollupLevel => {\r\n            return {\r\n              duration: parseInt(rollupLevel.split('s')[0], 10),\r\n              series: series.fixedWindowRollup({\r\n                windowSize: rollupLevel,\r\n                aggregation: { [channelName]: { [channelName]: avg() } },\r\n              }),\r\n            };\r\n          });\r\n\r\n          // Rollup series levels\r\n          channels[channelName].rollups = rollups;\r\n        }\r\n\r\n        // Raw series\r\n        channels[channelName].series = series;\r\n\r\n        // Some simple statistics for each channel\r\n        channels[channelName].avg = parseInt(series.avg(channelName), 10);\r\n        channels[channelName].max = parseInt(series.max(channelName), 10);\r\n      }\r\n\r\n      // Min and max time constraints for pan/zoom, along with the smallest timerange\r\n      // the user can zoom into. These are passed into the ChartContainers when we come to\r\n      // rendering.\r\n\r\n      const minTime = channels.altitude.series.range().begin();\r\n      const maxTime = channels.altitude.series.range().end();\r\n      const minDuration = 10 * 60 * 1000;\r\n\r\n      this.setState({ ready: true, channels, minTime, maxTime, minDuration });\r\n    }, 0);\r\n  }\r\n\r\n  handleTrackerChanged = t => {\r\n    this.setState({ tracker: t });\r\n  };\r\n\r\n  // Handles when the brush changes the timerange\r\n  handleTimeRangeChange = timerange => {\r\n    const { channels } = this.state;\r\n\r\n    if (timerange) {\r\n      this.setState({ timerange, brushrange: timerange });\r\n    } else {\r\n      this.setState({\r\n        timerange: channels['altitude'].range(),\r\n        brushrange: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChartResize = width => {\r\n    this.setState({ width });\r\n  };\r\n\r\n  handleActiveChange = channelName => {\r\n    const channels = this.state.channels;\r\n    channels[channelName].show = !channels[channelName].show;\r\n    this.setState({ channels });\r\n  };\r\n\r\n  renderChart = () => {\r\n    if (this.state.mode === 'multiaxis') {\r\n      return this.renderMultiAxisChart();\r\n    } else if (this.state.mode === 'channels') {\r\n      return this.renderChannelsChart();\r\n    } else if (this.state.mode === 'rollup') {\r\n      return this.renderBoxChart();\r\n    }\r\n    return <div>No chart</div>;\r\n  };\r\n\r\n  renderChannelsChart = () => {\r\n    const {\r\n      timerange,\r\n      displayChannels,\r\n      channels,\r\n      maxTime,\r\n      minTime,\r\n      minDuration,\r\n    } = this.state;\r\n\r\n    const durationPerPixel = timerange.duration() / 800 / 1000;\r\n    const rows = [];\r\n\r\n    for (let channelName of displayChannels) {\r\n      const charts = [];\r\n      let series = channels[channelName].series;\r\n      _.forEach(channels[channelName].rollups, rollup => {\r\n        if (rollup.duration < durationPerPixel * 2) {\r\n          series = rollup.series.crop(timerange);\r\n        }\r\n      });\r\n\r\n      charts.push(\r\n        <LineChart\r\n          key={`line-${channelName}`}\r\n          axis={`${channelName}_axis`}\r\n          series={series}\r\n          columns={[channelName]}\r\n          style={style}\r\n          breakLine\r\n        />,\r\n      );\r\n      charts.push(\r\n        <Baseline\r\n          key={`baseline-${channelName}`}\r\n          axis={`${channelName}_axis`}\r\n          style={baselineStyles.speed}\r\n          value={channels[channelName].avg}\r\n        />,\r\n      );\r\n\r\n      // Get the value at the current tracker position for the ValueAxis\r\n      let value = '--';\r\n      if (this.state.tracker) {\r\n        const approx =\r\n          (+this.state.tracker - +timerange.begin()) /\r\n          (+timerange.end() - +timerange.begin());\r\n        const ii = Math.floor(approx * series.size());\r\n        const i = series.bisect(new Date(this.state.tracker), ii);\r\n        const v = i < series.size() ? series.at(i).get(channelName) : null;\r\n        if (v) {\r\n          value = parseInt(v, 10);\r\n        }\r\n      }\r\n\r\n      // Get the summary values for the LabelAxis\r\n      const summary = [\r\n        { label: 'Max', value: speedFormat(channels[channelName].max) },\r\n        { label: 'Avg', value: speedFormat(channels[channelName].avg) },\r\n      ];\r\n\r\n      rows.push(\r\n        <ChartRow\r\n          height=\"100\"\r\n          visible={channels[channelName].show}\r\n          key={`row-${channelName}`}\r\n        >\r\n          <LabelAxis\r\n            id={`${channelName}_axis`}\r\n            label={channels[channelName].label}\r\n            values={summary}\r\n            min={0}\r\n            max={channels[channelName].max}\r\n            width={140}\r\n            type=\"linear\"\r\n            format=\",.1f\"\r\n          />\r\n          <Charts>{charts}</Charts>\r\n          <ValueAxis\r\n            id={`${channelName}_valueaxis`}\r\n            value={value}\r\n            detail={channels[channelName].units}\r\n            width={80}\r\n            min={0}\r\n            max={35}\r\n          />\r\n        </ChartRow>,\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ChartContainer\r\n        timeRange={this.state.timerange}\r\n        format=\"relative\"\r\n        showGrid={false}\r\n        enablePanZoom\r\n        maxTime={maxTime}\r\n        minTime={minTime}\r\n        minDuration={minDuration}\r\n        trackerPosition={this.state.tracker}\r\n        onTimeRangeChanged={this.handleTimeRangeChange}\r\n        onChartResize={width => this.handleChartResize(width)}\r\n        onTrackerChanged={this.handleTrackerChanged}\r\n      >\r\n        {rows}\r\n      </ChartContainer>\r\n    );\r\n  };\r\n\r\n  renderBoxChart = () => {\r\n    const {\r\n      timerange,\r\n      displayChannels,\r\n      channels,\r\n      maxTime,\r\n      minTime,\r\n      minDuration,\r\n    } = this.state;\r\n\r\n    const rows = [];\r\n\r\n    for (let channelName of displayChannels) {\r\n      const charts = [];\r\n      const series = channels[channelName].series;\r\n\r\n      charts.push(\r\n        <BoxChart\r\n          key={`box-${channelName}`}\r\n          axis={`${channelName}_axis`}\r\n          series={series}\r\n          column={channelName}\r\n          style={style}\r\n          aggregation={{\r\n            size: this.state.rollup,\r\n            reducers: {\r\n              outer: [percentile(5), percentile(95)],\r\n              inner: [percentile(25), percentile(75)],\r\n              center: median(),\r\n            },\r\n          }}\r\n        />,\r\n      );\r\n      charts.push(\r\n        <Baseline\r\n          key={`baseline-${channelName}`}\r\n          axis={`${channelName}_axis`}\r\n          style={baselineStyles.speed}\r\n          value={channels[channelName].avg}\r\n        />,\r\n      );\r\n\r\n      // Get the value at the current tracker position for the ValueAxis\r\n      let value = '--';\r\n      if (this.state.tracker) {\r\n        const approx =\r\n          (+this.state.tracker - +timerange.begin()) /\r\n          (+timerange.end() - +timerange.begin());\r\n        const ii = Math.floor(approx * series.size());\r\n        const i = series.bisect(new Date(this.state.tracker), ii);\r\n        const v = i < series.size() ? series.at(i).get(channelName) : null;\r\n        if (v) {\r\n          value = parseInt(v, 10);\r\n        }\r\n      }\r\n\r\n      // Get the summary values for the LabelAxis\r\n      const summary = [\r\n        { label: 'Max', value: speedFormat(channels[channelName].max) },\r\n        { label: 'Avg', value: speedFormat(channels[channelName].avg) },\r\n      ];\r\n\r\n      rows.push(\r\n        <ChartRow\r\n          height=\"100\"\r\n          visible={channels[channelName].show}\r\n          key={`row-${channelName}`}\r\n        >\r\n          <LabelAxis\r\n            id={`${channelName}_axis`}\r\n            label={channels[channelName].label}\r\n            values={summary}\r\n            min={0}\r\n            max={channels[channelName].max}\r\n            width={140}\r\n            type=\"linear\"\r\n            format=\",.1f\"\r\n          />\r\n          <Charts>{charts}</Charts>\r\n          <ValueAxis\r\n            id={`${channelName}_valueaxis`}\r\n            value={value}\r\n            detail={channels[channelName].units}\r\n            width={80}\r\n            min={0}\r\n            max={35}\r\n          />\r\n        </ChartRow>,\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ChartContainer\r\n        timeRange={this.state.timerange}\r\n        format=\"relative\"\r\n        showGrid={false}\r\n        enablePanZoom\r\n        maxTime={maxTime}\r\n        minTime={minTime}\r\n        minDuration={minDuration}\r\n        trackerPosition={this.state.tracker}\r\n        onTimeRangeChanged={this.handleTimeRangeChange}\r\n        onChartResize={width => this.handleChartResize(width)}\r\n        onTrackerChanged={this.handleTrackerChanged}\r\n      >\r\n        {rows}\r\n      </ChartContainer>\r\n    );\r\n  };\r\n\r\n  renderMultiAxisChart() {\r\n    const {\r\n      timerange,\r\n      displayChannels,\r\n      channels,\r\n      maxTime,\r\n      minTime,\r\n      minDuration,\r\n    } = this.state;\r\n\r\n    const durationPerPixel = timerange.duration() / 800 / 1000;\r\n\r\n    // Line charts\r\n    const charts = [];\r\n    for (let channelName of displayChannels) {\r\n      let series = channels[channelName].series;\r\n      _.forEach(channels[channelName].rollups, rollup => {\r\n        if (rollup.duration < durationPerPixel * 2) {\r\n          series = rollup.series.crop(timerange);\r\n        }\r\n      });\r\n\r\n      charts.push(\r\n        <LineChart\r\n          key={`line-${channelName}`}\r\n          axis={`${channelName}_axis`}\r\n          visible={channels[channelName].show}\r\n          series={series}\r\n          columns={[channelName]}\r\n          style={style}\r\n          breakLine\r\n        />,\r\n      );\r\n    }\r\n\r\n    // Tracker info box\r\n    const trackerInfoValues = displayChannels\r\n      .filter(channelName => channels[channelName].show)\r\n      .map(channelName => {\r\n        const fmt = format(channels[channelName].format);\r\n\r\n        let series = channels[channelName].series.crop(timerange);\r\n\r\n        let v = '--';\r\n        if (this.state.tracker) {\r\n          const i = series.bisect(new Date(this.state.tracker));\r\n          const vv = series.at(i).get(channelName);\r\n          if (vv) {\r\n            v = fmt(vv);\r\n          }\r\n        }\r\n\r\n        const label = channels[channelName].label;\r\n        const value = `${v} ${channels[channelName].units}`;\r\n\r\n        return { label, value };\r\n      });\r\n\r\n    // Axis list\r\n    const axisList = [];\r\n    for (let channelName of displayChannels) {\r\n      const label = channels[channelName].label;\r\n      const max = channels[channelName].max;\r\n      const format = channels[channelName].format;\r\n      const id = `${channelName}_axis`;\r\n      const visible = channels[channelName].show;\r\n      axisList.push(\r\n        <YAxis\r\n          id={id}\r\n          key={id}\r\n          visible={visible}\r\n          label={label}\r\n          min={0}\r\n          max={max}\r\n          width={70}\r\n          type=\"linear\"\r\n          format={format}\r\n        />,\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ChartContainer\r\n        timeRange={this.state.timerange}\r\n        format=\"relative\"\r\n        trackerPosition={this.state.tracker}\r\n        onTrackerChanged={this.handleTrackerChanged}\r\n        trackerShowTime\r\n        enablePanZoom\r\n        maxTime={maxTime}\r\n        minTime={minTime}\r\n        minDuration={minDuration}\r\n        onTimeRangeChanged={this.handleTimeRangeChange}\r\n      >\r\n        <ChartRow\r\n          height=\"200\"\r\n          trackerInfoValues={trackerInfoValues}\r\n          trackerInfoHeight={10 + trackerInfoValues.length * 16}\r\n          trackerInfoWidth={140}\r\n        >\r\n          {axisList}\r\n          <Charts>{charts}</Charts>\r\n        </ChartRow>\r\n      </ChartContainer>\r\n    );\r\n  }\r\n\r\n  renderBrush = () => {\r\n    const { channels } = this.state;\r\n    return (\r\n      <ChartContainer\r\n        timeRange={channels.altitude.series.range()}\r\n        format=\"relative\"\r\n        trackerPosition={this.state.tracker}\r\n      >\r\n        <ChartRow height=\"100\" debug={false}>\r\n          <Brush\r\n            timeRange={this.state.brushrange}\r\n            allowSelectionClear\r\n            onTimeRangeChanged={this.handleTimeRangeChange}\r\n          />\r\n          <YAxis\r\n            id=\"axis1\"\r\n            label=\"Altitude (ft)\"\r\n            min={0}\r\n            max={channels.altitude.max}\r\n            width={70}\r\n            type=\"linear\"\r\n            format=\"d\"\r\n          />\r\n          <Charts>\r\n            <AreaChart\r\n              axis=\"axis1\"\r\n              style={style.areaChartStyle()}\r\n              columns={{ up: ['altitude'], down: [] }}\r\n              series={channels.altitude.series}\r\n            />\r\n          </Charts>\r\n        </ChartRow>\r\n      </ChartContainer>\r\n    );\r\n  };\r\n\r\n  renderMode = () => {\r\n    const linkStyle = {\r\n      fontWeight: 600,\r\n      color: 'grey',\r\n      cursor: 'default',\r\n    };\r\n\r\n    const linkStyleActive = {\r\n      color: 'steelblue',\r\n      cursor: 'pointer',\r\n    };\r\n\r\n    return (\r\n      <div className=\"col-md-6\" style={{ fontSize: 14, color: '#777' }}>\r\n        <span\r\n          style={this.state.mode !== 'multiaxis' ? linkStyleActive : linkStyle}\r\n          onClick={() => this.setState({ mode: 'multiaxis' })}\r\n        >\r\n          Multi-axis\r\n        </span>\r\n        <span> | </span>\r\n        <span\r\n          style={this.state.mode !== 'channels' ? linkStyleActive : linkStyle}\r\n          onClick={() => this.setState({ mode: 'channels' })}\r\n        >\r\n          Channels\r\n        </span>\r\n        <span> | </span>\r\n        <span\r\n          style={this.state.mode !== 'rollup' ? linkStyleActive : linkStyle}\r\n          onClick={() => this.setState({ mode: 'rollup' })}\r\n        >\r\n          Rollups\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderModeOptions = () => {\r\n    const linkStyle = {\r\n      fontWeight: 600,\r\n      color: 'grey',\r\n      cursor: 'default',\r\n    };\r\n\r\n    const linkStyleActive = {\r\n      color: 'steelblue',\r\n      cursor: 'pointer',\r\n    };\r\n\r\n    if (this.state.mode === 'multiaxis') {\r\n      return <div />;\r\n    } else if (this.state.mode === 'channels') {\r\n      return <div />;\r\n    } else if (this.state.mode === 'rollup') {\r\n      return (\r\n        <div className=\"col-md-6\" style={{ fontSize: 14, color: '#777' }}>\r\n          <span\r\n            style={this.state.rollup !== '1m' ? linkStyleActive : linkStyle}\r\n            onClick={() => this.setState({ rollup: '1m' })}\r\n          >\r\n            1m\r\n          </span>\r\n          <span> | </span>\r\n          <span\r\n            style={this.state.rollup !== '5m' ? linkStyleActive : linkStyle}\r\n            onClick={() => this.setState({ rollup: '5m' })}\r\n          >\r\n            5m\r\n          </span>\r\n          <span> | </span>\r\n          <span\r\n            style={this.state.rollup !== '15m' ? linkStyleActive : linkStyle}\r\n            onClick={() => this.setState({ rollup: '15m' })}\r\n          >\r\n            15m\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n    return <div />;\r\n  };\r\n\r\n  render() {\r\n    const { ready, channels, displayChannels } = this.state;\r\n\r\n    if (!ready) {\r\n      return <div>{`Building rollups...`}</div>;\r\n    }\r\n    const chartStyle = {\r\n      borderStyle: 'solid',\r\n      borderWidth: 1,\r\n      borderColor: '#DDD',\r\n      paddingTop: 10,\r\n      marginBottom: 10,\r\n    };\r\n\r\n    const brushStyle = {\r\n      boxShadow: 'inset 0px 2px 5px -2px rgba(189, 189, 189, 0.75)',\r\n      background: '#FEFEFE',\r\n      paddingTop: 10,\r\n    };\r\n\r\n    // Generate the legend\r\n    const legend = displayChannels.map(channelName => ({\r\n      key: channelName,\r\n      label: channels[channelName].label,\r\n      disabled: !channels[channelName].show,\r\n    }));\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          {this.renderMode()}\r\n          {this.renderModeOptions()}\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Legend\r\n              type={this.state.mode === 'rollup' ? 'swatch' : 'line'}\r\n              style={style}\r\n              categories={legend}\r\n              onSelectionChange={this.handleActiveChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            {this.state.tracker\r\n              ? `${moment.duration(+this.state.tracker).format()}`\r\n              : '-:--:--'}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\" style={chartStyle}>\r\n            <Resizable>\r\n              {ready ? this.renderChart() : <div>Loading.....</div>}\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\" style={brushStyle}>\r\n            <Resizable>{ready ? this.renderBrush() : <div />}</Resizable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Export example\r\nexport default Cycling;\r\n","import {\r\n  EventOut,\r\n  percentile,\r\n  Pipeline as pipeline,\r\n  Stream,\r\n  TimeEvent,\r\n  TimeRange,\r\n  TimeSeries,\r\n} from 'pondjs';\r\nimport React from 'react';\r\nimport {\r\n  BarChart,\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  Legend,\r\n  Resizable,\r\n  ScatterChart,\r\n  styler,\r\n  YAxis,\r\n} from 'react-timeseries-charts';\r\nimport Ring from 'ringjs';\r\n\r\nconst sec = 1000;\r\nconst minute = 60 * sec;\r\nconst hours = 60 * minute;\r\nconst rate = 80;\r\n\r\nexport default class Realtime extends React.Component {\r\n  static displayName = 'AggregatorDemo';\r\n\r\n  state = {\r\n    time: new Date(2015, 0, 1),\r\n    events: new Ring(200),\r\n    percentile50Out: new Ring(100),\r\n    percentile90Out: new Ring(100),\r\n  };\r\n\r\n  getNewEvent = t => {\r\n    const base = Math.sin(t.getTime() / 10000000) * 350 + 500;\r\n    return new TimeEvent(t, parseInt(base + Math.random() * 1000, 10));\r\n  };\r\n\r\n  componentDidMount() {\r\n    //\r\n    // Setup our aggregation pipelines\r\n    //\r\n\r\n    this.stream = new Stream();\r\n\r\n    pipeline()\r\n      .from(this.stream)\r\n      .windowBy('5m')\r\n      .emitOn('discard')\r\n      .aggregate({\r\n        value: { value: percentile(90) },\r\n      })\r\n      .to(EventOut, event => {\r\n        const events = this.state.percentile90Out;\r\n        events.push(event);\r\n        this.setState({ percentile90Out: events });\r\n      });\r\n\r\n    pipeline()\r\n      .from(this.stream)\r\n      .windowBy('5m')\r\n      .emitOn('discard')\r\n      .aggregate({\r\n        value: { value: percentile(50) },\r\n      })\r\n      .to(EventOut, event => {\r\n        const events = this.state.percentile50Out;\r\n        events.push(event);\r\n        this.setState({ percentile50Out: events });\r\n      });\r\n\r\n    //\r\n    // Setup our interval to advance the time and generate raw events\r\n    //\r\n\r\n    const increment = minute;\r\n    this.interval = setInterval(() => {\r\n      const t = new Date(this.state.time.getTime() + increment);\r\n      const event = this.getNewEvent(t);\r\n\r\n      // Raw events\r\n      const newEvents = this.state.events;\r\n      newEvents.push(event);\r\n      this.setState({ time: t, events: newEvents });\r\n\r\n      // Let our aggregators process the event\r\n      this.stream.addEvent(event);\r\n    }, rate);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const latestTime = `${this.state.time}`;\r\n\r\n    const fiveMinuteStyle = {\r\n      value: {\r\n        normal: { fill: '#619F3A', opacity: 0.2 },\r\n        highlight: { fill: '619F3A', opacity: 0.5 },\r\n        selected: { fill: '619F3A', opacity: 0.5 },\r\n      },\r\n    };\r\n\r\n    const scatterStyle = {\r\n      value: {\r\n        normal: {\r\n          fill: 'steelblue',\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n    };\r\n\r\n    //\r\n    // Create a TimeSeries for our raw, 5min and hourly events\r\n    //\r\n\r\n    const eventSeries = new TimeSeries({\r\n      name: 'raw',\r\n      events: this.state.events.toArray(),\r\n    });\r\n\r\n    const perc50Series = new TimeSeries({\r\n      name: 'five minute perc50',\r\n      events: this.state.percentile50Out.toArray(),\r\n    });\r\n\r\n    const perc90Series = new TimeSeries({\r\n      name: 'five minute perc90',\r\n      events: this.state.percentile90Out.toArray(),\r\n    });\r\n\r\n    // Timerange for the chart axis\r\n    const initialBeginTime = new Date(2015, 0, 1);\r\n    const timeWindow = 3 * hours;\r\n\r\n    let beginTime;\r\n    const endTime = new Date(this.state.time.getTime() + minute);\r\n    if (endTime.getTime() - timeWindow < initialBeginTime.getTime()) {\r\n      beginTime = initialBeginTime;\r\n    } else {\r\n      beginTime = new Date(endTime.getTime() - timeWindow);\r\n    }\r\n    const timeRange = new TimeRange(beginTime, endTime);\r\n\r\n    // Charts (after a certain amount of time, just show hourly rollup)\r\n    const charts = (\r\n      <Charts>\r\n        <BarChart\r\n          axis=\"y\"\r\n          series={perc90Series}\r\n          style={fiveMinuteStyle}\r\n          columns={['value']}\r\n        />\r\n        <BarChart\r\n          axis=\"y\"\r\n          series={perc50Series}\r\n          style={fiveMinuteStyle}\r\n          columns={['value']}\r\n        />\r\n        <ScatterChart axis=\"y\" series={eventSeries} style={scatterStyle} />\r\n      </Charts>\r\n    );\r\n\r\n    const dateStyle = {\r\n      fontSize: 12,\r\n      color: '#AAA',\r\n      borderWidth: 1,\r\n      borderColor: '#F4F4F4',\r\n    };\r\n\r\n    const style = styler([\r\n      { key: 'perc50', color: '#C5DCB7', width: 1, dashed: true },\r\n      { key: 'perc90', color: '#DFECD7', width: 2 },\r\n    ]);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Legend\r\n              type=\"swatch\"\r\n              style={style}\r\n              categories={[\r\n                {\r\n                  key: 'perc50',\r\n                  label: '50th Percentile',\r\n                  style: { fill: '#C5DCB7' },\r\n                },\r\n                {\r\n                  key: 'perc90',\r\n                  label: '90th Percentile',\r\n                  style: { fill: '#DFECD7' },\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <span style={dateStyle}>{latestTime}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer timeRange={timeRange}>\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"y\"\r\n                    label=\"Value\"\r\n                    min={0}\r\n                    max={1500}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  {charts}\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { TimeRange, TimeSeries } from 'pondjs';\r\nimport timerangeevent from 'pondjs/lib/lib/timerangeevent';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  EventChart,\r\n  Resizable,\r\n} from 'react-timeseries-charts';\r\nimport styled from 'styled-components';\r\nimport Bar from './Bar';\r\nimport BrushPanExample from './BrushPanExample';\r\nimport Realtime from './Realtime';\r\n\r\nconst ChartsWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n`;\r\n\r\n//\r\n// Test data\r\n//\r\n\r\nconst outageEvents = [\r\n  {\r\n    startTime: '2015-03-08T09:00:00Z',\r\n    endTime: '2015-03-22T14:00:00Z',\r\n    title: 'ANL Scheduled Maintenance',\r\n    description: 'ANL will be switching border routers...',\r\n    completed: true,\r\n    external_ticket: '',\r\n    esnet_ticket: 'ESNET-20150302-002',\r\n    organization: 'ANL',\r\n    type: 'Planned',\r\n  },\r\n  {\r\n    startTime: '2015-04-01T03:30:00Z',\r\n    endTime: '2015-04-02T16:50:00Z',\r\n    title: 'STAR-CR5 < 100 ge 06519 > ANL  - Outage',\r\n    description: 'The listed circuit was unavailable due to bent pins.',\r\n    completed: true,\r\n    external_ticket: '3576:144',\r\n    esnet_ticket: 'ESNET-20150421-013',\r\n    organization: 'Internet2 / Level 3',\r\n    type: 'Unplanned',\r\n  },\r\n  {\r\n    startTime: '2015-04-22T03:30:00Z',\r\n    endTime: '2015-04-22T13:00:00Z',\r\n    description: 'At 13:33 pacific circuit 06519 went down.',\r\n    title: 'STAR-CR5 < 100 ge 06519 > ANL  - Outage',\r\n    completed: true,\r\n    external_ticket: '',\r\n    esnet_ticket: 'ESNET-20150421-013',\r\n    organization: 'Internet2 / Level 3',\r\n    type: 'Unplanned',\r\n  },\r\n];\r\n\r\n//\r\n// Turn data into TimeSeries\r\n//\r\n\r\nconst events = outageEvents.map(\r\n  ({ startTime, endTime, ...data }) =>\r\n    new timerangeevent(\r\n      new TimeRange(new Date(startTime), new Date(endTime)),\r\n      data,\r\n    ),\r\n);\r\nconst series = new TimeSeries({ name: 'outages', events });\r\n\r\n//\r\n// Render event chart\r\n//\r\n\r\nfunction outageEventStyleFunc(event, state) {\r\n  const color = event.get('type') === 'Planned' ? '#998ec3' : '#f1a340';\r\n  switch (state) {\r\n    case 'normal':\r\n      return {\r\n        fill: color,\r\n      };\r\n    case 'hover':\r\n      return {\r\n        fill: color,\r\n        opacity: 0.4,\r\n      };\r\n    case 'selected':\r\n      return {\r\n        fill: color,\r\n      };\r\n    default:\r\n    //pass\r\n  }\r\n}\r\n\r\nexport default class ReactTimeSeries extends Component {\r\n  state = {\r\n    tracker: null,\r\n    timerange: series.timerange(),\r\n    eventChartVisible: false,\r\n    realtimeChartVisible: false,\r\n  };\r\n  toggleVisibility = which => {\r\n    this.setState({ [which]: !this.state[which] });\r\n  };\r\n  handleTrackerChanged = tracker => {\r\n    this.setState({ tracker });\r\n  };\r\n  handleTimeRangeChange = timerange => {\r\n    this.setState({ timerange });\r\n  };\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <div>\r\n          <h1>\r\n            <a href=\"http://software.es.net/react-timeseries-charts/#/\">\r\n              React Timeseries Charts\r\n            </a>\r\n          </h1>\r\n          <h3>\r\n            uses <a href=\"http://software.es.net/pond/#/\">pond.js</a> for\r\n            handling time series data\r\n          </h3>\r\n        </div>\r\n        <h2>\r\n          <a href=\"http://software.es.net/react-timeseries-charts/#/api/charts/EventChart\">\r\n            EventChart\r\n          </a>\r\n        </h2>\r\n        <div>\r\n          <Resizable>\r\n            <ChartContainer\r\n              timeRange={this.state.timerange}\r\n              enablePanZoom={true}\r\n              onTimeRangeChanged={this.handleTimeRangeChange}\r\n            >\r\n              <ChartRow height=\"30\">\r\n                <Charts>\r\n                  <EventChart\r\n                    series={series}\r\n                    size={45}\r\n                    style={outageEventStyleFunc}\r\n                    label={e => e.get('title')}\r\n                  />\r\n                </Charts>\r\n              </ChartRow>\r\n            </ChartContainer>\r\n          </Resizable>\r\n          <button onClick={() => this.toggleVisibility('eventChartVisible')}>\r\n            {this.state.eventChartVisible ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.eventChartVisible && (\r\n            <pre>\r\n              <code>{`\r\n//\r\n// Test data\r\n//\r\n\r\nconst outageEvents = [\r\n  {\r\n    startTime: '2015-03-08T09:00:00Z',\r\n    endTime: '2015-03-22T14:00:00Z',\r\n    title: 'ANL Scheduled Maintenance',\r\n    description: 'ANL will be switching border routers...',\r\n    completed: true,\r\n    external_ticket: '',\r\n    esnet_ticket: 'ESNET-20150302-002',\r\n    organization: 'ANL',\r\n    type: 'Planned',\r\n  },\r\n  {\r\n    startTime: '2015-04-01T03:30:00Z',\r\n    endTime: '2015-04-02T16:50:00Z',\r\n    title: 'STAR-CR5 < 100 ge 06519 > ANL  - Outage',\r\n    description: 'The listed circuit was unavailable due to bent pins.',\r\n    completed: true,\r\n    external_ticket: '3576:144',\r\n    esnet_ticket: 'ESNET-20150421-013',\r\n    organization: 'Internet2 / Level 3',\r\n    type: 'Unplanned',\r\n  },\r\n  {\r\n    startTime: '2015-04-22T03:30:00Z',\r\n    endTime: '2015-04-22T13:00:00Z',\r\n    description: 'At 13:33 pacific circuit 06519 went down.',\r\n    title: 'STAR-CR5 < 100 ge 06519 > ANL  - Outage',\r\n    completed: true,\r\n    external_ticket: '',\r\n    esnet_ticket: 'ESNET-20150421-013',\r\n    organization: 'Internet2 / Level 3',\r\n    type: 'Unplanned',\r\n  },\r\n];\r\n\r\n//\r\n// Turn data into TimeSeries\r\n//\r\n\r\nconst events = outageEvents.map(\r\n  ({ startTime, endTime, ...data }) =>\r\n    new timerangeevent(\r\n      new TimeRange(new Date(startTime), new Date(endTime)),\r\n      data,\r\n    ),\r\n);\r\nconst series = new TimeSeries({ name: 'outages', events });\r\n\r\n//\r\n// Render event chart\r\n//\r\n\r\nfunction outageEventStyleFunc(event, state) {\r\n  const color = event.get('type') === 'Planned' ? '#998ec3' : '#f1a340';\r\n  switch (state) {\r\n    case 'normal':\r\n      return {\r\n        fill: color,\r\n      };\r\n    case 'hover':\r\n      return {\r\n        fill: color,\r\n        opacity: 0.4,\r\n      };\r\n    case 'selected':\r\n      return {\r\n        fill: color,\r\n      };\r\n    default:\r\n    //pass\r\n  }\r\n}\r\n\r\nexport default class ReactTimeSeries extends Component {\r\n  state = {\r\n    tracker: null,\r\n    timerange: series.timerange(),\r\n    eventChartVisible: true,\r\n  };\r\n  toggleVisibility = which => {\r\n    this.setState({ [which]: !this.state[which] });\r\n  };\r\n  handleTrackerChanged = tracker => {\r\n    this.setState({ tracker });\r\n  };\r\n  handleTimeRangeChange = timerange => {\r\n    this.setState({ timerange });\r\n  };\r\n      render() {\r\n        return (\r\n            <Resizable>\r\n            <ChartContainer\r\n              timeRange={this.state.timerange}\r\n              enablePanZoom={true}\r\n              onTimeRangeChanged={this.handleTimeRangeChange}\r\n            >\r\n              <ChartRow height=\"30\">\r\n                <Charts>\r\n                  <EventChart\r\n                    series={series}\r\n                    size={45}\r\n                    style={outageEventStyleFunc}\r\n                    label={e => e.get('title')}\r\n                  />\r\n                </Charts>\r\n              </ChartRow>\r\n            </ChartContainer>\r\n          </Resizable>\r\n          `}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>\r\n            <a href=\"http://software.es.net/react-timeseries-charts/#/api/charts/EventChart\">\r\n              Realtime chart\r\n            </a>\r\n          </h2>\r\n\r\n          <Realtime />\r\n          <button onClick={() => this.toggleVisibility('realtimeChartVisible')}>\r\n            {this.state.realtimeChartVisible ? 'Hide' : 'Show'} Source\r\n          </button>\r\n          {this.state.realtimeChartVisible && (\r\n            <pre>\r\n              <code>{`\r\nimport {\r\n  EventOut,\r\n  percentile,\r\n  Pipeline as pipeline,\r\n  Stream,\r\n  TimeEvent,\r\n  TimeRange,\r\n  TimeSeries,\r\n} from 'pondjs';\r\nimport React from 'react';\r\nimport {\r\n  BarChart,\r\n  ChartContainer,\r\n  ChartRow,\r\n  Charts,\r\n  Legend,\r\n  Resizable,\r\n  ScatterChart,\r\n  styler,\r\n  YAxis,\r\n} from 'react-timeseries-charts';\r\nimport Ring from 'ringjs';\r\n\r\nconst sec = 1000;\r\nconst minute = 60 * sec;\r\nconst hours = 60 * minute;\r\nconst rate = 80;\r\n\r\nexport default class Realtime extends React.Component {\r\n  static displayName = 'AggregatorDemo';\r\n\r\n  state = {\r\n    time: new Date(2015, 0, 1),\r\n    events: new Ring(200),\r\n    percentile50Out: new Ring(100),\r\n    percentile90Out: new Ring(100),\r\n  };\r\n\r\n  getNewEvent = t => {\r\n    const base = Math.sin(t.getTime() / 10000000) * 350 + 500;\r\n    return new TimeEvent(t, parseInt(base + Math.random() * 1000, 10));\r\n  };\r\n\r\n  componentDidMount() {\r\n    //\r\n    // Setup our aggregation pipelines\r\n    //\r\n\r\n    this.stream = new Stream();\r\n\r\n    pipeline()\r\n      .from(this.stream)\r\n      .windowBy('5m')\r\n      .emitOn('discard')\r\n      .aggregate({\r\n        value: { value: percentile(90) },\r\n      })\r\n      .to(EventOut, event => {\r\n        const events = this.state.percentile90Out;\r\n        events.push(event);\r\n        this.setState({ percentile90Out: events });\r\n      });\r\n\r\n    pipeline()\r\n      .from(this.stream)\r\n      .windowBy('5m')\r\n      .emitOn('discard')\r\n      .aggregate({\r\n        value: { value: percentile(50) },\r\n      })\r\n      .to(EventOut, event => {\r\n        const events = this.state.percentile50Out;\r\n        events.push(event);\r\n        this.setState({ percentile50Out: events });\r\n      });\r\n\r\n    //\r\n    // Setup our interval to advance the time and generate raw events\r\n    //\r\n\r\n    const increment = minute;\r\n    this.interval = setInterval(() => {\r\n      const t = new Date(this.state.time.getTime() + increment);\r\n      const event = this.getNewEvent(t);\r\n\r\n      // Raw events\r\n      const newEvents = this.state.events;\r\n      newEvents.push(event);\r\n      this.setState({ time: t, events: newEvents });\r\n\r\n      // Let our aggregators process the event\r\n      this.stream.addEvent(event);\r\n    }, rate);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const latestTime = \\`\\${this.state.time}\\`;\r\n\r\n    const fiveMinuteStyle = {\r\n      value: {\r\n        normal: { fill: '#619F3A', opacity: 0.2 },\r\n        highlight: { fill: '619F3A', opacity: 0.5 },\r\n        selected: { fill: '619F3A', opacity: 0.5 },\r\n      },\r\n    };\r\n\r\n    const scatterStyle = {\r\n      value: {\r\n        normal: {\r\n          fill: 'steelblue',\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n    };\r\n\r\n    //\r\n    // Create a TimeSeries for our raw, 5min and hourly events\r\n    //\r\n\r\n    const eventSeries = new TimeSeries({\r\n      name: 'raw',\r\n      events: this.state.events.toArray(),\r\n    });\r\n\r\n    const perc50Series = new TimeSeries({\r\n      name: 'five minute perc50',\r\n      events: this.state.percentile50Out.toArray(),\r\n    });\r\n\r\n    const perc90Series = new TimeSeries({\r\n      name: 'five minute perc90',\r\n      events: this.state.percentile90Out.toArray(),\r\n    });\r\n\r\n    // Timerange for the chart axis\r\n    const initialBeginTime = new Date(2015, 0, 1);\r\n    const timeWindow = 3 * hours;\r\n\r\n    let beginTime;\r\n    const endTime = new Date(this.state.time.getTime() + minute);\r\n    if (endTime.getTime() - timeWindow < initialBeginTime.getTime()) {\r\n      beginTime = initialBeginTime;\r\n    } else {\r\n      beginTime = new Date(endTime.getTime() - timeWindow);\r\n    }\r\n    const timeRange = new TimeRange(beginTime, endTime);\r\n\r\n    // Charts (after a certain amount of time, just show hourly rollup)\r\n    const charts = (\r\n      <Charts>\r\n        <BarChart\r\n          axis=\"y\"\r\n          series={perc90Series}\r\n          style={fiveMinuteStyle}\r\n          columns={['value']}\r\n        />\r\n        <BarChart\r\n          axis=\"y\"\r\n          series={perc50Series}\r\n          style={fiveMinuteStyle}\r\n          columns={['value']}\r\n        />\r\n        <ScatterChart axis=\"y\" series={eventSeries} style={scatterStyle} />\r\n      </Charts>\r\n    );\r\n\r\n    const dateStyle = {\r\n      fontSize: 12,\r\n      color: '#AAA',\r\n      borderWidth: 1,\r\n      borderColor: '#F4F4F4',\r\n    };\r\n\r\n    const style = styler([\r\n      { key: 'perc50', color: '#C5DCB7', width: 1, dashed: true },\r\n      { key: 'perc90', color: '#DFECD7', width: 2 },\r\n    ]);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Legend\r\n              type=\"swatch\"\r\n              style={style}\r\n              categories={[\r\n                {\r\n                  key: 'perc50',\r\n                  label: '50th Percentile',\r\n                  style: { fill: '#C5DCB7' },\r\n                },\r\n                {\r\n                  key: 'perc90',\r\n                  label: '90th Percentile',\r\n                  style: { fill: '#DFECD7' },\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <span style={dateStyle}>{latestTime}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Resizable>\r\n              <ChartContainer timeRange={timeRange}>\r\n                <ChartRow height=\"150\">\r\n                  <YAxis\r\n                    id=\"y\"\r\n                    label=\"Value\"\r\n                    min={0}\r\n                    max={1500}\r\n                    width=\"70\"\r\n                    type=\"linear\"\r\n                  />\r\n                  {charts}\r\n                </ChartRow>\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n          `}</code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h2>\r\n            <a href=\"https://software.es.net/react-timeseries-charts/#/example/volume\">\r\n              Brush-Pan example\r\n            </a>\r\n          </h2>\r\n          <BrushPanExample />\r\n        </div>\r\n        <div>\r\n          <h2>\r\n            <a href=\"http://software.es.net/react-timeseries-charts/#/example/cycling\">\r\n              Bar charts\r\n            </a>\r\n          </h2>\r\n          <Bar />\r\n        </div>\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  VictoryArea,\r\n  VictoryAxis,\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryLabel,\r\n  VictoryStack,\r\n  VictoryTheme,\r\n} from 'victory';\r\n\r\nexport const ChartsWrapper = styled.div``;\r\n\r\nconst data = [\r\n  { quarter: 1, earnings: 13000 },\r\n  { quarter: 2, earnings: 16500 },\r\n  { quarter: 3, earnings: 14250 },\r\n  { quarter: 4, earnings: 19000 },\r\n];\r\nconst data2012 = [\r\n  { quarter: 1, earnings: 13000 },\r\n  { quarter: 2, earnings: 16500 },\r\n  { quarter: 3, earnings: 14250 },\r\n  { quarter: 4, earnings: 19000 },\r\n];\r\n\r\nconst data2013 = [\r\n  { quarter: 1, earnings: 15000 },\r\n  { quarter: 2, earnings: 12500 },\r\n  { quarter: 3, earnings: 19500 },\r\n  { quarter: 4, earnings: 13000 },\r\n];\r\n\r\nconst data2014 = [\r\n  { quarter: 1, earnings: 11500 },\r\n  { quarter: 2, earnings: 13250 },\r\n  { quarter: 3, earnings: 20000 },\r\n  { quarter: 4, earnings: 15500 },\r\n];\r\n\r\nconst data2015 = [\r\n  { quarter: 1, earnings: 18000 },\r\n  { quarter: 2, earnings: 13250 },\r\n  { quarter: 3, earnings: 15000 },\r\n  { quarter: 4, earnings: 12000 },\r\n];\r\n\r\nconst sampleData = [\r\n  { x: 1, y: 2 },\r\n  { x: 2, y: 1 },\r\n  { x: 3, y: 4 },\r\n  { x: 4, y: 3 },\r\n];\r\nexport default class Bar extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h4>\r\n          <a href=\"https://formidable.com/open-source/victory/docs/victory-bar/\">\r\n            Victory Bar Charts\r\n          </a>\r\n        </h4>\r\n        <VictoryChart\r\n          // domainPadding will add space to each side of VictoryBar to\r\n          // prevent it from overlapping the axis\r\n          domainPadding={20}\r\n          theme={VictoryTheme.material}\r\n        >\r\n          <VictoryAxis\r\n            // tickValues specifies both the number of ticks and where\r\n            // they are placed on the axis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis\r\n            dependentAxis\r\n            // tickFormat specifies how ticks should be displayed\r\n            tickFormat={x => `$${x / 1000}k`}\r\n          />\r\n          <VictoryBar\r\n            data={data}\r\n            // data accessor for x values\r\n            x=\"quarter\"\r\n            // data accessor for y values\r\n            y=\"earnings\"\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart\r\n            // domainPadding will add space to each side of VictoryBar to\r\n            // prevent it from overlapping the axis\r\n            domainPadding={20}\r\n            theme={VictoryTheme.material}\r\n          >\r\n            <VictoryAxis\r\n              // tickValues specifies both the number of ticks and where\r\n              // they are placed on the axis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis\r\n              dependentAxis\r\n              // tickFormat specifies how ticks should be displayed\r\n              tickFormat={x => \\`$\\${x / 1000}k\\`}\r\n            />\r\n            <VictoryBar\r\n              data={data}\r\n              // data accessor for x values\r\n              x=\"quarter\"\r\n              // data accessor for y values\r\n              y=\"earnings\"\r\n            />\r\n          </VictoryChart>\r\n        `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n          <VictoryAxis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis dependentAxis tickFormat={x => `$${x / 1000}k`} />\r\n          <VictoryStack>\r\n            <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n          </VictoryStack>\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n            <VictoryAxis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={x => \\`$\\${x / 1000}k\\`} />\r\n            <VictoryStack>\r\n              <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n            </VictoryStack>\r\n          </VictoryChart>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n          <VictoryAxis\r\n            tickValues={[1, 2, 3, 4]}\r\n            tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n          />\r\n          <VictoryAxis dependentAxis tickFormat={x => `$${x / 1000}k`} />\r\n          <VictoryStack colorScale={'warm'}>\r\n            <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n            <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n          </VictoryStack>\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\r\n            <VictoryAxis\r\n              tickValues={[1, 2, 3, 4]}\r\n              tickFormat={['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4']}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={x => \\`$\\${x / 1000}k\\`} />\r\n            <VictoryStack colorScale={'warm'}>\r\n              <VictoryBar data={data2012} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2013} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2014} x=\"quarter\" y=\"earnings\" />\r\n              <VictoryBar data={data2015} x=\"quarter\" y=\"earnings\" />\r\n            </VictoryStack>\r\n          </VictoryChart>\r\n       `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart theme={VictoryTheme.material} domainPadding={10}>\r\n          <VictoryBar\r\n            style={{ data: { fill: '#c43a31' } }}\r\n            data={data}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart theme={VictoryTheme.material} domainPadding={10}>\r\n            <VictoryBar\r\n              style={{ data: { fill: '#c43a31' } }}\r\n              data={data}\r\n              x=\"quarter\"\r\n              y=\"earnings\"\r\n              />\r\n              </VictoryChart>\r\n\r\n              `}\r\n          </code>\r\n        </pre>\r\n        <div>\r\n          <h3>Click Me</h3>\r\n          <VictoryBar\r\n            style={{\r\n              data: { fill: '#c43a31' },\r\n            }}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            events={[\r\n              {\r\n                target: 'data',\r\n                eventHandlers: {\r\n                  onClick: () => {\r\n                    return [\r\n                      {\r\n                        target: 'data',\r\n                        mutation: props => {\r\n                          const fill = props.style && props.style.fill;\r\n                          return fill === 'black'\r\n                            ? null\r\n                            : { style: { fill: 'black' } };\r\n                        },\r\n                      },\r\n                    ];\r\n                  },\r\n                },\r\n              },\r\n            ]}\r\n            data={data}\r\n          />\r\n        </div>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <div>\r\n          <h3>Click Me</h3>\r\n          <VictoryBar\r\n          style={{\r\n            data: { fill: '#c43a31' },\r\n          }}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          events={[\r\n            {\r\n              target: 'data',\r\n              eventHandlers: {\r\n                onClick: () => {\r\n                  return [\r\n                    {\r\n                      target: 'data',\r\n                      mutation: props => {\r\n                        const fill = props.style && props.style.fill;\r\n                        return fill === 'black'\r\n                        ? null\r\n                        : { style: { fill: 'black' } };\r\n                      },\r\n                    },\r\n                  ];\r\n                },\r\n              },\r\n            },\r\n          ]}\r\n          data={data}\r\n          />\r\n          </div>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryChart theme={VictoryTheme.material} domainPadding={{ y: 10 }}>\r\n          <VictoryBar\r\n            horizontal\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            style={{\r\n              data: { fill: '#c43a31' },\r\n            }}\r\n            data={data}\r\n          />\r\n        </VictoryChart>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryChart theme={VictoryTheme.material} domainPadding={{ y: 10 }}>\r\n            <VictoryBar\r\n              horizontal\r\n              x=\"quarter\"\r\n              y=\"earnings\"\r\n              style={{\r\n                data: { fill: '#c43a31' },\r\n              }}\r\n              data={data}\r\n              />\r\n              </VictoryChart>\r\n              `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={d => d.earnings}\r\n          style={{ labels: { fill: 'white' } }}\r\n          labelComponent={<VictoryLabel dy={30} />}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={(d) => d.earnings}\r\n          style={{ labels: { fill: \"white\" } }}\r\n          labelComponent={<VictoryLabel dy={30} />}\r\n          />\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          data={data}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          labels={d => `y: ${d.earnings}`}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n            data={data}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            labels={d => \\`y: \\${d.earnings}\\`}\r\n            />\r\n            `}\r\n          </code>\r\n        </pre>\r\n        <VictoryBar\r\n          style={{\r\n            data: {\r\n              fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              stroke: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              fillOpacity: 0.7,\r\n              strokeWidth: 3,\r\n            },\r\n            labels: {\r\n              fontSize: 15,\r\n              fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n            },\r\n          }}\r\n          x=\"quarter\"\r\n          y=\"earnings\"\r\n          data={data}\r\n          labels={d => d.quarter}\r\n        />\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <VictoryBar\r\n            style={{\r\n              data: {\r\n                fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n                stroke: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n                fillOpacity: 0.7,\r\n                strokeWidth: 3,\r\n              },\r\n              labels: {\r\n                fontSize: 15,\r\n                fill: d => (d.quarter === 3 ? '#000000' : '#c43a31'),\r\n              },\r\n            }}\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            data={data}\r\n            labels={d => d.quarter}\r\n            />\r\n            `}\r\n          </code>\r\n        </pre>\r\n        <h2>standalone</h2>\r\n        <p>type: boolean</p>\r\n        <p>VictoryBar uses the standard standalone prop.</p>\r\n        <p>\r\n          Read about it{' '}\r\n          <a href=\"https://formidable.com/open-source/victory/docs/common-props/#standalone\">\r\n            here\r\n          </a>\r\n        </p>\r\n        <p>\r\n          note: When VictoryBar is nested within a component like VictoryChart,\r\n          this prop will be set to false{' '}\r\n        </p>\r\n        <p>default: standalone={'{true}'}</p>\r\n        <svg width={300} height={300}>\r\n          <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n          <VictoryBar\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            standalone={false}\r\n            width={300}\r\n            height={300}\r\n            padding={{ left: 10, right: 10 }}\r\n            data={data}\r\n          />\r\n        </svg>\r\n        <pre>\r\n          <code>\r\n            {`\r\n          <svg width={300} height={300}>\r\n            <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n            <VictoryBar\r\n            x=\"quarter\"\r\n              y=\"earnings\"\r\n              standalone={false}\r\n              width={300}\r\n              height={300}\r\n              padding={{ left: 10, right: 10 }}\r\n              data={data}\r\n              />\r\n              </svg>\r\n          `}\r\n          </code>\r\n        </pre>\r\n        <svg width={300} height={300}>\r\n          <circle cx={150} cy={150} r={150} fill=\"#c43a31\" />\r\n          <VictoryArea\r\n            x=\"quarter\"\r\n            y=\"earnings\"\r\n            standalone={false}\r\n            width={300}\r\n            height={300}\r\n            padding={0}\r\n            data={data}\r\n          />\r\n        </svg>\r\n        <h2>y0</h2>\r\n        <p>type: string || integer || array[string] || function</p>\r\n        <p>\r\n          VictoryBar uses the standard y0 data accessor prop to set a baseline.\r\n        </p>\r\n        <p>\r\n          Read about it{' '}\r\n          <a href=\"https://formidable.com/open-source/victory/docs/common-props#y0\">\r\n            here\r\n          </a>\r\n        </p>\r\n        <VictoryChart domainPadding={30}>\r\n          <VictoryBar\r\n            // x=\"quarter\"\r\n            // y=\"earnings\"\r\n            data={sampleData}\r\n            y0={d => d.y - 1}\r\n          />\r\n        </VictoryChart>\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  BarChart,\r\n  Bar,\r\n  Brush,\r\n  ReferenceLine,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\nimport React, { Component } from 'react';\r\nconst data = [\r\n  { name: '1', uv: 300, pv: 456 },\r\n  { name: '2', uv: -145, pv: 230 },\r\n  { name: '3', uv: -100, pv: 345 },\r\n  { name: '4', uv: -8, pv: 450 },\r\n  { name: '5', uv: 100, pv: 321 },\r\n  { name: '6', uv: 9, pv: 235 },\r\n  { name: '7', uv: 53, pv: 267 },\r\n  { name: '8', uv: 252, pv: -378 },\r\n  { name: '9', uv: 79, pv: -210 },\r\n  { name: '10', uv: 294, pv: -23 },\r\n  { name: '12', uv: 43, pv: 45 },\r\n  { name: '13', uv: -74, pv: 90 },\r\n  { name: '14', uv: -71, pv: 130 },\r\n  { name: '15', uv: -117, pv: 11 },\r\n  { name: '16', uv: -186, pv: 107 },\r\n  { name: '17', uv: -16, pv: 926 },\r\n  { name: '18', uv: -125, pv: 653 },\r\n  { name: '19', uv: 222, pv: 366 },\r\n  { name: '20', uv: 372, pv: 486 },\r\n  { name: '21', uv: 182, pv: 512 },\r\n  { name: '22', uv: 164, pv: 302 },\r\n  { name: '23', uv: 316, pv: 425 },\r\n  { name: '24', uv: 131, pv: 467 },\r\n  { name: '25', uv: 291, pv: -190 },\r\n  { name: '26', uv: -47, pv: 194 },\r\n  { name: '27', uv: -415, pv: 371 },\r\n  { name: '28', uv: -182, pv: 376 },\r\n  { name: '29', uv: -93, pv: 295 },\r\n  { name: '30', uv: -99, pv: 322 },\r\n  { name: '31', uv: -52, pv: 246 },\r\n  { name: '32', uv: 154, pv: 33 },\r\n  { name: '33', uv: 205, pv: 354 },\r\n  { name: '34', uv: 70, pv: 258 },\r\n  { name: '35', uv: -25, pv: 359 },\r\n  { name: '36', uv: -59, pv: 192 },\r\n  { name: '37', uv: -63, pv: 464 },\r\n  { name: '38', uv: -91, pv: -2 },\r\n  { name: '39', uv: -66, pv: 154 },\r\n  { name: '40', uv: -50, pv: 186 },\r\n];\r\n\r\nexport default class BrushBar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  LabelList,\r\n  Legend,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst renderCustomizedLabel = props => {\r\n  const { x, y, width, value } = props;\r\n  const radius = 10;\r\n\r\n  return (\r\n    <g>\r\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#8884d8\" />\r\n      <text\r\n        x={x + width / 2}\r\n        y={y - radius}\r\n        fill=\"#fff\"\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"middle\"\r\n      >\r\n        {value.split(' ')[1]}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class CustomLabel extends Component {\r\n  state = {\r\n    data: [\r\n      { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n      { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n      { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n      { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n      { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n      { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n      { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n    ],\r\n    activeIndex: 0,\r\n  };\r\n\r\n  handleClick = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={this.state.data}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"pv\" fill=\"#8884d8\" minPointSize={5}>\r\n          <LabelList dataKey=\"name\" content={renderCustomizedLabel} />\r\n        </Bar>\r\n        <Bar dataKey=\"uv\" fill=\"#82ca9d\" minPointSize={10} />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\n\r\nclass CustomTooltip extends Component {\r\n  getIntroOfPage = label => {\r\n    if (label === 'Page A') {\r\n      return \"Page A is about men's clothing\";\r\n    } else if (label === 'Page B') {\r\n      return \"Page B is about women's dress\";\r\n    } else if (label === 'Page C') {\r\n      return \"Page C is about women's bag\";\r\n    } else if (label === 'Page D') {\r\n      return 'Page D is about household goods';\r\n    } else if (label === 'Page E') {\r\n      return 'Page E is about food';\r\n    } else if (label === 'Page F') {\r\n      return 'Page F is about baby food';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { active } = this.props;\r\n\r\n    if (active) {\r\n      const { payload, label } = this.props;\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n          <p className=\"intro\">{this.getIntroOfPage(label)}</p>\r\n          <p className=\"desc\">Anything you want can be displayed here.</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default class BarChartCustomTooltip extends Component {\r\n  render() {\r\n    return (\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={data}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend />\r\n        <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ReferenceArea,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  { name: 1, cost: 4.11, impression: 100 },\r\n  { name: 2, cost: 2.39, impression: 120 },\r\n  { name: 3, cost: 1.37, impression: 150 },\r\n  { name: 4, cost: 1.16, impression: 180 },\r\n  { name: 5, cost: 2.29, impression: 200 },\r\n  { name: 6, cost: 3, impression: 499 },\r\n  { name: 7, cost: 0.53, impression: 50 },\r\n  { name: 8, cost: 2.52, impression: 100 },\r\n  { name: 9, cost: 1.79, impression: 200 },\r\n  { name: 10, cost: 2.94, impression: 222 },\r\n  { name: 11, cost: 4.3, impression: 210 },\r\n  { name: 12, cost: 4.41, impression: 300 },\r\n  { name: 13, cost: 2.1, impression: 50 },\r\n  { name: 14, cost: 8, impression: 190 },\r\n  { name: 15, cost: 0, impression: 300 },\r\n  { name: 16, cost: 9, impression: 400 },\r\n  { name: 17, cost: 3, impression: 200 },\r\n  { name: 18, cost: 2, impression: 50 },\r\n  { name: 19, cost: 3, impression: 100 },\r\n  { name: 20, cost: 7, impression: 100 },\r\n];\r\n\r\nconst getAxisYDomain = (from, to, ref, offset) => {\r\n  const refData = data.slice(from - 1, to);\r\n  let [bottom, top] = [refData[0][ref], refData[0][ref]];\r\n  refData.forEach(d => {\r\n    if (d[ref] > top) top = d[ref];\r\n    if (d[ref] < bottom) bottom = d[ref];\r\n  });\r\n\r\n  return [(bottom | 0) - offset, (top | 0) + offset];\r\n};\r\n\r\nconst initialState = {\r\n  data,\r\n  left: 'dataMin',\r\n  right: 'dataMax',\r\n  refAreaLeft: '',\r\n  refAreaRight: '',\r\n  top: 'dataMax+1',\r\n  bottom: 'dataMin-1',\r\n  top2: 'dataMax+20',\r\n  bottom2: 'dataMin-20',\r\n  animation: true,\r\n};\r\n\r\nexport default class HighlightAndZoom extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  zoom() {\r\n    let { refAreaLeft, refAreaRight, data } = this.state;\r\n\r\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\r\n      this.setState(() => ({\r\n        refAreaLeft: '',\r\n        refAreaRight: '',\r\n      }));\r\n      return;\r\n    }\r\n\r\n    // xAxis domain\r\n    if (refAreaLeft > refAreaRight)\r\n      [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\r\n\r\n    // yAxis domain\r\n    const [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, 'cost', 1);\r\n    const [bottom2, top2] = getAxisYDomain(\r\n      refAreaLeft,\r\n      refAreaRight,\r\n      'impression',\r\n      50,\r\n    );\r\n\r\n    this.setState(() => ({\r\n      refAreaLeft: '',\r\n      refAreaRight: '',\r\n      data: data.slice(),\r\n      left: refAreaLeft,\r\n      right: refAreaRight,\r\n      bottom,\r\n      top,\r\n      bottom2,\r\n      top2,\r\n    }));\r\n  }\r\n\r\n  zoomOut() {\r\n    const { data } = this.state;\r\n    this.setState(() => ({\r\n      data: data.slice(),\r\n      refAreaLeft: '',\r\n      refAreaRight: '',\r\n      left: 'dataMin',\r\n      right: 'dataMax',\r\n      top: 'dataMax+1',\r\n      bottom: 'dataMin',\r\n      top2: 'dataMax+50',\r\n      bottom2: 'dataMin+50',\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      left,\r\n      right,\r\n      refAreaLeft,\r\n      refAreaRight,\r\n      top,\r\n      bottom,\r\n      top2,\r\n      bottom2,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"highlight-bar-charts\">\r\n        <button className=\"btn update\" onClick={this.zoomOut.bind(this)}>\r\n          Zoom Out\r\n        </button>\r\n\r\n        <p>Highlight / Zoom - able Line Chart</p>\r\n        <LineChart\r\n          width={800}\r\n          height={400}\r\n          data={data}\r\n          onMouseDown={e => this.setState({ refAreaLeft: e.activeLabel })}\r\n          onMouseMove={e =>\r\n            this.state.refAreaLeft &&\r\n            this.setState({ refAreaRight: e.activeLabel })\r\n          }\r\n          onMouseUp={this.zoom.bind(this)}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            allowDataOverflow={true}\r\n            dataKey=\"name\"\r\n            domain={[left, right]}\r\n            type=\"number\"\r\n          />\r\n          <YAxis\r\n            allowDataOverflow={true}\r\n            domain={[bottom, top]}\r\n            type=\"number\"\r\n            yAxisId=\"1\"\r\n          />\r\n          <YAxis\r\n            orientation=\"right\"\r\n            allowDataOverflow={true}\r\n            domain={[bottom2, top2]}\r\n            type=\"number\"\r\n            yAxisId=\"2\"\r\n          />\r\n          <Tooltip />\r\n          <Line\r\n            yAxisId=\"1\"\r\n            type=\"natural\"\r\n            dataKey=\"cost\"\r\n            stroke=\"#8884d8\"\r\n            animationDuration={300}\r\n          />\r\n          <Line\r\n            yAxisId=\"2\"\r\n            type=\"natural\"\r\n            dataKey=\"impression\"\r\n            stroke=\"#82ca9d\"\r\n            animationDuration={300}\r\n          />\r\n\r\n          {refAreaLeft && refAreaRight ? (\r\n            <ReferenceArea\r\n              yAxisId=\"1\"\r\n              x1={refAreaLeft}\r\n              x2={refAreaRight}\r\n              strokeOpacity={0.3}\r\n            />\r\n          ) : null}\r\n        </LineChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ReferenceLine,\r\n  Brush,\r\n  AreaChart,\r\n  Area,\r\n} from 'recharts';\r\nimport HighlightAndZoom from './HighlightAndZoom';\r\n\r\nconst data = [\r\n  { name: 'bob', age: 100, speed: 50 },\r\n  { name: 'bill', age: 200, speed: 30 },\r\n  { name: 'jill', age: 150, speed: 40 },\r\n  { name: 'job', age: 110, speed: 20 },\r\n];\r\nconst data2 = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\n\r\nexport default class RechartsLine extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Recharts Line Charts</h1>\r\n        <a href=\"http://recharts.org/en-US/examples/\">\r\n          More examples at Recharts.org\r\n        </a>\r\n\r\n        <LineChart width={400} height={400} data={data}>\r\n          <Line type=\"monotone\" dataKey=\"age\" stroke=\"#8884d8\" />\r\n          <YAxis />\r\n          <XAxis dataKey=\"name\" />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\r\n        >\r\n          <Line type=\"monotone\" dataKey=\"speed\" stroke=\"#8884d8\" />\r\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"pv\"\r\n            stroke=\"#8884d8\"\r\n            activeDot={{ r: 8 }}\r\n          />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <LineChart width={300} height={100} data={data2}>\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" strokeWidth={2} />\r\n        </LineChart>\r\n        <LineChart\r\n          layout=\"vertical\"\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis type=\"number\" />\r\n          <YAxis dataKey=\"name\" type=\"category\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line dataKey=\"pv\" stroke=\"#8884d8\" />\r\n          <Line dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <LineChart\r\n          width={600}\r\n          height={300}\r\n          data={data2}\r\n          margin={{ top: 20, right: 50, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine x=\"Page C\" stroke=\"red\" label=\"Max PV PAGE\" />\r\n          <ReferenceLine y={9800} label=\"Max\" stroke=\"red\" />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <div>\r\n          <h4>A demo of synchronized AreaCharts</h4>\r\n          <LineChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"uv\"\r\n              stroke=\"#8884d8\"\r\n              fill=\"#8884d8\"\r\n            />\r\n          </LineChart>\r\n          <p>Maybe some other content</p>\r\n          <LineChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"pv\"\r\n              stroke=\"#82ca9d\"\r\n              fill=\"#82ca9d\"\r\n            />\r\n            <Brush />\r\n          </LineChart>\r\n          <AreaChart\r\n            width={600}\r\n            height={200}\r\n            data={data2}\r\n            syncId=\"anyId\"\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"pv\"\r\n              stroke=\"#82ca9d\"\r\n              fill=\"#82ca9d\"\r\n            />\r\n          </AreaChart>\r\n        </div>\r\n        <HighlightAndZoom />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Area,\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  ReferenceLine,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport { ChartsWrapper } from '../Victory/Bar';\r\nimport BrushBar from './BrushBar';\r\nimport CustomLabel from './CustomLabel';\r\nimport {\r\n  default as BarChartCustomTooltip,\r\n  default as CustomEvent,\r\n} from './CustomTooltip';\r\nimport RechartsLine from './Line';\r\nconst data = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\nconst dataStackedBySign = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: -3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: -2000, pv: -9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: -1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: -3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\nexport default class Recharts extends Component {\r\n  state = {\r\n    activeIndex: 0,\r\n  };\r\n  handleClick(data, index) {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <h1>Recharts Bar Charts</h1>\r\n        <a href=\"http://recharts.org/en-US/examples/\">\r\n          More examples at Recharts.org\r\n        </a>\r\n        <BarChart width={150} height={40} data={data}>\r\n          <Bar dataKey=\"uv\" fill=\"#8884d8\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart width={150} height={40} data={data}>\r\n            <Bar dataKey=\"uv\" fill=\"#8884d8\" />\r\n          </BarChart>\r\n      `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n\r\n          `}\r\n        </pre>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n        `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"female\" stackId=\"a\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"male\" stackId=\"a\" fill=\"#82ca9d\" />\r\n          <Bar dataKey=\"uv\" fill=\"#ffc658\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"female\" stackId=\"a\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"male\" stackId=\"a\" fill=\"#82ca9d\" />\r\n            <Bar dataKey=\"uv\" fill=\"#ffc658\" />\r\n          </BarChart>\r\n`}\r\n        </pre>\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n          <BarChart\r\n            width={600}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <ReferenceLine y={0} stroke=\"#000\" />\r\n            <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n          `}\r\n        </pre>\r\n\r\n        <BrushBar />\r\n        <pre>\r\n          {`\r\n          <BrushBar />\r\n\r\n          `}\r\n        </pre>\r\n        <CustomEvent />\r\n        <pre>\r\n          {`\r\n        <CustomEvent />\r\n          `}\r\n        </pre>\r\n\r\n        <CustomLabel />\r\n        <pre>\r\n          {`\r\n        <CustomLabel />\r\n        `}\r\n        </pre>\r\n\r\n        <BarChart\r\n          width={600}\r\n          height={300}\r\n          data={dataStackedBySign}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" stackId=\"stack\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" stackId=\"stack\" />\r\n        </BarChart>\r\n        <pre>\r\n          {`\r\n        <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={dataStackedBySign}\r\n        stackOffset=\"sign\"\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <ReferenceLine y={0} stroke=\"#000\" />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" stackId=\"stack\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" stackId=\"stack\" />\r\n          </BarChart>\r\n          `}\r\n        </pre>\r\n\r\n        <ComposedChart\r\n          layout=\"vertical\"\r\n          width={600}\r\n          height={400}\r\n          data={data}\r\n          margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n        >\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <XAxis type=\"number\" />\r\n          <YAxis dataKey=\"name\" type=\"category\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        <pre>\r\n          {`\r\n        <ComposedChart\r\n        layout=\"vertical\"\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n        >\r\n        <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <XAxis type=\"number\" />\r\n        <YAxis dataKey=\"name\" type=\"category\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Area dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n        <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n        <Line dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        `}\r\n        </pre>\r\n\r\n        <ComposedChart\r\n          width={600}\r\n          height={400}\r\n          data={data}\r\n          margin={{ top: 20, right: 80, bottom: 20, left: 20 }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"name\"\r\n            label={{ value: 'Pages', position: 'insideBottomRight', offset: 0 }}\r\n          />\r\n          <YAxis\r\n            label={{ value: 'Index', angle: -90, position: 'insideLeft' }}\r\n          />\r\n          <Tooltip />\r\n          <Legend />\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <Area type=\"monotone\" dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n        </ComposedChart>\r\n        <pre>\r\n          {`\r\n        <ComposedChart\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        margin={{ top: 20, right: 80, bottom: 20, left: 20 }}\r\n        >\r\n        <XAxis\r\n        dataKey=\"name\"\r\n        label={{ value: 'Pages', position: 'insideBottomRight', offset: 0 }}\r\n        />\r\n        <YAxis\r\n        label={{ value: 'Index', angle: -90, position: 'insideLeft' }}\r\n          />\r\n          <Tooltip />\r\n          <Legend />\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <Area type=\"monotone\" dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n          </ComposedChart>\r\n          `}\r\n        </pre>\r\n\r\n        <BarChartCustomTooltip />\r\n        <pre>\r\n          {`\r\n        <BarChartCustomTooltip />\r\n          `}\r\n        </pre>\r\n\r\n        <RechartsLine />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Bar, { ChartsWrapper } from './Bar';\r\n\r\nexport default class Victory extends Component {\r\n  render() {\r\n    return (\r\n      <ChartsWrapper>\r\n        <Bar />\r\n      </ChartsWrapper>\r\n    );\r\n  }\r\n}\r\n","import { Router } from '@reach/router';\r\nimport React, { Component } from 'react';\r\nimport ECharts from './components/ECharts/ECharts';\r\nimport GoogleCharts from './components/GoogleCharts/GoogleCharts';\r\nimport Nivo from './components/Nivo/Nivo';\r\nimport ReactTimeSeries from './components/ReactTimeSeries/ReactTimeSeries';\r\nimport Recharts from './components/Recharts/Recharts';\r\nimport Victory from './components/Victory/Victory';\r\n\r\nexport const routes = [\r\n  { path: '/charts-playground/', name: 'Recharts' },\r\n  { path: '/charts-playground/ECharts', name: 'ECharts' },\r\n  { path: '/charts-playground/victory', name: 'Victory' },\r\n  { path: '/charts-playground/timeseries', name: 'React Time Series' },\r\n  { path: '/charts-playground/nivo', name: 'Nivo' },\r\n  { path: '/charts-playground/google', name: 'Google Charts' },\r\n];\r\n\r\nexport default class AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Recharts path=\"/charts-playground/\" />\r\n        <Victory path=\"/charts-playground/victory\" />\r\n        <ECharts path=\"/charts-playground/ECharts\" />\r\n        <ReactTimeSeries path=\"/charts-playground/timeseries\" />\r\n        <Nivo path=\"/charts-playground/nivo\" />\r\n        <GoogleCharts path=\"/charts-playground/google\" />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import { Link } from '@reach/router';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport AppRouter, { routes } from './AppRouter';\nconst AppWrapper = styled.div`\n  padding: 100px 40px;\n  margin: auto;\n  * {\n    margin: 0;\n  }\n  pre {\n    background: lightgrey;\n  }\n`;\nconst NavWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  font-family: 'Open Sans';\n  padding: 20px;\n  display: grid;\n  justify-items: center;\n  background: lightgrey;\n  grid-gap: 20px 10px;\n  grid-template-columns: repeat(auto-fit, minmax(130px, 1fr));\n  a {\n    text-decoration: none;\n    color: steelblue;\n    &:hover {\n      text-decoration: underline;\n    }\n    &.active {\n      font-weight: bold;\n    }\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <AppWrapper>\n        <AppRouter />\n        <NavWrapper>\n          {routes.map(route => (\n            <Link\n              key={route.path}\n              getProps={({ isCurrent }) =>\n                isCurrent ? { className: 'active' } : null\n              }\n              to={route.path}\n            >\n              {route.name}\n            </Link>\n          ))}\n        </NavWrapper>\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}